var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AccountController.html",[0,1.648,1,2.175]],["body/controllers/AccountController.html",[0,2.094,1,1.969,2,0.873,3,0.176,4,0.134,5,0.134,6,1.599,7,1.399,8,1.902,9,0.728,10,1.74,11,0.018,12,0.269,13,1.374,14,3.421,15,2.995,16,2.518,17,2.518,18,2.518,19,1.902,20,2.72,21,1.424,22,0.029,23,3.535,24,2.204,25,2.204,26,2.518,27,1.599,28,2.995,29,2.5,30,2.354,31,0.846,32,1.599,33,1.902,34,0.84,35,1.902,36,2.204,37,4.837,38,2.136,39,1.059,40,0.84,41,0.909,42,4.757,43,2.204,44,2.097,45,3.133,46,2.061,47,2.995,48,1.599,49,3.122,50,3.574,51,4.084,52,3.706,53,4.084,54,4.084,55,1.902,56,1.902,57,1.902,58,3.365,59,4.859,60,1.599,61,3.093,62,1.902,63,1.599,64,1.902,65,2.518,66,3.706,67,2.518,68,2.995,69,2.995,70,1.902,71,2.72,72,3.574,73,1.902,74,1.902,75,1.902,76,0.524,77,2.518,78,1.599,79,1.599,80,1.399,81,1.599,82,1.902,83,2.518,84,2.995,85,1.902,86,1.902,87,0.479,88,3.535,89,3.845,90,3.845,91,0.747,92,1.131,93,1.599,94,1.599,95,1.25,96,1.25,97,1.25,98,1.399,99,0.873,100,1.599,101,1.701,102,1.271,103,1.599,104,1.491,105,1.599,106,1.781,107,1.399,108,1.032,109,1.599,110,0.873,111,2.204,112,1.131,113,1.599,114,0.644,115,1.599,116,1.902,117,1.902,118,0.176,119,1.25,120,1.068,121,2.518,122,0.598,123,0.556,124,1.599,125,2.011,126,2.011,127,1.131,128,3.535,129,1.399,130,2.5,131,0.411,132,1.599,133,1.599,134,1.902,135,3.093,136,4.163,137,2.518,138,3.535,139,1.006,140,2.235,141,1.902,142,3.115,143,3.741,144,1.902,145,3.535,146,2.094,147,3.093,148,3.574,149,3.115,150,1.902,151,1.399,152,1.701,153,3.115,154,1.902,155,2.518,156,1.599,157,3.115,158,3.115,159,1.902,160,1.902,161,1.902,162,1.902,163,0.013,164,0.013]],["title/interfaces/AccountEntity.html",[165,1.404,166,1.968]],["body/interfaces/AccountEntity.html",[3,0.394,4,0.301,5,0.301,12,0.603,22,0.028,31,0.9,40,1.211,41,1.375,76,0.394,114,2.051,118,0.394,131,1.421,163,0.023,164,0.023,165,1.807,166,3.158,167,1.807,168,3.581,169,3.907,170,5.787,171,1.148,172,3.982,173,3.603,174,3.982,175,3.287,176,2.274,177,4.178,178,2.8,179,2.8,180,2.8,181,2.8]],["title/modules/AccountModule.html",[182,1.041,183,2.175]],["body/modules/AccountModule.html",[1,3.71,2,2.355,3,0.373,4,0.285,5,0.285,10,1.095,11,0.017,22,0.029,76,0.597,87,1.016,101,2.877,102,1.711,104,2.555,118,0.373,163,0.022,164,0.022,178,2.651,179,2.651,180,2.651,181,2.651,182,1.614,183,4.312,184,1.47,185,2.355,186,3.391,187,3.391,188,3.391,189,3.402,190,3.402,191,2.784,192,2.188,193,2.008,194,4.033,195,3.373,196,3.71,197,3.373,198,4.033,199,4.033,200,3.391,201,4.314,202,3.391,203,4.033,204,4.033,205,2.967,206,3.391]],["title/injectables/AccountRepository.html",[190,1.796,207,1.207]],["body/injectables/AccountRepository.html",[3,0.267,4,0.204,5,0.204,9,0.731,10,1.772,11,0.02,12,0.409,13,1.879,14,3.743,22,0.029,29,2.435,30,1.737,31,0.775,34,1.093,38,1.754,39,1.378,40,1.093,41,1.183,44,2.178,45,3.846,46,2.198,50,3.012,72,3.012,76,0.48,77,3.442,87,0.727,104,2.37,118,0.267,119,2.691,120,1.278,122,1.288,123,0.843,126,1.565,131,1.229,152,2.741,163,0.017,164,0.017,166,3.476,178,1.896,179,1.896,180,3.129,181,3.129,190,2.222,201,4.356,207,1.493,208,1.565,209,2.425,210,3.812,211,3.442,212,4.095,213,2.885,214,2.885,215,4.095,216,2.885,217,5.684,218,5.974,219,3.736,220,3.812,221,4.095,222,2.885,223,4.095,224,2.885,225,3.012,226,3.442,227,4.095,228,2.885,229,2.425,230,2.425,231,1.896,232,2.885,233,2.122,234,2.885,235,2.885,236,2.885,237,2.885]],["title/injectables/AccountService.html",[104,1.648,207,1.207]],["body/injectables/AccountService.html",[3,0.197,4,0.15,5,0.15,9,0.575,10,1.716,11,0.02,12,0.301,13,1.5,14,3.738,16,2.748,17,2.748,18,2.748,20,2.657,22,0.029,29,1.944,30,2.508,31,0.751,34,1.093,38,1.107,39,1.335,40,1.093,41,1.146,44,2.088,45,3.599,46,2.159,48,2.748,49,2.875,50,2.405,58,2.405,60,2.748,71,2.657,72,2.405,76,0.519,87,0.536,104,1.628,106,1.265,108,2.875,110,0.976,111,2.405,114,0.72,118,0.197,119,2.149,120,1.126,122,1.405,123,0.622,126,1.154,131,1.1,135,2.929,136,4.349,139,1.213,140,0.903,152,2.51,163,0.014,164,0.014,166,1.944,171,0.707,172,1.399,173,1.265,174,1.399,175,1.154,177,2.149,190,2.424,200,1.789,207,1.192,208,1.154,210,2.405,219,2.936,220,3.287,225,2.405,226,1.789,230,1.789,231,1.399,233,1.565,238,1.789,239,4.455,240,3.269,241,3.269,242,3.269,243,2.128,244,2.128,245,3.981,246,3.269,247,2.128,248,3.347,249,2.128,250,3.269,251,3.026,252,2.128,253,2.128,254,3.269,255,2.128,256,3.269,257,2.128,258,0.836,259,1.154,260,2.128,261,2.128,262,2.128,263,2.128,264,1.565,265,1.565,266,1.789,267,2.128,268,3.981,269,3.981,270,2.128,271,5.089,272,5.3,273,2.128,274,2.867,275,2.128,276,2.128,277,2.128,278,2.128,279,3.981,280,2.128,281,2.128,282,2.128,283,3.269,284,2.128,285,3.269,286,3.981,287,3.269,288,3.269,289,3.981,290,2.128,291,2.128,292,1.565,293,2.128,294,2.128,295,2.128]],["title/modules/AppModule.html",[182,1.041,296,2.175]],["body/modules/AppModule.html",[2,1.754,3,0.354,4,0.27,5,0.27,9,0.492,11,0.016,22,0.029,76,0.597,87,0.963,118,0.354,139,1.037,163,0.021,164,0.021,182,1.831,184,2.122,185,2.275,189,3.354,191,2.69,192,2.074,193,1.903,195,2.512,197,3.258,205,3.647,206,4.167,296,4.063,297,3.213,298,3.822,299,2.812,300,3.616,301,4.957,302,3.822,303,5.502,304,3.213,305,3.822,306,3.213,307,2.948,308,3.822,309,3.647,310,3.822,311,3.258,312,3.822,313,3.822,314,3.822,315,3.822,316,3.213,317,3.213,318,1.502,319,3.647,320,3.213,321,3.213,322,1.502,323,2.812,324,3.822,325,3.822,326,3.822,327,3.213,328,3.822,329,2.985,330,2.812,331,3.822]],["title/controllers/BalanceController.html",[0,1.648,196,2.175]],["body/controllers/BalanceController.html",[0,2.127,2,0.898,3,0.476,4,0.138,5,0.138,7,1.439,9,0.72,10,1.727,11,0.018,12,0.277,13,1.406,14,3.252,21,1.278,22,0.029,23,3.174,24,3.142,25,3.142,26,3.591,27,2.575,29,2.54,30,2.419,31,0.842,32,2.575,34,0.754,36,3.618,38,1.665,39,0.951,40,0.754,41,0.816,42,5.214,44,2.04,45,2.924,46,1.812,49,3.094,53,4.134,58,4.499,61,3.142,63,1.645,76,0.518,78,1.645,79,1.645,80,1.439,81,1.645,83,1.645,87,0.493,88,2.575,89,3.591,90,3.591,91,0.769,92,1.164,93,1.645,94,1.645,95,1.286,96,1.286,97,1.286,98,1.439,99,0.898,100,1.645,101,1.732,102,1.299,103,1.645,104,1.525,105,1.645,107,1.439,108,2.789,109,1.645,110,2.358,111,1.439,112,1.822,113,1.645,114,1.989,115,1.645,118,0.181,119,1.286,120,1.201,121,2.575,122,0.615,123,0.572,124,1.645,125,2.048,126,2.048,127,1.164,128,3.174,129,4.322,130,2.245,131,0.662,132,2.575,133,2.575,135,2.777,136,4.421,137,2.575,138,3.898,139,1.259,140,1.299,142,1.645,143,4.116,145,3.174,146,2.127,147,3.142,148,3.781,149,3.898,153,1.645,155,3.174,156,3.174,157,3.174,158,1.645,163,0.013,164,0.013,196,2.013,274,1.822,332,1.645,333,1.957,334,3.775,335,3.063,336,2.575,337,1.957,338,1.957,339,1.957,340,3.063,341,4.918,342,4.134,343,3.618,344,1.957,345,1.957,346,1.957,347,1.957,348,2.575,349,1.957,350,1.957,351,1.957,352,3.063,353,1.957,354,1.957,355,3.775,356,1.957,357,1.957,358,1.957,359,1.957,360,1.957,361,1.957,362,1.957,363,1.957,364,1.957,365,1.957,366,1.957,367,1.957]],["title/modules/CommonModule.html",[182,1.041,189,1.796]],["body/modules/CommonModule.html",[3,0.406,4,0.31,5,0.31,11,0.019,22,0.029,76,0.543,87,1.104,118,0.406,163,0.023,164,0.023,182,1.7,184,1.598,185,2.48,189,3.606,191,2.933,192,2.378,193,2.182,197,3.553,368,3.684,369,3.684,370,3.684,371,3.991,372,3.991,373,4.382,374,3.977,375,5.405]],["title/classes/CreateAccountReposnseDto.html",[11,0.014,376,2.435]],["body/classes/CreateAccountReposnseDto.html",[3,0.364,4,0.278,5,0.278,9,0.717,10,1.513,11,0.021,12,0.556,21,1.33,22,0.029,31,0.715,34,1.008,38,2.108,39,0.99,40,0.785,41,0.85,76,0.467,91,1.544,118,0.364,120,0.918,123,1.629,131,1.206,139,1.066,152,2.943,163,0.021,164,0.021,171,1.369,318,1.544,322,1.544,376,4.328,377,1.544,378,3.664,379,2.582,380,2.513,381,5.046,382,2.581,383,2.582,384,2.513,385,2.513,386,2.513,387,3.001,388,1.544,389,1.803,390,1.667,391,3.303,392,1.956,393,1.956,394,1.956,395,1.956]],["title/classes/CreateAccountRequestDTO.html",[11,0.014,20,1.968]],["body/classes/CreateAccountRequestDTO.html",[3,0.293,4,0.224,5,0.224,9,0.728,10,1.705,11,0.019,12,0.448,20,2.598,21,1.827,22,0.029,31,0.802,34,1.131,38,2.217,39,0.797,40,1.24,41,0.684,76,0.463,91,1.244,118,0.293,120,0.739,123,1.462,131,1.297,139,0.859,163,0.019,164,0.019,171,1.297,173,3.367,175,3.317,258,1.717,318,1.244,322,1.244,329,1.717,377,1.244,378,3.848,380,2.176,382,2.401,384,2.819,385,2.819,386,2.176,387,3.209,388,1.244,389,1.452,390,1.343,392,1.576,393,1.576,394,1.576,395,1.576,396,1.717,397,4.018,398,3.673,399,3.681,400,2.661,401,2.371,402,2.329,403,4.207,404,2.661,405,3.289,406,3.165,407,2.661,408,2.329,409,2.329,410,2.081,411,2.329,412,2.329,413,2.329,414,3.681,415,3.681,416,2.329]],["title/classes/DepositMoneyRequestDTO.html",[11,0.014,108,1.796]],["body/classes/DepositMoneyRequestDTO.html",[3,0.365,4,0.278,5,0.278,9,0.65,10,1.372,11,0.021,12,0.558,21,1.333,22,0.029,31,0.716,34,1.01,38,1.993,39,0.992,40,0.787,41,0.851,76,0.468,91,1.547,108,2.742,110,2.794,114,1.711,118,0.365,120,0.92,123,1.631,131,0.851,139,1.069,163,0.021,164,0.021,171,1.37,176,1.986,251,3.816,318,1.547,322,1.547,377,1.547,380,2.516,382,2.583,384,2.516,385,2.516,386,2.516,388,1.547,389,1.807,390,1.67,392,1.961,393,1.961,394,1.961,395,1.961,396,2.136,417,4.106,418,4.248,419,2.897,420,4.248,421,3.718]],["title/classes/EnvironmentVariables.html",[11,0.014,422,2.435]],["body/classes/EnvironmentVariables.html",[3,0.345,4,0.263,5,0.263,9,0.479,11,0.023,12,0.528,21,1.84,22,0.029,30,1.581,31,0.77,34,1.086,44,1.359,46,1.581,76,0.452,118,0.345,120,0.871,139,1.324,148,2.743,163,0.021,164,0.021,171,1.055,176,2.136,219,2.45,251,2.901,258,2.136,259,2.95,329,2.023,377,1.465,388,1.465,401,2.646,410,4.111,422,3.588,423,2.743,424,3.588,425,4.878,426,3.999,427,3.999,428,3.999,429,4.878,430,3.728,431,5.767,432,3.728,433,3.206,434,4.878,435,3.588,436,3.728,437,3.728,438,3.134,439,3.728,440,3.134,441,4.242,442,3.134,443,3.728,444,2.217,445,3.134,446,4.878,447,3.728,448,3.728,449,3.134,450,3.728,451,3.728,452,3.728,453,3.728,454,2.743,455,3.728]],["title/classes/GetUserAccountRequestDTO.html",[11,0.014,49,1.796]],["body/classes/GetUserAccountRequestDTO.html",[3,0.369,4,0.282,5,0.282,9,0.655,10,1.524,11,0.022,12,0.565,21,1.351,22,0.029,31,0.722,34,1.018,38,2.117,39,1.005,40,0.797,41,0.863,49,2.765,76,0.472,91,1.568,118,0.369,120,0.932,123,1.641,131,1.214,139,1.083,152,2.953,163,0.022,164,0.022,171,1.374,318,1.568,322,1.568,377,1.568,380,2.537,382,2.593,383,2.622,384,2.537,385,2.537,386,2.537,387,3.03,388,1.568,389,1.83,390,1.692,392,1.986,393,1.986,394,1.986,395,1.986,396,2.164,418,4.284,456,3.691]],["title/classes/GetUserAccountResponseDTO.html",[11,0.014,106,1.968]],["body/classes/GetUserAccountResponseDTO.html",[3,0.235,4,0.179,5,0.179,9,0.757,10,1.742,11,0.016,12,0.36,21,1.954,22,0.029,31,0.834,34,1.177,38,2.209,39,0.64,40,1.177,41,0.549,76,0.41,91,0.998,106,2.221,114,2.027,118,0.235,120,0.593,123,1.294,131,1.274,139,0.689,152,2.648,163,0.016,164,0.016,171,1.216,172,3.209,173,3.094,174,3.209,175,3.131,176,1.467,177,3.793,258,1.467,318,0.998,322,0.998,329,1.378,343,4.003,377,0.998,380,1.859,382,2.207,383,1.669,384,2.932,385,2.932,386,2.709,387,3.094,388,0.998,389,1.165,390,1.077,392,1.265,393,1.265,394,1.265,395,1.265,397,3.793,399,3.258,400,2.135,401,2.026,402,1.868,403,3.723,405,2.911,408,1.868,409,1.868,410,1.669,411,1.868,412,1.868,413,1.868,414,3.258,415,3.258,416,1.868,419,1.868,421,2.747,456,3.936,457,1.868,458,3.734,459,3.734,460,3.734,461,4.105,462,2.54,463,2.54,464,2.54,465,2.54,466,2.54,467,4.883,468,2.54,469,2.54,470,2.54,471,4.429,472,2.135]],["title/controllers/HealthController.html",[0,1.648,473,2.175]],["body/controllers/HealthController.html",[0,2.887,2,1.736,3,0.507,4,0.267,5,0.267,7,2.783,9,0.486,11,0.025,12,0.536,13,2.259,21,1.281,22,0.029,34,0.756,44,1.795,46,1.604,76,0.456,87,0.953,118,0.35,120,1.15,122,1.19,123,1.105,125,2.052,130,3.665,131,1.184,140,2.322,146,2.452,163,0.021,164,0.021,233,2.783,473,3.236,474,3.18,475,5.277,476,5.182,477,3.782,478,3.782,479,4.924,480,4.924,481,4.924,482,5.799,483,4.924,484,3.262,485,4.924,486,4.924,487,4.924,488,2.783,489,3.782,490,3.782,491,4.139]],["title/modules/HealthModule.html",[182,1.041,492,2.435]],["body/modules/HealthModule.html",[2,2.616,3,0.443,4,0.338,5,0.338,11,0.02,22,0.029,76,0.584,87,1.205,118,0.443,163,0.024,164,0.024,182,1.793,184,1.744,197,3.145,473,4.003,488,3.52,492,4.194,493,4.784,494,5.701,495,4.022,496,5.701,497,4.784]],["title/interfaces/HttpResponse.html",[99,1.519,165,1.404]],["body/interfaces/HttpResponse.html",[3,0.359,4,0.274,5,0.274,9,0.798,12,0.549,22,0.029,31,0.929,99,2.297,118,0.359,129,3.682,130,3.805,131,1.398,140,2.714,163,0.021,164,0.021,165,1.645,167,1.645,171,1.082,176,2.177,274,3.69,433,4.285,484,2.715,498,3.261,499,3.261,500,4.565,501,4.207,502,5.005,503,5.005,504,5.855,505,4.207,506,5.005,507,5.005,508,5.005,509,3.682,510,5.005]],["title/classes/HttpResponseException.html",[11,0.014,92,1.968]],["body/classes/HttpResponseException.html",[3,0.392,4,0.3,5,0.3,9,0.681,11,0.018,22,0.029,31,0.6,34,0.847,39,1.068,40,0.847,41,0.917,76,0.49,87,1.068,92,3.149,99,2.776,118,0.392,120,0.99,122,1.666,123,1.239,140,2.693,163,0.022,164,0.022,167,1.798,169,3.896,182,1.666,274,3.149,377,1.666,484,3.533,511,4.452,512,3.564,513,3.896,514,4.45,515,3.896,516,5.775,517,5.295,518,4.24,519,5.295,520,4.24,521,4.24,522,5.295]],["title/modules/HttpResponseModule.html",[182,1.041,371,1.968]],["body/modules/HttpResponseModule.html",[3,0.426,4,0.325,5,0.325,11,0.02,22,0.028,76,0.516,87,1.16,101,3.099,118,0.426,163,0.024,164,0.024,182,1.752,184,1.678,185,2.556,191,3.022,192,2.498,193,2.292,195,3.661,371,3.897,374,4.098,523,3.87,524,4.603,525,3.87,526,4.603,527,4.603,528,3.386]],["title/injectables/HttpResponseService.html",[101,1.519,207,1.207]],["body/injectables/HttpResponseService.html",[3,0.259,4,0.198,5,0.198,9,0.833,11,0.012,12,0.397,13,1.84,22,0.029,31,0.855,34,1.022,39,1.288,40,1.022,41,1.105,44,2.161,46,2.168,76,0.433,80,2.061,87,0.706,99,2.346,101,1.84,118,0.259,120,1.354,122,1.261,125,3.274,130,3.883,131,1.354,139,0.76,140,2.514,163,0.017,164,0.017,167,1.188,176,2.46,207,1.462,208,1.52,225,4.141,248,2.355,258,1.101,259,1.52,274,3.525,322,1.84,323,3.445,484,3.396,500,4.605,529,4.548,530,2.355,531,3.937,532,4.009,533,4.009,534,4.009,535,2.801,536,2.801,537,4.009,538,4.009,539,5.112,540,4.009,541,4.009,542,2.801,543,4.009,544,2.801,545,4.009,546,2.801,547,2.801,548,4.683,549,4.683,550,2.801,551,2.801,552,2.801,553,2.801,554,2.801,555,2.801,556,2.801]],["title/injectables/LoggerInterceptor.html",[207,1.207,311,2.175]],["body/injectables/LoggerInterceptor.html",[3,0.267,4,0.204,5,0.204,9,0.612,11,0.012,12,0.409,13,1.879,22,0.029,30,1.737,31,0.674,34,0.951,39,1.032,40,0.818,41,0.885,43,3.502,44,1.889,46,1.737,76,0.507,87,0.727,102,2.019,118,0.267,120,1.21,122,1.288,125,3.084,126,2.583,127,2.831,139,1.673,140,2.019,146,2.039,163,0.017,164,0.017,171,0.885,176,1.87,207,1.493,208,1.565,229,4.002,231,1.896,258,1.134,259,1.565,311,2.691,484,3.084,513,2.122,528,2.122,557,2.425,558,4.778,559,5.684,560,5.181,561,4.095,562,4.095,563,5.846,564,5.684,565,5.181,566,2.885,567,5.181,568,4.395,569,4.095,570,4.095,571,6.077,572,2.885,573,3.442,574,3.442,575,2.122,576,3.442,577,4.095,578,2.885,579,4.095,580,4.095,581,2.885,582,2.122,583,4.76,584,4.76,585,4.095,586,2.885,587,4.095,588,4.095,589,2.885,590,2.885,591,4.095,592,2.885,593,2.885,594,2.885,595,2.885,596,2.885,597,2.885,598,4.095,599,2.885,600,4.095,601,2.885,602,2.885,603,2.885]],["title/modules/LoggerModule.html",[182,1.041,372,1.968]],["body/modules/LoggerModule.html",[3,0.426,4,0.325,5,0.325,11,0.02,22,0.028,76,0.516,87,1.16,102,2.864,118,0.426,131,0.995,163,0.024,164,0.024,182,1.752,184,1.678,185,2.556,191,3.022,192,2.498,193,2.292,195,3.661,372,3.897,374,4.098,528,3.386,604,3.87,605,3.87,606,3.87,607,4.603]],["title/injectables/LoggerService.html",[102,1.404,207,1.207]],["body/injectables/LoggerService.html",[3,0.201,4,0.153,5,0.153,9,0.708,11,0.009,12,0.307,13,1.523,22,0.029,29,1.974,30,1.408,31,0.815,34,1.15,39,1.387,40,1.1,41,1.245,44,2.057,46,1.71,76,0.307,87,0.547,102,2.063,118,0.201,120,1.432,122,1.044,123,1.178,125,3.061,126,2.783,127,3.613,131,1.425,143,1.597,146,3.079,163,0.014,164,0.014,171,0.718,207,1.21,208,1.178,329,1.178,500,4.912,513,1.597,558,4.84,568,4.369,575,3.579,608,1.825,609,3.32,610,4.031,611,3.32,612,6.133,613,4.514,614,2.791,615,3.32,616,4.514,617,3.32,618,3.32,619,3.32,620,3.32,621,2.171,622,3.32,623,6.575,624,2.171,625,5.939,626,3.32,627,2.171,628,3.32,629,3.32,630,2.171,631,3.32,632,3.32,633,3.32,634,2.171,635,3.32,636,2.171,637,3.32,638,2.171,639,3.32,640,2.171,641,3.32,642,3.32,643,2.171,644,2.171,645,2.171,646,2.171,647,2.171,648,2.171,649,2.171,650,2.171,651,2.171,652,2.171,653,2.171,654,2.171,655,2.171,656,2.171,657,1.825]],["title/classes/ShowBalanceReponseDTO.html",[11,0.014,112,1.968]],["body/classes/ShowBalanceReponseDTO.html",[3,0.366,4,0.279,5,0.279,9,0.652,10,1.601,11,0.022,12,0.56,21,1.339,22,0.029,31,0.718,34,1.013,38,1.996,39,0.996,40,0.79,41,0.855,76,0.469,91,1.554,112,3.013,114,2.229,118,0.366,120,0.924,123,1.634,131,0.855,139,1.073,163,0.022,164,0.022,171,1.371,176,1.991,318,1.554,322,1.554,377,1.554,379,2.599,380,2.523,382,2.586,384,2.523,385,2.523,386,2.523,388,1.554,389,1.815,390,1.677,392,1.969,393,1.969,394,1.969,395,1.969,419,2.909,421,3.728,658,4.114,659,5.067,660,5.067]],["title/classes/UpdateAccountRequestDTO.html",[11,0.014,71,1.968]],["body/classes/UpdateAccountRequestDTO.html",[3,0.292,4,0.223,5,0.223,9,0.727,10,1.657,11,0.018,12,0.446,21,1.823,22,0.029,31,0.8,34,1.129,38,2.216,39,0.793,40,1.239,41,0.681,71,2.589,76,0.462,91,1.237,114,1.474,118,0.292,120,0.736,123,1.458,131,1.296,139,0.855,152,2.802,163,0.018,164,0.018,171,1.296,173,3.361,175,1.709,258,1.711,318,1.237,322,1.237,329,1.709,343,3.203,377,1.237,380,2.168,382,2.397,383,2.07,384,2.814,385,2.168,386,2.485,387,3.202,388,1.237,389,1.445,390,1.336,392,1.568,393,1.568,394,1.568,395,1.568,396,1.709,397,4.013,398,3.66,399,3.671,401,2.362,402,2.317,404,2.647,405,3.28,407,2.647,408,2.317,409,2.317,410,3.539,411,2.317,412,2.317,413,2.317,414,3.203,415,3.203,416,2.317,661,4.3,662,3.149,663,4.354,664,3.149,665,2.317]],["title/interfaces/ValidationPipeOptions.html",[165,1.404,666,2.435]],["body/interfaces/ValidationPipeOptions.html",[3,0.388,4,0.296,5,0.296,9,0.539,11,0.018,12,0.593,22,0.029,31,0.813,41,1.369,76,0.388,118,0.388,146,2.618,163,0.022,164,0.022,165,1.778,167,1.778,169,3.868,171,1.137,388,1.647,424,3.868,444,3.126,449,3.523,514,3.868,666,3.868,667,3.523,668,3.455,669,5.257,670,5.257,671,5.745,672,6.024,673,6.024,674,6.024,675,6.332,676,5.257,677,5.257,678,5.257,679,5.257,680,5.257]],["title/interfaces/VirtualBankOptions.html",[165,1.404,681,2.175]],["body/interfaces/VirtualBankOptions.html",[3,0.341,4,0.26,5,0.26,9,0.474,12,0.522,22,0.029,31,0.765,34,0.967,44,1.343,76,0.341,98,2.71,110,2.634,118,0.5,139,1,163,0.021,164,0.021,165,1.562,167,1.562,171,1.046,176,2.515,251,2.878,307,3.214,401,3.32,424,2.71,426,4.502,427,4.502,428,4.502,433,4.022,435,3.56,444,2.19,681,4.022,682,2.71,683,4.839,684,4.543,685,3.56,686,4.068,687,4.068,688,4.839,689,4.839,690,4.839,691,4.068,692,4.839,693,4.839,694,4.839,695,3.56,696,4.839,697,3.683,698,3.683,699,3.096,700,3.096,701,3.096]],["title/coverage.html",[702,3.787]],["body/coverage.html",[0,2.416,1,1.965,5,0.211,6,2.513,10,1.685,11,0.026,20,1.778,22,0.029,30,1.268,31,0.423,49,1.622,71,1.778,92,1.778,95,1.965,96,1.965,97,1.965,99,1.372,101,1.372,102,1.268,104,1.488,106,1.778,108,1.622,110,1.927,112,1.778,114,1.421,163,0.018,164,0.018,165,2.233,166,1.778,168,2.513,190,1.622,196,1.965,207,2.021,209,2.513,238,2.513,265,2.199,299,2.199,307,1.778,309,2.199,311,1.965,319,2.199,332,2.513,376,2.199,378,3.459,379,3.459,390,2.505,396,3.27,417,3.089,422,2.199,423,3.089,444,3.585,454,2.199,456,3.459,457,3.089,473,1.965,474,2.513,498,2.513,499,2.513,511,2.513,512,2.513,529,2.513,530,2.513,557,2.513,608,2.513,658,3.089,661,3.089,666,2.199,667,2.513,681,1.965,682,3.089,695,2.199,702,2.513,703,2.199,704,2.989,705,2.989,706,6.726,707,4.199,708,5.263,709,4.199,710,4.853,711,4.853,712,6.127,713,6.53,714,2.989,715,5.263,716,4.853,717,2.989,718,2.989,719,2.989,720,2.513,721,4.661,722,2.513,723,2.989,724,2.989,725,2.989,726,2.513,727,2.989,728,2.513,729,2.513,730,2.989,731,2.513]],["title/dependencies.html",[185,1.825,732,2.038]],["body/dependencies.html",[11,0.021,14,2.292,22,0.029,87,0.971,91,1.515,163,0.021,164,0.021,178,2.533,179,2.533,180,2.533,181,2.533,185,1.769,231,2.533,239,3.24,304,3.24,306,3.24,316,3.24,317,3.24,330,2.836,388,1.515,438,3.24,488,2.836,495,3.24,573,3.24,582,3.667,733,3.854,734,3.854,735,3.854,736,3.854,737,3.854,738,3.854,739,5.524,740,3.854,741,3.854,742,3.854,743,3.854,744,3.854,745,4.984,746,3.854,747,3.854,748,3.854,749,3.854,750,3.854,751,3.854,752,3.854,753,3.854,754,3.854,755,3.854,756,3.854,757,3.854,758,3.854,759,3.854,760,3.854,761,3.854,762,3.854,763,3.854,764,5.524,765,3.854,766,3.854,767,4.984,768,3.854,769,3.854,770,3.854,771,3.854,772,3.854,773,3.854,774,3.854,775,3.854,776,3.854,777,3.854,778,3.854,779,3.854,780,3.24,781,3.854,782,3.24,783,3.854,784,3.854,785,3.24,786,3.854,787,3.854,788,3.854,789,3.854,790,3.854,791,3.854,792,3.854,793,3.854,794,3.24,795,3.854,796,3.854]],["title/miscellaneous/functions.html",[797,1.82,798,3.343]],["body/miscellaneous/functions.html",[9,0.78,12,0.506,22,0.028,24,2.63,25,2.63,31,0.859,39,1.529,40,1.213,41,1.312,43,2.63,44,2.068,45,2.821,65,3.005,95,3.118,96,3.118,97,3.118,122,1.909,127,3.785,131,1.026,140,1.516,146,3.083,147,2.63,163,0.02,164,0.02,176,2.471,219,3.118,258,1.405,259,1.94,265,3.49,300,2.35,309,3.49,382,2.574,423,2.63,440,4.477,441,3.49,442,3.005,445,3.005,484,2.889,514,3.49,575,2.63,668,2.35,695,3.918,720,3.005,721,3.005,722,3.988,728,3.005,729,4.477,797,2.35,798,3.005,799,3.575,800,3.575,801,5.904,802,3.575,803,3.005,804,3.575,805,3.575,806,3.575,807,4.745,808,3.575,809,3.575,810,3.575,811,3.575,812,3.575,813,3.575,814,3.005,815,4.745,816,4.745,817,3.575,818,3.575,819,4.745,820,3.575,821,4.745,822,3.575,823,3.005,824,3.575]],["title/index.html",[12,0.392,825,2.328,826,2.328]],["body/index.html",[2,0.858,4,0.209,10,0.995,21,0.633,22,0.029,30,0.793,36,2.697,37,1.572,38,0.633,61,1.376,67,1.572,99,0.858,107,1.376,110,1.912,114,1.241,122,1.153,151,2.175,163,0.013,164,0.013,167,0.793,184,1.078,202,1.572,210,1.376,211,1.572,258,0.735,264,2.175,266,1.572,292,2.175,300,3.766,318,1.637,327,3.502,330,1.376,336,2.485,348,1.572,420,2.485,433,1.229,435,3.065,441,2.697,454,1.376,461,3.082,475,1.572,476,1.572,491,3.082,501,1.572,505,2.485,509,3.549,515,2.175,531,2.485,568,3.065,574,1.572,665,1.376,684,2.485,685,1.376,686,1.572,691,2.485,703,3.338,731,1.572,732,2.175,780,1.572,782,1.572,785,1.572,794,1.572,803,1.572,823,1.572,827,5.729,828,4.538,829,1.572,830,2.175,831,4.824,832,3.666,833,5.633,834,4.166,835,5.633,836,5.238,837,3.666,838,2.957,839,3.666,840,4.538,841,2.957,842,1.87,843,2.957,844,3.666,845,2.957,846,2.485,847,1.87,848,1.87,849,1.87,850,4.642,851,2.485,852,1.87,853,1.87,854,1.87,855,1.87,856,1.87,857,1.87,858,4.166,859,1.87,860,1.87,861,1.87,862,1.87,863,1.87,864,1.87,865,1.87,866,2.957,867,1.87,868,1.87,869,1.87,870,1.87,871,4.166,872,2.957,873,2.957,874,1.87,875,1.87,876,1.572,877,1.87,878,1.87,879,2.957,880,2.957,881,1.87,882,1.87,883,1.87,884,1.87,885,1.572,886,1.87,887,1.87,888,1.87,889,1.87,890,1.87,891,1.87,892,1.87,893,1.87,894,1.87,895,3.082,896,1.87,897,4.824,898,1.572,899,1.87,900,3.666,901,1.87,902,3.666,903,1.87,904,1.87,905,1.87,906,3.666,907,1.87,908,4.538,909,5.238,910,1.87,911,1.87,912,1.87,913,1.87,914,1.87,915,1.87,916,1.87,917,3.666,918,1.87,919,2.957,920,2.957,921,2.957,922,2.957,923,2.957,924,2.957,925,2.957,926,1.87,927,1.87,928,1.87,929,1.572,930,2.697,931,1.87,932,1.87,933,2.957,934,1.87,935,1.87,936,2.957,937,1.87,938,1.87,939,4.824,940,1.87,941,1.87,942,1.87,943,1.87,944,4.538,945,1.87,946,1.87,947,1.87,948,3.666,949,3.666,950,1.87,951,1.87,952,3.666,953,1.87,954,1.87,955,1.87,956,2.957,957,2.957,958,1.87,959,1.87,960,1.87,961,2.957,962,3.666,963,1.87,964,2.957,965,1.87,966,1.87,967,1.87,968,1.87,969,2.957,970,1.572,971,4.824,972,3.082,973,1.87,974,1.87,975,3.666,976,2.957,977,1.87,978,1.87,979,1.87,980,1.87,981,1.87,982,1.87,983,2.485,984,2.485,985,1.87,986,1.87,987,3.502,988,1.87,989,1.87,990,1.87,991,1.87,992,1.87,993,1.572,994,1.87,995,1.87,996,1.87,997,1.87,998,1.87,999,1.87,1000,1.87,1001,1.87,1002,1.87,1003,1.87,1004,2.957,1005,1.87,1006,1.87,1007,1.87,1008,1.87,1009,1.87,1010,1.87,1011,1.87,1012,1.87,1013,1.87,1014,2.957,1015,1.87,1016,1.87,1017,1.87,1018,1.87,1019,1.87,1020,1.87,1021,1.87,1022,1.87,1023,4.166,1024,1.572,1025,2.957,1026,5.392,1027,3.666,1028,1.87,1029,1.87,1030,1.87,1031,2.957,1032,1.87,1033,1.87,1034,1.87,1035,1.87,1036,1.87,1037,2.957,1038,1.87,1039,1.87,1040,1.87,1041,1.87,1042,1.572,1043,1.87,1044,1.87,1045,1.87,1046,1.87,1047,1.87,1048,1.87,1049,1.87,1050,2.957,1051,1.87,1052,1.87,1053,1.87,1054,2.957,1055,1.87,1056,1.87,1057,1.572,1058,1.87,1059,1.572,1060,1.87,1061,1.87,1062,1.87,1063,1.572,1064,1.87,1065,1.572,1066,1.87,1067,1.87,1068,1.87,1069,1.87,1070,1.87,1071,1.87,1072,1.572,1073,1.87,1074,1.87,1075,2.485,1076,1.87,1077,1.572,1078,1.87,1079,1.87,1080,1.87,1081,1.87]],["title/license.html",[825,2.328,826,2.328,1082,2.328]],["body/license.html",[4,0.379,5,0.338,9,0.189,11,0.006,22,0.013,34,0.294,40,0.622,51,1.237,54,3.633,76,0.136,122,0.463,151,1.083,163,0.01,164,0.01,167,0.624,177,0.967,193,0.733,205,1.083,220,3.762,264,1.083,307,0.875,342,1.237,401,1.964,509,2.292,515,1.083,576,1.237,582,1.792,614,1.237,685,1.083,687,1.237,703,2.292,726,1.237,814,1.237,829,1.237,846,2.047,850,2.619,851,3.372,876,1.237,885,2.619,895,1.237,898,1.237,929,1.237,930,1.083,970,2.047,972,1.237,983,1.237,984,2.619,987,2.047,993,1.237,1024,2.047,1042,2.619,1057,1.237,1059,1.237,1063,4.299,1065,1.237,1072,1.237,1075,2.047,1077,1.237,1082,5.334,1083,3.621,1084,2.619,1085,3.115,1086,1.472,1087,1.472,1088,1.472,1089,4.962,1090,5.46,1091,3.621,1092,4.011,1093,1.472,1094,5.629,1095,5.114,1096,1.472,1097,1.472,1098,1.237,1099,1.472,1100,5.114,1101,5.46,1102,4.322,1103,2.436,1104,1.472,1105,4.011,1106,1.472,1107,1.472,1108,3.621,1109,1.472,1110,4.962,1111,3.621,1112,2.436,1113,1.472,1114,2.436,1115,2.436,1116,1.472,1117,1.472,1118,5.825,1119,3.621,1120,2.436,1121,4.322,1122,1.472,1123,2.436,1124,1.472,1125,1.472,1126,1.472,1127,1.472,1128,1.472,1129,1.472,1130,3.115,1131,1.472,1132,3.115,1133,2.436,1134,5.46,1135,1.472,1136,1.472,1137,4.322,1138,4.962,1139,3.621,1140,1.472,1141,1.472,1142,1.472,1143,1.472,1144,1.472,1145,2.436,1146,1.472,1147,1.472,1148,1.472,1149,6.345,1150,3.115,1151,2.436,1152,1.472,1153,4.962,1154,2.436,1155,1.472,1156,2.436,1157,5.825,1158,5.879,1159,1.472,1160,1.472,1161,1.472,1162,1.472,1163,1.472,1164,1.472,1165,2.436,1166,2.436,1167,3.115,1168,1.472,1169,1.472,1170,1.472,1171,1.472,1172,1.472,1173,3.621,1174,4.011,1175,1.472,1176,2.436,1177,3.621,1178,2.436,1179,1.472,1180,4.011,1181,2.436,1182,1.472,1183,1.472,1184,3.115,1185,1.472,1186,1.472,1187,1.472,1188,1.472,1189,2.436,1190,1.472,1191,1.472,1192,1.472,1193,3.115,1194,1.472,1195,1.472,1196,3.115,1197,1.472,1198,1.472,1199,1.472,1200,3.621,1201,5.114,1202,1.472,1203,1.472,1204,2.436,1205,4.785,1206,3.115,1207,2.436,1208,2.436,1209,2.436,1210,2.436,1211,2.436,1212,3.115,1213,2.436,1214,3.115,1215,2.436,1216,2.436,1217,2.436,1218,2.436,1219,1.472,1220,2.436,1221,2.436,1222,1.472,1223,1.472,1224,4.011,1225,4.575,1226,3.115,1227,2.436,1228,1.472,1229,2.436,1230,2.436,1231,1.472,1232,1.472,1233,3.115,1234,2.436,1235,1.472,1236,1.472,1237,1.472,1238,3.115,1239,1.472,1240,1.472,1241,1.472,1242,2.436,1243,2.436,1244,1.472,1245,1.472,1246,1.472,1247,1.472,1248,1.472,1249,1.472,1250,1.472,1251,2.436,1252,1.472,1253,1.472,1254,1.472,1255,1.472,1256,1.472,1257,1.472,1258,4.011,1259,1.472,1260,1.472,1261,1.472,1262,1.472,1263,1.472,1264,1.472,1265,4.785,1266,1.472,1267,1.472,1268,1.472,1269,1.472,1270,3.621,1271,2.436,1272,3.621,1273,1.472,1274,1.472,1275,3.621,1276,1.472,1277,1.472,1278,3.115,1279,1.472,1280,1.472,1281,2.436,1282,2.436,1283,1.472,1284,1.472,1285,1.472,1286,2.436,1287,1.472,1288,1.472,1289,4.011,1290,1.472,1291,1.472,1292,1.472,1293,1.472,1294,1.472,1295,3.115,1296,3.621,1297,1.472,1298,1.472,1299,1.472,1300,1.472,1301,1.472,1302,1.472,1303,1.472,1304,1.472,1305,1.472,1306,1.472,1307,2.436,1308,1.472,1309,1.472,1310,2.436,1311,1.472,1312,1.472,1313,3.621,1314,1.472,1315,1.472,1316,1.472,1317,1.472,1318,1.472,1319,1.472,1320,1.472,1321,3.621,1322,3.115,1323,3.115,1324,3.115,1325,2.436,1326,3.115,1327,2.436,1328,2.436,1329,2.436,1330,1.472,1331,1.472,1332,1.472,1333,1.472,1334,1.472,1335,1.472,1336,1.472,1337,2.436,1338,1.472,1339,1.472,1340,1.472,1341,4.011,1342,1.472,1343,1.472,1344,1.472,1345,1.472,1346,1.472,1347,1.472,1348,1.472,1349,1.472,1350,1.472,1351,4.011,1352,1.472,1353,1.472,1354,1.472,1355,1.472,1356,1.472,1357,1.472,1358,1.472,1359,1.472,1360,1.472,1361,1.472,1362,1.472,1363,1.472,1364,1.472,1365,1.472,1366,1.472,1367,1.472,1368,1.472,1369,3.115,1370,1.472,1371,1.472,1372,1.237,1373,1.472,1374,2.436,1375,1.472,1376,1.472,1377,1.472,1378,1.472,1379,1.472,1380,1.472,1381,1.472,1382,1.472,1383,1.472,1384,1.472,1385,1.472,1386,1.472,1387,1.472,1388,1.472,1389,1.472,1390,1.472,1391,1.472,1392,1.472,1393,2.436,1394,2.436,1395,1.472,1396,1.472,1397,1.472,1398,1.472,1399,1.472,1400,1.472,1401,1.472,1402,1.472,1403,1.472,1404,1.472,1405,1.472,1406,1.472,1407,1.472,1408,1.472,1409,1.472,1410,1.472,1411,1.472,1412,1.472,1413,1.472,1414,1.472,1415,1.472,1416,1.472]],["title/modules.html",[184,1.642]],["body/modules.html",[22,0.025,163,0.025,164,0.025,183,3.221,184,1.786,189,2.659,296,3.221,371,2.914,372,2.914,492,3.605,930,3.605,1372,5.45,1417,6.483,1418,6.483,1419,6.571,1420,4.9]],["title/overview.html",[830,3.314]],["body/overview.html",[2,1.888,22,0.028,101,2.971,102,2.714,163,0.022,164,0.022,167,1.746,183,4.255,184,1.5,185,2.385,186,3.459,187,3.459,188,3.459,189,3.571,190,3.091,191,2.82,192,2.233,193,2.049,208,2.233,292,3.027,296,3.933,297,3.459,368,3.459,369,3.459,370,3.459,371,3.914,372,3.914,377,1.617,523,3.459,525,3.459,604,3.459,605,3.459,606,3.459,657,3.459,830,3.027,1098,3.459,1421,4.115,1422,4.115]],["title/properties.html",[171,0.86,732,2.038]],["body/properties.html",[9,0.666,22,0.027,114,1.753,122,1.629,163,0.025,164,0.025,171,1.12,1084,4.353,1423,5.178,1424,5.178,1425,5.178]],["title/miscellaneous/variables.html",[668,2.614,797,1.82]],["body/miscellaneous/variables.html",[10,1.729,12,0.483,22,0.029,31,0.866,40,1.039,110,2.109,114,1.884,152,2.553,163,0.02,164,0.02,171,1.323,172,2.24,174,2.24,175,2.821,184,1.675,251,2.027,258,2.477,259,3.42,299,2.507,300,2.24,307,3.092,318,2.444,319,3.381,320,2.865,321,2.865,322,1.339,323,2.507,378,3.02,379,3.657,382,2.595,389,2.807,390,2.779,391,2.865,396,3.375,397,3.417,405,3.417,417,2.507,426,2.507,427,2.507,428,2.507,444,2.027,456,3.02,457,3.381,472,2.865,658,2.507,661,2.507,665,2.507,668,2.24,681,2.24,682,2.507,699,2.865,700,2.865,701,2.865,797,2.24,1426,4.595,1427,3.408,1428,4.595,1429,3.408,1430,3.408,1431,3.408,1432,3.408]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":454,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"index.html":{}}}],["0.0",{"_index":270,"title":{},"body":{"injectables/AccountService.html":{}}}],["0.0.7",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["0.0001",{"_index":429,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["0.001",{"_index":431,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["0.0s",{"_index":1026,"title":{},"body":{"index.html":{}}}],["0.1.0.tgz",{"_index":976,"title":{},"body":{"index.html":{}}}],["0.1.13",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["0.27.1",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["0/7",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1097,"title":{},"body":{"license.html":{}}}],["1.0.0",{"_index":1423,"title":{},"body":{"properties.html":{}}}],["1.0.11",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["1.3s",{"_index":1033,"title":{},"body":{"index.html":{}}}],["1.9.2",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1035,"title":{},"body":{"index.html":{}}}],["10.5s",{"_index":1046,"title":{},"body":{"index.html":{}}}],["100",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["100)].tostring",{"_index":555,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["11/11",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["14.0.1",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["14.0s",{"_index":1021,"title":{},"body":{"index.html":{}}}],["2",{"_index":812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["2.0",{"_index":1085,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["2.2.5",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1038,"title":{},"body":{"index.html":{}}}],["20",{"_index":964,"title":{},"body":{"index.html":{}}}],["200",{"_index":53,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["2004",{"_index":1087,"title":{},"body":{"license.html":{}}}],["201",{"_index":28,"title":{},"body":{"controllers/AccountController.html":{}}}],["3",{"_index":292,"title":{},"body":{"injectables/AccountService.html":{},"index.html":{},"overview.html":{}}}],["3.0.2",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["3.5.3",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1041,"title":{},"body":{"index.html":{}}}],["35b",{"_index":1030,"title":{},"body":{"index.html":{}}}],["4",{"_index":1422,"title":{},"body":{"overview.html":{}}}],["4.17.8",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1048,"title":{},"body":{"index.html":{}}}],["4/7",{"_index":1044,"title":{},"body":{"index.html":{}}}],["5",{"_index":657,"title":{},"body":{"injectables/LoggerService.html":{},"overview.html":{}}}],["5.0.1",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["5.0.8",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["5.1.4",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["5.77kb",{"_index":1034,"title":{},"body":{"index.html":{}}}],["5/5",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":726,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["594b",{"_index":1028,"title":{},"body":{"index.html":{}}}],["6",{"_index":1421,"title":{},"body":{"overview.html":{}}}],["6.1.0",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["6.367",{"_index":955,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["7.5.5",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["7.665",{"_index":966,"title":{},"body":{"index.html":{}}}],["7000",{"_index":1073,"title":{},"body":{"index.html":{}}}],["8.2.0",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["8.2.5",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["8.4.5",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["8/14",{"_index":1022,"title":{},"body":{"index.html":{}}}],["83",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1098,"title":{},"body":{"license.html":{},"overview.html":{}}}],["9.2.2",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["__test__/account",{"_index":957,"title":{},"body":{"index.html":{}}}],["__test__/e2e",{"_index":953,"title":{},"body":{"index.html":{}}}],["aaount",{"_index":459,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["above",{"_index":1300,"title":{},"body":{"license.html":{}}}],["acccount_token",{"_index":391,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"miscellaneous/variables.html":{}}}],["acceptance",{"_index":1371,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1369,"title":{},"body":{"license.html":{}}}],["access",{"_index":1071,"title":{},"body":{"index.html":{}}}],["account",{"_index":10,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["account'})@apiresponse({status",{"_index":345,"title":{},"body":{"controllers/BalanceController.html":{}}}],["account.balance",{"_index":366,"title":{},"body":{"controllers/BalanceController.html":{}}}],["account_repository",{"_index":245,"title":{},"body":{"injectables/AccountService.html":{}}}],["account_service",{"_index":121,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["accountcontroller",{"_index":1,"title":{"controllers/AccountController.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"coverage.html":{}}}],["accountentity",{"_index":166,"title":{"interfaces/AccountEntity.html":{}},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"coverage.html":{}}}],["accountmodule",{"_index":183,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules.html":{},"overview.html":{}}}],["accountrepository",{"_index":190,"title":{"injectables/AccountRepository.html":{}},"body":{"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"coverage.html":{},"overview.html":{}}}],["accountservice",{"_index":104,"title":{"injectables/AccountService.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"coverage.html":{}}}],["acount",{"_index":343,"title":{},"body":{"controllers/BalanceController.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["act",{"_index":1378,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1107,"title":{},"body":{"license.html":{}}}],["acts",{"_index":1349,"title":{},"body":{"license.html":{}}}],["actual",{"_index":501,"title":{},"body":{"interfaces/HttpResponse.html":{},"index.html":{}}}],["add",{"_index":1075,"title":{},"body":{"index.html":{},"license.html":{}}}],["addendum",{"_index":1288,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1289,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1175,"title":{},"body":{"license.html":{}}}],["addons/in",{"_index":179,"title":{},"body":{"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"dependencies.html":{}}}],["advised",{"_index":1367,"title":{},"body":{"license.html":{}}}],["against",{"_index":1243,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1381,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1324,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1304,"title":{},"body":{"license.html":{}}}],["alerting",{"_index":843,"title":{},"body":{"index.html":{}}}],["alive",{"_index":482,"title":{},"body":{"controllers/HealthController.html":{}}}],["alleging",{"_index":1248,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":389,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["allowedproperties",{"_index":390,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allowedproperties.includes(key",{"_index":393,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["alone",{"_index":1239,"title":{},"body":{"license.html":{}}}],["along",{"_index":1279,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1287,"title":{},"body":{"license.html":{}}}],["alpine3.9",{"_index":1032,"title":{},"body":{"index.html":{}}}],["alpine3.9@sha256:63777fafdf8d55f53dc31910d0e086a7bd12c45f5bb09be63d720f5fb37a0635",{"_index":1036,"title":{},"body":{"index.html":{}}}],["already",{"_index":950,"title":{},"body":{"index.html":{}}}],["alternativelly",{"_index":982,"title":{},"body":{"index.html":{}}}],["ammount",{"_index":692,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["amount",{"_index":251,"title":{},"body":{"injectables/AccountService.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["amount.amount",{"_index":290,"title":{},"body":{"injectables/AccountService.html":{}}}],["and/or",{"_index":1375,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":1162,"title":{},"body":{"license.html":{}}}],["another",{"_index":1078,"title":{},"body":{"index.html":{}}}],["ansi",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["apache",{"_index":1083,"title":{},"body":{"license.html":{}}}],["api",{"_index":129,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"interfaces/HttpResponse.html":{}}}],["api'})@apiresponse({status",{"_index":27,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["api/v1/account",{"_index":8,"title":{},"body":{"controllers/AccountController.html":{}}}],["api/v1/account)[post][get][put][delete",{"_index":852,"title":{},"body":{"index.html":{}}}],["api/v1/balance",{"_index":333,"title":{},"body":{"controllers/BalanceController.html":{}}}],["api/v1/balance/deposit)[post",{"_index":853,"title":{},"body":{"index.html":{}}}],["api/v1/balance/widraw)[post",{"_index":854,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":88,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["apioperation",{"_index":89,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["apioperation({summary",{"_index":23,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["apiproperty",{"_index":384,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["apiresponse",{"_index":90,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["apis",{"_index":831,"title":{},"body":{"index.html":{}}}],["app",{"_index":975,"title":{},"body":{"index.html":{}}}],["app_interceptor",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["appear",{"_index":1284,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1156,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1322,"title":{},"body":{"license.html":{}}}],["application",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/controllers",{"_index":204,"title":{},"body":{"modules/AccountModule.html":{}}}],["application/controllers/account.controller",{"_index":199,"title":{},"body":{"modules/AccountModule.html":{}}}],["application/controllers/health.controller",{"_index":497,"title":{},"body":{"modules/HealthModule.html":{}}}],["application/dtos",{"_index":261,"title":{},"body":{"injectables/AccountService.html":{}}}],["application/dtos/deposit",{"_index":262,"title":{},"body":{"injectables/AccountService.html":{}}}],["application/dtos/update",{"_index":263,"title":{},"body":{"injectables/AccountService.html":{}}}],["application/json",{"_index":133,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["application/json')@post",{"_index":33,"title":{},"body":{"controllers/AccountController.html":{}}}],["application/json')@post('deposit",{"_index":338,"title":{},"body":{"controllers/BalanceController.html":{}}}],["application/json')@post('widraw",{"_index":350,"title":{},"body":{"controllers/BalanceController.html":{}}}],["applies",{"_index":1232,"title":{},"body":{"license.html":{}}}],["apply",{"_index":987,"title":{},"body":{"index.html":{},"license.html":{}}}],["appmodule",{"_index":296,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1398,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1336,"title":{},"body":{"license.html":{}}}],["architecture",{"_index":832,"title":{},"body":{"index.html":{}}}],["archives",{"_index":1407,"title":{},"body":{"license.html":{}}}],["args",{"_index":623,"title":{},"body":{"injectables/LoggerService.html":{}}}],["args.length",{"_index":654,"title":{},"body":{"injectables/LoggerService.html":{}}}],["arguments",{"_index":625,"title":{},"body":{"injectables/LoggerService.html":{}}}],["arising",{"_index":1356,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1387,"title":{},"body":{"license.html":{}}}],["associated",{"_index":51,"title":{},"body":{"controllers/AccountController.html":{},"license.html":{}}}],["assume",{"_index":1338,"title":{},"body":{"license.html":{}}}],["async",{"_index":14,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"dependencies.html":{}}}],["attach",{"_index":1390,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1155,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":1270,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":1103,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1150,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1004,"title":{},"body":{"index.html":{}}}],["available",{"_index":930,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["await",{"_index":136,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{}}}],["b",{"_index":1261,"title":{},"body":{"license.html":{}}}],["back",{"_index":61,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"index.html":{}}}],["bad",{"_index":820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["balance",{"_index":114,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["balance(/api/v1/balance)[get",{"_index":855,"title":{},"body":{"index.html":{}}}],["balancecontroller",{"_index":196,"title":{"controllers/BalanceController.html":{}},"body":{"modules/AccountModule.html":{},"controllers/BalanceController.html":{},"coverage.html":{}}}],["bank",{"_index":690,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["based",{"_index":898,"title":{},"body":{"index.html":{},"license.html":{}}}],["bash",{"_index":915,"title":{},"body":{"index.html":{}}}],["basis",{"_index":1325,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":1180,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":873,"title":{},"body":{"index.html":{}}}],["being",{"_index":875,"title":{},"body":{"index.html":{}}}],["below",{"_index":929,"title":{},"body":{"index.html":{},"license.html":{}}}],["beneficial",{"_index":1129,"title":{},"body":{"license.html":{}}}],["bind",{"_index":1172,"title":{},"body":{"license.html":{}}}],["body",{"_index":42,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["boilerplate",{"_index":1391,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":675,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["bootstrap",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boundary",{"_index":887,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":1394,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1419,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1417,"title":{},"body":{"modules.html":{}}}],["build",{"_index":833,"title":{},"body":{"index.html":{}}}],["build_and_run_docker",{"_index":920,"title":{},"body":{"index.html":{}}}],["build_docker",{"_index":919,"title":{},"body":{"index.html":{}}}],["building",{"_index":897,"title":{},"body":{"index.html":{}}}],["buildstart.sh",{"_index":913,"title":{},"body":{"index.html":{}}}],["bunch",{"_index":847,"title":{},"body":{"index.html":{}}}],["business",{"_index":880,"title":{},"body":{"index.html":{}}}],["c",{"_index":1267,"title":{},"body":{"license.html":{}}}],["cache",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["cached",{"_index":1037,"title":{},"body":{"index.html":{}}}],["cacheinterceptor",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["call",{"_index":569,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["called",{"_index":934,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":565,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["calling",{"_index":1050,"title":{},"body":{"index.html":{}}}],["carry",{"_index":1263,"title":{},"body":{"license.html":{}}}],["case",{"_index":503,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["catch",{"_index":145,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["catch(error",{"_index":363,"title":{},"body":{"controllers/BalanceController.html":{}}}],["cause",{"_index":1115,"title":{},"body":{"license.html":{}}}],["cd",{"_index":906,"title":{},"body":{"index.html":{}}}],["changed",{"_index":342,"title":{},"body":{"controllers/BalanceController.html":{},"license.html":{}}}],["character",{"_index":1355,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1214,"title":{},"body":{"license.html":{}}}],["chart",{"_index":979,"title":{},"body":{"index.html":{}}}],["check",{"_index":476,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["checking",{"_index":1013,"title":{},"body":{"index.html":{}}}],["checks",{"_index":479,"title":{},"body":{"controllers/HealthController.html":{}}}],["chokidar",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["choose",{"_index":1370,"title":{},"body":{"license.html":{}}}],["circle",{"_index":150,"title":{},"body":{"controllers/AccountController.html":{}}}],["claim",{"_index":1245,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1234,"title":{},"body":{"license.html":{}}}],["class",{"_index":11,"title":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/HttpResponseException.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["classes",{"_index":377,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/HttpResponseException.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"overview.html":{}}}],["cleanup",{"_index":1006,"title":{},"body":{"index.html":{}}}],["client",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["cluster",{"_index":949,"title":{},"body":{"index.html":{}}}],["cluster_accountmodule",{"_index":186,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_imports",{"_index":187,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_providers",{"_index":188,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_commonmodule",{"_index":368,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":370,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":369,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_httpresponsemodule",{"_index":523,"title":{},"body":{"modules/HttpResponseModule.html":{},"overview.html":{}}}],["cluster_httpresponsemodule_exports",{"_index":525,"title":{},"body":{"modules/HttpResponseModule.html":{},"overview.html":{}}}],["cluster_httpresponsemodule_providers",{"_index":524,"title":{},"body":{"modules/HttpResponseModule.html":{}}}],["cluster_loggermodule",{"_index":604,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":606,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":605,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["code",{"_index":509,"title":{},"body":{"interfaces/HttpResponse.html":{},"index.html":{},"license.html":{}}}],["color",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["colors",{"_index":655,"title":{},"body":{"injectables/LoggerService.html":{}}}],["combination",{"_index":1240,"title":{},"body":{"license.html":{}}}],["comission",{"_index":434,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["comman",{"_index":1069,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1399,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1364,"title":{},"body":{"license.html":{}}}],["commision",{"_index":691,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"index.html":{}}}],["commission",{"_index":693,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["common",{"_index":515,"title":{},"body":{"classes/HttpResponseException.html":{},"index.html":{},"license.html":{}}}],["common/common.module",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["commonhere",{"_index":867,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":189,"title":{"modules/CommonModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["communication",{"_index":1184,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":1144,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1410,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1293,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1070,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":837,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1361,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1090,"title":{},"body":{"license.html":{}}}],["config",{"_index":441,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["config/env.objects",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["config/env.validation",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["configmap.yaml",{"_index":990,"title":{},"body":{"index.html":{}}}],["configmap/grover",{"_index":995,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["congig",{"_index":442,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["consequential",{"_index":1354,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1377,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":1197,"title":{},"body":{"license.html":{}}}],["const",{"_index":139,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/VirtualBankOptions.html":{}}}],["constitutes",{"_index":1249,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":123,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"classes/HttpResponseException.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["constructor(account_repository",{"_index":243,"title":{},"body":{"injectables/AccountService.html":{}}}],["constructor(accountservice",{"_index":213,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["constructor(context",{"_index":618,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(data",{"_index":517,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["constructor(private",{"_index":233,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/HealthController.html":{}}}],["constructor(properties",{"_index":380,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["constructs",{"_index":119,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{}}}],["construed",{"_index":1290,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1277,"title":{},"body":{"license.html":{}}}],["container",{"_index":940,"title":{},"body":{"index.html":{}}}],["content",{"_index":1319,"title":{},"body":{"license.html":{}}}],["contents",{"_index":829,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":568,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["context.getclass().name",{"_index":593,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["context.gethandler().name",{"_index":595,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["context.gettype",{"_index":585,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":596,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["context.switchtohttp().getresponse",{"_index":597,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["contexttype",{"_index":584,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["contract",{"_index":1120,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1174,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1238,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1295,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1201,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1250,"title":{},"body":{"license.html":{}}}],["control",{"_index":1108,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1109,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('api/v1/account",{"_index":117,"title":{},"body":{"controllers/AccountController.html":{}}}],["controller('api/v1/balance",{"_index":353,"title":{},"body":{"controllers/BalanceController.html":{}}}],["controller('health",{"_index":489,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllername",{"_index":592,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["controllername}:${handlername",{"_index":603,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"index.html":{},"overview.html":{}}}],["contructor",{"_index":519,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["conversions",{"_index":1146,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1256,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1042,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1101,"title":{},"body":{"license.html":{}}}],["counter",{"_index":1080,"title":{},"body":{"index.html":{}}}],["counterclaim",{"_index":1246,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":702,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":211,"title":{},"body":{"injectables/AccountRepository.html":{},"index.html":{}}}],["create(record",{"_index":215,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["createaccountreponsedto",{"_index":47,"title":{},"body":{"controllers/AccountController.html":{}}}],["createaccountreposnsedto",{"_index":376,"title":{"classes/CreateAccountReposnseDto.html":{}},"body":{"classes/CreateAccountReposnseDto.html":{},"coverage.html":{}}}],["createaccountrequestdto",{"_index":20,"title":{"classes/CreateAccountRequestDTO.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/CreateAccountRequestDTO.html":{},"coverage.html":{}}}],["createaccountrequestdto})@apibody({type",{"_index":73,"title":{},"body":{"controllers/AccountController.html":{}}}],["created",{"_index":461,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{},"index.html":{}}}],["created_at",{"_index":172,"title":{},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/GetUserAccountResponseDTO.html":{},"miscellaneous/variables.html":{}}}],["createdskaffold",{"_index":998,"title":{},"body":{"index.html":{}}}],["createlogger",{"_index":611,"title":{},"body":{"injectables/LoggerService.html":{}}}],["createlogger(context",{"_index":620,"title":{},"body":{"injectables/LoggerService.html":{}}}],["createnewaccount",{"_index":240,"title":{},"body":{"injectables/AccountService.html":{}}}],["createnewaccount(record",{"_index":246,"title":{},"body":{"injectables/AccountService.html":{}}}],["createnewaccounthandler",{"_index":15,"title":{},"body":{"controllers/AccountController.html":{}}}],["createnewaccounthandler(@body",{"_index":134,"title":{},"body":{"controllers/AccountController.html":{}}}],["createnewaccounthandler(body",{"_index":19,"title":{},"body":{"controllers/AccountController.html":{}}}],["creates",{"_index":29,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"injectables/LoggerService.html":{}}}],["cross",{"_index":1244,"title":{},"body":{"license.html":{}}}],["crteate",{"_index":26,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["currencies",{"_index":399,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["currency",{"_index":397,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":660,"title":{},"body":{"classes/ShowBalanceReponseDTO.html":{}}}],["custom",{"_index":539,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["customary",{"_index":1315,"title":{},"body":{"license.html":{}}}],["customer",{"_index":688,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["customers",{"_index":69,"title":{},"body":{"controllers/AccountController.html":{}}}],["d",{"_index":1273,"title":{},"body":{"license.html":{}}}],["daemon",{"_index":1017,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1351,"title":{},"body":{"license.html":{}}}],["data",{"_index":274,"title":{},"body":{"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{}}}],["data).balance",{"_index":289,"title":{},"body":{"injectables/AccountService.html":{}}}],["data.balance",{"_index":295,"title":{},"body":{"injectables/AccountService.html":{}}}],["data.currencies",{"_index":284,"title":{},"body":{"injectables/AccountService.html":{}}}],["data.description",{"_index":521,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["data.family",{"_index":282,"title":{},"body":{"injectables/AccountService.html":{}}}],["data.id",{"_index":275,"title":{},"body":{"injectables/AccountService.html":{}}}],["data.name",{"_index":281,"title":{},"body":{"injectables/AccountService.html":{}}}],["data.status",{"_index":522,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["database",{"_index":890,"title":{},"body":{"index.html":{}}}],["date",{"_index":177,"title":{},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/GetUserAccountResponseDTO.html":{},"license.html":{}}}],["date.now",{"_index":583,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["db",{"_index":181,"title":{},"body":{"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"dependencies.html":{}}}],["debug",{"_index":613,"title":{},"body":{"injectables/LoggerService.html":{}}}],["debug(message",{"_index":622,"title":{},"body":{"injectables/LoggerService.html":{}}}],["decimal",{"_index":813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decimalplaces",{"_index":807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"index.html":{}}}],["default",{"_index":258,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountResponseDTO.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1383,"title":{},"body":{"license.html":{}}}],["define",{"_index":872,"title":{},"body":{"index.html":{}}}],["defined",{"_index":34,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/VirtualBankOptions.html":{},"license.html":{}}}],["definition",{"_index":1024,"title":{},"body":{"index.html":{},"license.html":{}}}],["definitions",{"_index":1093,"title":{},"body":{"license.html":{}}}],["delete",{"_index":77,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{}}}],["delete(id",{"_index":221,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["deleteaccount",{"_index":16,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["deleteaccount(@query",{"_index":159,"title":{},"body":{"controllers/AccountController.html":{}}}],["deleteaccount(query",{"_index":48,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["deletes",{"_index":50,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["deliberate",{"_index":1346,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":185,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":900,"title":{},"body":{"index.html":{}}}],["deploy_on_kubernetes",{"_index":925,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":969,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":841,"title":{},"body":{"index.html":{}}}],["deployment.apps/grover",{"_index":996,"title":{},"body":{"index.html":{}}}],["deployment.yaml",{"_index":991,"title":{},"body":{"index.html":{}}}],["deposit",{"_index":420,"title":{},"body":{"classes/DepositMoneyRequestDTO.html":{},"index.html":{}}}],["deposit_fee_per_minute",{"_index":426,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["depositmodeny",{"_index":241,"title":{},"body":{"injectables/AccountService.html":{}}}],["depositmodeny(id",{"_index":250,"title":{},"body":{"injectables/AccountService.html":{}}}],["depositmoney",{"_index":334,"title":{},"body":{"controllers/BalanceController.html":{}}}],["depositmoney(query",{"_index":337,"title":{},"body":{"controllers/BalanceController.html":{}}}],["depositmoneyrequestdto",{"_index":108,"title":{"classes/DepositMoneyRequestDTO.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/DepositMoneyRequestDTO.html":{},"coverage.html":{}}}],["deposits",{"_index":340,"title":{},"body":{"controllers/BalanceController.html":{}}}],["depth",{"_index":656,"title":{},"body":{"injectables/LoggerService.html":{}}}],["derivative",{"_index":1157,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1159,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1316,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/functions.html":{},"license.html":{},"properties.html":{}}}],["designated",{"_index":1199,"title":{},"body":{"license.html":{}}}],["desired",{"_index":1053,"title":{},"body":{"index.html":{}}}],["details",{"_index":483,"title":{},"body":{"controllers/HealthController.html":{}}}],["determining",{"_index":1335,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1003,"title":{},"body":{"index.html":{}}}],["development",{"_index":944,"title":{},"body":{"index.html":{}}}],["different",{"_index":895,"title":{},"body":{"index.html":{},"license.html":{}}}],["direct",{"_index":885,"title":{},"body":{"index.html":{},"license.html":{}}}],["direction",{"_index":1116,"title":{},"body":{"license.html":{}}}],["dirty",{"_index":1012,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":677,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["disableerrormessages",{"_index":672,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["disclaimer",{"_index":1320,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1194,"title":{},"body":{"license.html":{}}}],["display",{"_index":1221,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1224,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1278,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1092,"title":{},"body":{"license.html":{}}}],["dochttp://localhost:7000",{"_index":1074,"title":{},"body":{"index.html":{}}}],["docker",{"_index":836,"title":{},"body":{"index.html":{}}}],["docker.io/library/node:12.19.0",{"_index":1031,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1025,"title":{},"body":{"index.html":{}}}],["dockerignore",{"_index":1029,"title":{},"body":{"index.html":{}}}],["document",{"_index":1099,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":703,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["domain",{"_index":858,"title":{},"body":{"index.html":{}}}],["domain/enums/currencies.enum",{"_index":413,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["domain/exceptions/http",{"_index":93,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["domain/helpers",{"_index":98,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"interfaces/VirtualBankOptions.html":{}}}],["domain/interceptors",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["domain/interfaces",{"_index":100,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["domain/modules",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["domain/modules/common",{"_index":375,"title":{},"body":{"modules/CommonModule.html":{}}}],["domain/servicecs",{"_index":103,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["domain/servicecs/account.service",{"_index":105,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["don't",{"_index":1397,"title":{},"body":{"license.html":{}}}],["dotenv",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":382,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dtos",{"_index":107,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"index.html":{}}}],["dtos/deposit",{"_index":109,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["dtos/show",{"_index":113,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["dtos/update",{"_index":116,"title":{},"body":{"controllers/AccountController.html":{}}}],["each",{"_index":401,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/VirtualBankOptions.html":{},"license.html":{}}}],["easier",{"_index":1405,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":1160,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":1163,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1181,"title":{},"body":{"license.html":{}}}],["email",{"_index":665,"title":{},"body":{"classes/UpdateAccountRequestDTO.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":504,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["enableimplicitconversion",{"_index":448,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["enclosed",{"_index":1393,"title":{},"body":{"license.html":{}}}],["end",{"_index":1389,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":36,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"index.html":{}}}],["engines",{"_index":893,"title":{},"body":{"index.html":{}}}],["entities",{"_index":264,"title":{},"body":{"injectables/AccountService.html":{},"index.html":{},"license.html":{}}}],["entities/account.entity",{"_index":232,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["entity",{"_index":220,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"license.html":{}}}],["entry",{"_index":24,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"miscellaneous/functions.html":{}}}],["enum",{"_index":696,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["enums",{"_index":859,"title":{},"body":{"index.html":{}}}],["enums/httpresponse",{"_index":551,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["env",{"_index":424,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{}}}],["environmanet",{"_index":805,"title":{},"body":{"miscellaneous/functions.html":{}}}],["environment",{"_index":899,"title":{},"body":{"index.html":{}}}],["environmentvariables",{"_index":422,"title":{"classes/EnvironmentVariables.html":{}},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["envobjects",{"_index":697,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["error",{"_index":146,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"interfaces/ValidationPipeOptions.html":{},"miscellaneous/functions.html":{}}}],["error(errors.tostring",{"_index":455,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["error(message",{"_index":626,"title":{},"body":{"injectables/LoggerService.html":{}}}],["error.message",{"_index":590,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["error.stack",{"_index":650,"title":{},"body":{"injectables/LoggerService.html":{}}}],["errors",{"_index":449,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/ValidationPipeOptions.html":{}}}],["errors.length",{"_index":453,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["etc",{"_index":894,"title":{},"body":{"index.html":{}}}],["even",{"_index":1366,"title":{},"body":{"license.html":{}}}],["event",{"_index":1342,"title":{},"body":{"license.html":{}}}],["example",{"_index":1059,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":1226,"title":{},"body":{"license.html":{}}}],["exception",{"_index":514,"title":{},"body":{"classes/HttpResponseException.html":{},"interfaces/ValidationPipeOptions.html":{},"miscellaneous/functions.html":{}}}],["exceptionfactory",{"_index":673,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["exceptions",{"_index":860,"title":{},"body":{"index.html":{}}}],["excluding",{"_index":1196,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1213,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1305,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":563,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["exercise",{"_index":1340,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1131,"title":{},"body":{"license.html":{}}}],["exit",{"_index":932,"title":{},"body":{"index.html":{}}}],["expand",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["expandenvvariables",{"_index":695,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["expands",{"_index":804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandvariables",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["explicitly",{"_index":1297,"title":{},"body":{"license.html":{}}}],["explore",{"_index":1066,"title":{},"body":{"index.html":{}}}],["export",{"_index":118,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{}}}],["exports",{"_index":374,"title":{},"body":{"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{}}}],["express",{"_index":582,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":169,"title":{},"body":{"interfaces/AccountEntity.html":{},"classes/HttpResponseException.html":{},"interfaces/ValidationPipeOptions.html":{}}}],["external",{"_index":889,"title":{},"body":{"index.html":{}}}],["f",{"_index":988,"title":{},"body":{"index.html":{}}}],["factory",{"_index":678,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["failure",{"_index":1362,"title":{},"body":{"license.html":{}}}],["faker",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":452,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["familty",{"_index":405,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":173,"title":{},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["fee",{"_index":685,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"index.html":{},"license.html":{}}}],["fields",{"_index":1392,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1124,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1254,"title":{},"body":{"license.html":{}}}],["files",{"_index":984,"title":{},"body":{"index.html":{},"license.html":{}}}],["finally",{"_index":293,"title":{},"body":{"injectables/AccountService.html":{}}}],["fitness",{"_index":1332,"title":{},"body":{"license.html":{}}}],["flag",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["flow",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["follow",{"_index":1058,"title":{},"body":{"index.html":{}}}],["following",{"_index":850,"title":{},"body":{"index.html":{},"license.html":{}}}],["form",{"_index":1134,"title":{},"body":{"license.html":{}}}],["format",{"_index":614,"title":{},"body":{"injectables/LoggerService.html":{},"license.html":{}}}],["format(message",{"_index":629,"title":{},"body":{"injectables/LoggerService.html":{}}}],["formats",{"_index":631,"title":{},"body":{"injectables/LoggerService.html":{}}}],["formatted",{"_index":632,"title":{},"body":{"injectables/LoggerService.html":{}}}],["formatwithoptions",{"_index":642,"title":{},"body":{"injectables/LoggerService.html":{}}}],["forms",{"_index":928,"title":{},"body":{"index.html":{}}}],["found",{"_index":1014,"title":{},"body":{"index.html":{}}}],["free",{"_index":1216,"title":{},"body":{"license.html":{}}}],["full",{"_index":505,"title":{},"body":{"interfaces/HttpResponse.html":{},"index.html":{}}}],["function",{"_index":444,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":798,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":531,"title":{},"body":{"injectables/HttpResponseService.html":{},"index.html":{}}}],["generate(status",{"_index":535,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["generate_doc",{"_index":946,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1145,"title":{},"body":{"license.html":{}}}],["generates",{"_index":537,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["generating",{"_index":1009,"title":{},"body":{"index.html":{}}}],["get()@healthcheck",{"_index":477,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(id",{"_index":223,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["getaccount",{"_index":17,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["getaccount(@query",{"_index":154,"title":{},"body":{"controllers/AccountController.html":{}}}],["getaccount(query",{"_index":60,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["getdescription",{"_index":532,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["getdescription(status",{"_index":541,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["getmessage",{"_index":533,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["getmessage(status",{"_index":543,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["gets",{"_index":225,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/HttpResponseService.html":{}}}],["getting",{"_index":825,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettype",{"_index":534,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["gettype(status",{"_index":545,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["getuseraccountrequestdto",{"_index":49,"title":{"classes/GetUserAccountRequestDTO.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/GetUserAccountRequestDTO.html":{},"coverage.html":{}}}],["getuseraccountresponsedto",{"_index":106,"title":{"classes/GetUserAccountResponseDTO.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/GetUserAccountResponseDTO.html":{},"coverage.html":{}}}],["getuseraccountresponsedto})@apibody({type",{"_index":62,"title":{},"body":{"controllers/AccountController.html":{}}}],["give",{"_index":993,"title":{},"body":{"index.html":{},"license.html":{}}}],["given",{"_index":37,"title":{},"body":{"controllers/AccountController.html":{},"index.html":{}}}],["glob",{"_index":1045,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":1359,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1415,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1206,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1133,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1104,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1209,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1420,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1347,"title":{},"body":{"license.html":{}}}],["grover",{"_index":827,"title":{},"body":{"index.html":{}}}],["grover:6b79957",{"_index":1011,"title":{},"body":{"index.html":{}}}],["grover:latest",{"_index":935,"title":{},"body":{"index.html":{}}}],["grover:latestdocker",{"_index":912,"title":{},"body":{"index.html":{}}}],["guards",{"_index":861,"title":{},"body":{"index.html":{}}}],["h",{"_index":917,"title":{},"body":{"index.html":{}}}],["handler",{"_index":567,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["handlername",{"_index":594,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["handles",{"_index":999,"title":{},"body":{"index.html":{}}}],["harmless",{"_index":1385,"title":{},"body":{"license.html":{}}}],["header",{"_index":78,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["header('content",{"_index":132,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["health",{"_index":475,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["healthcheck",{"_index":487,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":485,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":473,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":492,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["helm",{"_index":971,"title":{},"body":{"index.html":{}}}],["helmchart",{"_index":973,"title":{},"body":{"index.html":{}}}],["help",{"_index":902,"title":{},"body":{"index.html":{}}}],["helpers",{"_index":266,"title":{},"body":{"injectables/AccountService.html":{},"index.html":{}}}],["helps",{"_index":926,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1208,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1301,"title":{},"body":{"license.html":{}}}],["hold",{"_index":1384,"title":{},"body":{"license.html":{}}}],["http",{"_index":484,"title":{},"body":{"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"miscellaneous/functions.html":{}}}],["http://localhost:{port_number}/api",{"_index":1068,"title":{},"body":{"index.html":{}}}],["http://localhost:{port_number}/health",{"_index":1055,"title":{},"body":{"index.html":{}}}],["http://localhost:{port_number}/metrics",{"_index":1064,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses",{"_index":1088,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1412,"title":{},"body":{"license.html":{}}}],["httpcode",{"_index":79,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["httpcode(httpstatus.ok",{"_index":153,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["httpexception",{"_index":516,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["httphealthindicator",{"_index":486,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":494,"title":{},"body":{"modules/HealthModule.html":{}}}],["httpreponse",{"_index":59,"title":{},"body":{"controllers/AccountController.html":{}}}],["httpresponse",{"_index":99,"title":{"interfaces/HttpResponse.html":{}},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"coverage.html":{},"index.html":{}}}],["httpresponsedescriptions",{"_index":547,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponsedescriptions[httpstatus[status].tostring",{"_index":553,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponseexception",{"_index":92,"title":{"classes/HttpResponseException.html":{}},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"classes/HttpResponseException.html":{},"coverage.html":{}}}],["httpresponseexception(this.httpresponseservice.generate(httpstatus.internal_server_error",{"_index":158,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["httpresponseexception(this.httpresponseservice.generate(httpstatus.not_acceptable",{"_index":364,"title":{},"body":{"controllers/BalanceController.html":{}}}],["httpresponseexception(this.httpresponseservice.generate(httpstatus.not_found",{"_index":149,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["httpresponsegenerator",{"_index":819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpresponsemessages",{"_index":548,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponsemessages[httpstatus[status].tostring",{"_index":552,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponsemodule",{"_index":371,"title":{"modules/HttpResponseModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules.html":{},"overview.html":{}}}],["httpresponseservice",{"_index":101,"title":{"injectables/HttpResponseService.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"controllers/BalanceController.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"coverage.html":{},"overview.html":{}}}],["httpresponsetypes",{"_index":549,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponsetypescodes",{"_index":550,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponsetypescodes[math.floor(status",{"_index":554,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["https://developer.mozilla.org/en",{"_index":506,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["httpstatus",{"_index":80,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"injectables/HttpResponseService.html":{}}}],["id",{"_index":152,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["id'})@apiresponse({status",{"_index":52,"title":{},"body":{"controllers/AccountController.html":{}}}],["identification",{"_index":1406,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1396,"title":{},"body":{"license.html":{}}}],["ii",{"_index":1122,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1128,"title":{},"body":{"license.html":{}}}],["image",{"_index":933,"title":{},"body":{"index.html":{}}}],["implements",{"_index":513,"title":{},"body":{"classes/HttpResponseException.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{}}}],["implied",{"_index":1328,"title":{},"body":{"license.html":{}}}],["import",{"_index":76,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"license.html":{}}}],["imports",{"_index":197,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{}}}],["improving",{"_index":1195,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1357,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1353,"title":{},"body":{"license.html":{}}}],["include",{"_index":1167,"title":{},"body":{"license.html":{}}}],["included",{"_index":1154,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1274,"title":{},"body":{"license.html":{}}}],["including",{"_index":1138,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1178,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1204,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1386,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1382,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1373,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1152,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1114,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1130,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{}}}],["information",{"_index":151,"title":{},"body":{"controllers/AccountController.html":{},"index.html":{},"license.html":{}}}],["informational",{"_index":1285,"title":{},"body":{"license.html":{}}}],["infrastructure",{"_index":866,"title":{},"body":{"index.html":{}}}],["infrastructure/modules/common",{"_index":203,"title":{},"body":{"modules/AccountModule.html":{}}}],["infringed",{"_index":1237,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1251,"title":{},"body":{"license.html":{}}}],["inject",{"_index":81,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["inject('account",{"_index":124,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["injectable",{"_index":207,"title":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{}},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["injectables",{"_index":208,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["inmemorydb",{"_index":218,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["inmemorydbentity",{"_index":170,"title":{},"body":{"interfaces/AccountEntity.html":{}}}],["inmemorydbservice",{"_index":201,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountRepository.html":{}}}],["inside",{"_index":217,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["install",{"_index":908,"title":{},"body":{"index.html":{}}}],["installmonitoring",{"_index":1049,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":649,"title":{},"body":{"injectables/LoggerService.html":{}}}],["institute",{"_index":1241,"title":{},"body":{"license.html":{}}}],["instruction",{"_index":834,"title":{},"body":{"index.html":{}}}],["intentionally",{"_index":1176,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":878,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":560,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["intercept(context",{"_index":562,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["interceptors",{"_index":862,"title":{},"body":{"index.html":{}}}],["interface",{"_index":165,"title":{"interfaces/AccountEntity.html":{},"interfaces/HttpResponse.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{}},"body":{"interfaces/AccountEntity.html":{},"interfaces/HttpResponse.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":167,"title":{},"body":{"interfaces/AccountEntity.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["internal",{"_index":1023,"title":{},"body":{"index.html":{}}}],["invite",{"_index":68,"title":{},"body":{"controllers/AccountController.html":{}}}],["irrevocable",{"_index":1217,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":470,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["isdate",{"_index":471,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["isdefined",{"_index":385,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isdefined()@isdate()@isnotempty()@apiproperty({description",{"_index":460,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["isdefined()@isnotempty()@isenum(currencies",{"_index":400,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{}}}],["isdefined()@isnumber()@isnotempty()@apiproperty({description",{"_index":419,"title":{},"body":{"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{}}}],["isdefined()@isstring()@isnotempty()@apiproperty({description",{"_index":383,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isdefined()@isstring()@maxlength(30)@minlength(3)@apiproperty({description",{"_index":403,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{}}}],["isemail",{"_index":408,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isenum",{"_index":409,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isenum(currencies",{"_index":416,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isglobal",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":386,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isnumber",{"_index":421,"title":{},"body":{"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{}}}],["isoptional",{"_index":410,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isoptional()@isnotempty()@isenum(currencies",{"_index":662,"title":{},"body":{"classes/UpdateAccountRequestDTO.html":{}}}],["isoptional()@isstring()@maxlength(30)@minlength(3)@apiproperty({description",{"_index":663,"title":{},"body":{"classes/UpdateAccountRequestDTO.html":{}}}],["isstring",{"_index":387,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["issue",{"_index":1190,"title":{},"body":{"license.html":{}}}],["january",{"_index":1086,"title":{},"body":{"license.html":{}}}],["k8s",{"_index":978,"title":{},"body":{"index.html":{}}}],["k8s/configfiles",{"_index":985,"title":{},"body":{"index.html":{}}}],["keeps",{"_index":689,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["keyof",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"injectables/HttpResponseService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1327,"title":{},"body":{"license.html":{}}}],["kubectl",{"_index":986,"title":{},"body":{"index.html":{}}}],["kubernetes",{"_index":948,"title":{},"body":{"index.html":{}}}],["language",{"_index":1414,"title":{},"body":{"license.html":{}}}],["lastest",{"_index":341,"title":{},"body":{"controllers/BalanceController.html":{}}}],["law",{"_index":1323,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1247,"title":{},"body":{"license.html":{}}}],["layer",{"_index":871,"title":{},"body":{"index.html":{}}}],["layers",{"_index":870,"title":{},"body":{"index.html":{}}}],["legal",{"_index":1105,"title":{},"body":{"license.html":{}}}],["liability",{"_index":1341,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1350,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":1235,"title":{},"body":{"license.html":{}}}],["license",{"_index":1082,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1409,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1252,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1100,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1329,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1416,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1139,"title":{},"body":{"license.html":{}}}],["link",{"_index":1171,"title":{},"body":{"license.html":{}}}],["lint",{"_index":945,"title":{},"body":{"index.html":{}}}],["linux/amd64",{"_index":1020,"title":{},"body":{"index.html":{}}}],["list",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["listening",{"_index":1052,"title":{},"body":{"index.html":{}}}],["listing",{"_index":1007,"title":{},"body":{"index.html":{}}}],["lists",{"_index":1188,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":1242,"title":{},"body":{"license.html":{}}}],["liveness",{"_index":480,"title":{},"body":{"controllers/HealthController.html":{}}}],["load",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["local",{"_index":936,"title":{},"body":{"index.html":{}}}],["log",{"_index":615,"title":{},"body":{"injectables/LoggerService.html":{}}}],["log(message",{"_index":633,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":127,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{}}}],["logger(context",{"_index":644,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerinterceptor",{"_index":311,"title":{"injectables/LoggerInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerInterceptor.html":{},"coverage.html":{}}}],["loggermodule",{"_index":372,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerservice",{"_index":102,"title":{"injectables/LoggerService.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"controllers/BalanceController.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["loggerservice(context",{"_index":646,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice(loggerinterceptor.name",{"_index":577,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["logging",{"_index":609,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loghttprequest",{"_index":561,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["loghttprequest(context",{"_index":570,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["logs",{"_index":558,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{}}}],["loss",{"_index":1358,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1365,"title":{},"body":{"license.html":{}}}],["machine",{"_index":937,"title":{},"body":{"index.html":{}}}],["machine.tests",{"_index":951,"title":{},"body":{"index.html":{}}}],["made",{"_index":1151,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1187,"title":{},"body":{"license.html":{}}}],["main",{"_index":803,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["make",{"_index":972,"title":{},"body":{"index.html":{},"license.html":{}}}],["makeskaffold",{"_index":1002,"title":{},"body":{"index.html":{}}}],["making",{"_index":1136,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1363,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1192,"title":{},"body":{"license.html":{}}}],["management",{"_index":1117,"title":{},"body":{"license.html":{}}}],["manager",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["manages",{"_index":1424,"title":{},"body":{"properties.html":{}}}],["marked",{"_index":1198,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1311,"title":{},"body":{"license.html":{}}}],["matching",{"_index":164,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":411,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["maxlength(30",{"_index":414,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["mean",{"_index":1095,"title":{},"body":{"license.html":{}}}],["means",{"_index":1112,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1141,"title":{},"body":{"license.html":{}}}],["media",{"_index":1147,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1257,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1259,"title":{},"body":{"license.html":{}}}],["memory",{"_index":180,"title":{},"body":{"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"dependencies.html":{}}}],["merchantability",{"_index":1331,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1170,"title":{},"body":{"license.html":{}}}],["mertics",{"_index":1061,"title":{},"body":{"index.html":{}}}],["message",{"_index":500,"title":{},"body":{"interfaces/HttpResponse.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerService.html":{}}}],["messages",{"_index":676,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["metadata",{"_index":780,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["method",{"_index":599,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["method.touppercase",{"_index":602,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["methods",{"_index":13,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{}}}],["metric",{"_index":1081,"title":{},"body":{"index.html":{}}}],["metrics",{"_index":1062,"title":{},"body":{"index.html":{}}}],["minikube",{"_index":1016,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":412,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["minlength(3",{"_index":415,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["minute",{"_index":686,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"index.html":{}}}],["miscellaneous",{"_index":797,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modifications",{"_index":1137,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1262,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1286,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1291,"title":{},"body":{"license.html":{}}}],["module",{"_index":182,"title":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{}}}],["modules",{"_index":184,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules[moduleindex",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["moduleslist",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monetary",{"_index":828,"title":{},"body":{"index.html":{}}}],["money",{"_index":110,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/DepositMoneyRequestDTO.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["moneytion",{"_index":1076,"title":{},"body":{"index.html":{}}}],["monitoring",{"_index":842,"title":{},"body":{"index.html":{}}}],["more",{"_index":687,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"license.html":{}}}],["morgan",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["mutex",{"_index":239,"title":{},"body":{"injectables/AccountService.html":{},"dependencies.html":{}}}],["naiveround",{"_index":265,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["naiveround((await",{"_index":291,"title":{},"body":{"injectables/AccountService.html":{}}}],["naiveround(num",{"_index":806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":40,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":941,"title":{},"body":{"index.html":{}}}],["names",{"_index":1310,"title":{},"body":{"license.html":{}}}],["namespace.yaml",{"_index":989,"title":{},"body":{"index.html":{}}}],["namespace/grover",{"_index":994,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":1236,"title":{},"body":{"license.html":{}}}],["need",{"_index":947,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1345,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1348,"title":{},"body":{"license.html":{}}}],["nestinterceptor",{"_index":579,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["nestjs",{"_index":178,"title":{},"body":{"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":495,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/cli",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":87,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":91,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":488,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestloggerservice",{"_index":641,"title":{},"body":{"injectables/LoggerService.html":{}}}],["new",{"_index":30,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/EnvironmentVariables.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":564,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["next.handle().pipe",{"_index":586,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["non",{"_index":1212,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1283,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":576,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"license.html":{}}}],["notice",{"_index":1153,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1265,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1299,"title":{},"body":{"license.html":{}}}],["npm",{"_index":835,"title":{},"body":{"index.html":{}}}],["num",{"_index":810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":176,"title":{},"body":{"interfaces/AccountEntity.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountResponseDTO.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"classes/ShowBalanceReponseDTO.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":54,"title":{},"body":{"controllers/AccountController.html":{},"license.html":{}}}],["object.keys(modules).map(moduleindex",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["object.keys(properties).foreach((key",{"_index":392,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["objects",{"_index":881,"title":{},"body":{"index.html":{}}}],["obligations",{"_index":1374,"title":{},"body":{"license.html":{}}}],["observable",{"_index":229,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/LoggerInterceptor.html":{}}}],["obtain",{"_index":1411,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1229,"title":{},"body":{"license.html":{}}}],["ok",{"_index":490,"title":{},"body":{"controllers/HealthController.html":{}}}],["one",{"_index":1077,"title":{},"body":{"index.html":{},"license.html":{}}}],["onion",{"_index":856,"title":{},"body":{"index.html":{}}}],["openapi",{"_index":844,"title":{},"body":{"index.html":{}}}],["optional",{"_index":41,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":684,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"index.html":{}}}],["origin",{"_index":1317,"title":{},"body":{"license.html":{}}}],["original",{"_index":1166,"title":{},"body":{"license.html":{}}}],["os",{"_index":226,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["otherwise",{"_index":1121,"title":{},"body":{"license.html":{}}}],["out",{"_index":193,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":823,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["outstanding",{"_index":1126,"title":{},"body":{"license.html":{}}}],["overview",{"_index":830,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":1102,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1123,"title":{},"body":{"license.html":{}}}],["package",{"_index":732,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["package*.json",{"_index":1043,"title":{},"body":{"index.html":{}}}],["page",{"_index":1404,"title":{},"body":{"license.html":{}}}],["param",{"_index":120,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":1272,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1333,"title":{},"body":{"license.html":{}}}],["party",{"_index":1282,"title":{},"body":{"license.html":{}}}],["pass",{"_index":952,"title":{},"body":{"index.html":{}}}],["passed",{"_index":961,"title":{},"body":{"index.html":{}}}],["patch",{"_index":82,"title":{},"body":{"controllers/AccountController.html":{}}}],["patent",{"_index":1225,"title":{},"body":{"license.html":{}}}],["per",{"_index":1079,"title":{},"body":{"index.html":{}}}],["percent",{"_index":1125,"title":{},"body":{"license.html":{}}}],["percission",{"_index":809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["perform",{"_index":1222,"title":{},"body":{"license.html":{}}}],["performing",{"_index":877,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1308,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1132,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1210,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1271,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":670,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["pipes",{"_index":863,"title":{},"body":{"index.html":{}}}],["places",{"_index":814,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["plaintoclass",{"_index":437,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["plaintoclass(environmentvariables",{"_index":447,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["platforms",{"_index":1019,"title":{},"body":{"index.html":{}}}],["play",{"_index":882,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["point",{"_index":25,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"miscellaneous/functions.html":{}}}],["port",{"_index":1054,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1368,"title":{},"body":{"license.html":{}}}],["post",{"_index":83,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["post('deposit",{"_index":354,"title":{},"body":{"controllers/BalanceController.html":{}}}],["post('widraw",{"_index":357,"title":{},"body":{"controllers/BalanceController.html":{}}}],["power",{"_index":1113,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1135,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{}}}],["prepare",{"_index":1219,"title":{},"body":{"license.html":{}}}],["print",{"_index":931,"title":{},"body":{"index.html":{}}}],["printed",{"_index":1403,"title":{},"body":{"license.html":{}}}],["private",{"_index":125,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{}}}],["probably",{"_index":1056,"title":{},"body":{"index.html":{}}}],["process.env.deposit_fee_per_minute",{"_index":701,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["process.env.transaction_commission",{"_index":699,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["process.env.widraw_commission",{"_index":700,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["processes",{"_index":815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processhttperror",{"_index":95,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["processhttperror(error",{"_index":147,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"miscellaneous/functions.html":{}}}],["processmicroservicehttperror",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processmicroservicehttperror(error",{"_index":817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["product",{"_index":1312,"title":{},"body":{"license.html":{}}}],["production",{"_index":1047,"title":{},"body":{"index.html":{}}}],["project",{"_index":481,"title":{},"body":{"controllers/HealthController.html":{}}}],["prom",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["prometheusmodule",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["prometheusmodule.register",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["prominent",{"_index":1264,"title":{},"body":{"license.html":{}}}],["promise",{"_index":45,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"miscellaneous/functions.html":{}}}],["promise(async",{"_index":271,"title":{},"body":{"injectables/AccountService.html":{}}}],["properties",{"_index":171,"title":{"properties.html":{}},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"interfaces/HttpResponse.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["properties[key",{"_index":395,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["provide",{"_index":205,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"license.html":{}}}],["provided",{"_index":851,"title":{},"body":{"index.html":{},"license.html":{}}}],["providers",{"_index":195,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{}}}],["provides",{"_index":846,"title":{},"body":{"index.html":{},"license.html":{}}}],["public",{"_index":612,"title":{},"body":{"injectables/LoggerService.html":{}}}],["publicly",{"_index":1220,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1193,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1111,"title":{},"body":{"license.html":{}}}],["push",{"_index":977,"title":{},"body":{"index.html":{}}}],["pushing",{"_index":1001,"title":{},"body":{"index.html":{}}}],["put",{"_index":84,"title":{},"body":{"controllers/AccountController.html":{}}}],["query",{"_index":58,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{}}}],["queue",{"_index":892,"title":{},"body":{"index.html":{}}}],["radious",{"_index":66,"title":{},"body":{"controllers/AccountController.html":{}}}],["ramda",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["ran",{"_index":967,"title":{},"body":{"index.html":{}}}],["readable",{"_index":1276,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":126,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{}}}],["ready",{"_index":974,"title":{},"body":{"index.html":{}}}],["reason",{"_index":1388,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1314,"title":{},"body":{"license.html":{}}}],["received",{"_index":1202,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1260,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1401,"title":{},"body":{"license.html":{}}}],["record",{"_index":219,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["record.currency",{"_index":283,"title":{},"body":{"injectables/AccountService.html":{}}}],["record.family",{"_index":269,"title":{},"body":{"injectables/AccountService.html":{}}}],["record.name",{"_index":268,"title":{},"body":{"injectables/AccountService.html":{}}}],["record.username",{"_index":267,"title":{},"body":{"injectables/AccountService.html":{}}}],["redistributing",{"_index":1337,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1255,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["regarding",{"_index":1306,"title":{},"body":{"license.html":{}}}],["rejects",{"_index":294,"title":{},"body":{"injectables/AccountService.html":{}}}],["relationship",{"_index":886,"title":{},"body":{"index.html":{}}}],["release",{"_index":286,"title":{},"body":{"injectables/AccountService.html":{}}}],["remain",{"_index":1168,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":1395,"title":{},"body":{"license.html":{}}}],["reponse.dto.ts",{"_index":457,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reponse.dto.ts:107",{"_index":468,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:118",{"_index":458,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:41",{"_index":465,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:53",{"_index":466,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:64",{"_index":464,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:75",{"_index":469,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:85",{"_index":463,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:96",{"_index":462,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["repositories",{"_index":864,"title":{},"body":{"index.html":{}}}],["repositories/account.repository",{"_index":200,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{}}}],["repository",{"_index":210,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"index.html":{}}}],["represent",{"_index":1164,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1186,"title":{},"body":{"license.html":{}}}],["represents",{"_index":433,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/HttpResponse.html":{},"interfaces/VirtualBankOptions.html":{},"index.html":{}}}],["reproduce",{"_index":1218,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1318,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1091,"title":{},"body":{"license.html":{}}}],["req",{"_index":85,"title":{},"body":{"controllers/AccountController.html":{}}}],["reqtime",{"_index":588,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["reqtime}ms",{"_index":591,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["request",{"_index":43,"title":{},"body":{"controllers/AccountController.html":{},"injectables/LoggerInterceptor.html":{},"miscellaneous/functions.html":{}}}],["request.dto",{"_index":111,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{}}}],["request.dto.ts",{"_index":396,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.dto.ts:18",{"_index":418,"title":{},"body":{"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{}}}],["request.dto.ts:19",{"_index":664,"title":{},"body":{"classes/UpdateAccountRequestDTO.html":{}}}],["request.dto.ts:20",{"_index":406,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{}}}],["request.dto.ts:31",{"_index":404,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["request.dto.ts:42",{"_index":407,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["request.dto.ts:53",{"_index":398,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["requests",{"_index":559,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["required",{"_index":1313,"title":{},"body":{"license.html":{}}}],["res",{"_index":86,"title":{},"body":{"controllers/AccountController.html":{}}}],["reset",{"_index":192,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}],["resolve",{"_index":272,"title":{},"body":{"injectables/AccountService.html":{}}}],["resolve(data",{"_index":279,"title":{},"body":{"injectables/AccountService.html":{}}}],["resolve(response",{"_index":276,"title":{},"body":{"injectables/AccountService.html":{}}}],["response",{"_index":140,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"miscellaneous/functions.html":{}}}],["response(https://en.wikipedia.org/wiki/list_of_http_status_codes",{"_index":510,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["response.dto",{"_index":115,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["response.dto.ts",{"_index":379,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/ShowBalanceReponseDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto.ts:18",{"_index":659,"title":{},"body":{"classes/ShowBalanceReponseDTO.html":{}}}],["response.dto.ts:20",{"_index":381,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{}}}],["response.exception",{"_index":94,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["response.exception.ts",{"_index":512,"title":{},"body":{"classes/HttpResponseException.html":{},"coverage.html":{}}}],["response.exception.ts:8",{"_index":518,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["response.interface.ts",{"_index":499,"title":{},"body":{"interfaces/HttpResponse.html":{},"coverage.html":{}}}],["response.module.ts",{"_index":527,"title":{},"body":{"modules/HttpResponseModule.html":{}}}],["response.service.ts",{"_index":530,"title":{},"body":{"injectables/HttpResponseService.html":{},"coverage.html":{}}}],["response.service.ts:22",{"_index":544,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["response.service.ts:32",{"_index":542,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["response.service.ts:42",{"_index":546,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["response.service.ts:57",{"_index":536,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["responsibility",{"_index":1380,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":876,"title":{},"body":{"index.html":{},"license.html":{}}}],["rest",{"_index":848,"title":{},"body":{"index.html":{}}}],["result",{"_index":1057,"title":{},"body":{"index.html":{},"license.html":{}}}],["resulting",{"_index":1140,"title":{},"body":{"license.html":{}}}],["results",{"_index":163,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1268,"title":{},"body":{"license.html":{}}}],["return",{"_index":46,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{}}}],["returned",{"_index":502,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["returns",{"_index":44,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/functions.html":{}}}],["revisions",{"_index":1161,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1376,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":782,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["risks",{"_index":1339,"title":{},"body":{"license.html":{}}}],["role",{"_index":883,"title":{},"body":{"index.html":{}}}],["rounded",{"_index":811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rounds",{"_index":808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["royalty",{"_index":1215,"title":{},"body":{"license.html":{}}}],["rules",{"_index":884,"title":{},"body":{"index.html":{}}}],["run",{"_index":909,"title":{},"body":{"index.html":{}}}],["run_app",{"_index":922,"title":{},"body":{"index.html":{}}}],["run_lint",{"_index":924,"title":{},"body":{"index.html":{}}}],["run_test",{"_index":923,"title":{},"body":{"index.html":{}}}],["runn",{"_index":927,"title":{},"body":{"index.html":{}}}],["running",{"_index":939,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":231,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/LoggerInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":581,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["s",{"_index":956,"title":{},"body":{"index.html":{}}}],["same",{"_index":1402,"title":{},"body":{"license.html":{}}}],["schemas",{"_index":1067,"title":{},"body":{"index.html":{}}}],["script",{"_index":839,"title":{},"body":{"index.html":{}}}],["scripts/start.sh",{"_index":916,"title":{},"body":{"index.html":{}}}],["section",{"_index":1228,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1096,"title":{},"body":{"license.html":{}}}],["see",{"_index":1065,"title":{},"body":{"index.html":{},"license.html":{}}}],["seeders",{"_index":865,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1230,"title":{},"body":{"license.html":{}}}],["sent",{"_index":1185,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1169,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1303,"title":{},"body":{"license.html":{}}}],["server",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":122,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["service.type=nodeportkubernetes",{"_index":981,"title":{},"body":{"index.html":{}}}],["service.yamlit",{"_index":992,"title":{},"body":{"index.html":{}}}],["service/grover",{"_index":997,"title":{},"body":{"index.html":{}}}],["servicecs",{"_index":202,"title":{},"body":{"modules/AccountModule.html":{},"index.html":{}}}],["servicecs/account.service",{"_index":198,"title":{},"body":{"modules/AccountModule.html":{}}}],["servicecs/common",{"_index":528,"title":{},"body":{"modules/HttpResponseModule.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{}}}],["services",{"_index":891,"title":{},"body":{"index.html":{}}}],["set",{"_index":980,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1094,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1127,"title":{},"body":{"license.html":{}}}],["short",{"_index":508,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["show",{"_index":348,"title":{},"body":{"controllers/BalanceController.html":{},"index.html":{}}}],["showbalance",{"_index":335,"title":{},"body":{"controllers/BalanceController.html":{}}}],["showbalance(@query",{"_index":365,"title":{},"body":{"controllers/BalanceController.html":{}}}],["showbalance(query",{"_index":344,"title":{},"body":{"controllers/BalanceController.html":{}}}],["showbalancereponsedto",{"_index":112,"title":{"classes/ShowBalanceReponseDTO.html":{}},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"classes/ShowBalanceReponseDTO.html":{},"coverage.html":{}}}],["showbalancereponsedto})@apibody({type",{"_index":346,"title":{},"body":{"controllers/BalanceController.html":{}}}],["simulate",{"_index":849,"title":{},"body":{"index.html":{}}}],["skaffold",{"_index":785,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["skipmissingproperties",{"_index":451,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["snapshots",{"_index":965,"title":{},"body":{"index.html":{}}}],["software",{"_index":970,"title":{},"body":{"index.html":{},"license.html":{}}}],["sole",{"_index":1379,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1334,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":1352,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1413,"title":{},"body":{"license.html":{}}}],["src",{"_index":857,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../deposit",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.helper.ts",{"_index":800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../env.objects.ts",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":802,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../get",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../show",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../update",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../util.helper.ts",{"_index":801,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/application/controllers/account.controller.ts",{"_index":6,"title":{},"body":{"controllers/AccountController.html":{},"coverage.html":{}}}],["src/application/controllers/account.controller.ts:109",{"_index":57,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/application/controllers/account.controller.ts:134",{"_index":75,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/application/controllers/account.controller.ts:55",{"_index":35,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/application/controllers/account.controller.ts:81",{"_index":64,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/application/controllers/balance.controller.ts",{"_index":332,"title":{},"body":{"controllers/BalanceController.html":{},"coverage.html":{}}}],["src/application/controllers/balance.controller.ts:116",{"_index":347,"title":{},"body":{"controllers/BalanceController.html":{}}}],["src/application/controllers/balance.controller.ts:40",{"_index":339,"title":{},"body":{"controllers/BalanceController.html":{}}}],["src/application/controllers/balance.controller.ts:76",{"_index":351,"title":{},"body":{"controllers/BalanceController.html":{}}}],["src/application/controllers/health.controller.ts",{"_index":474,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/application/controllers/health.controller.ts:21",{"_index":478,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/application/dtos/create",{"_index":378,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/dtos/deposit",{"_index":417,"title":{},"body":{"classes/DepositMoneyRequestDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/dtos/get",{"_index":456,"title":{},"body":{"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/dtos/show",{"_index":658,"title":{},"body":{"classes/ShowBalanceReponseDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/dtos/update",{"_index":661,"title":{},"body":{"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/entities/account.entity.ts",{"_index":168,"title":{},"body":{"interfaces/AccountEntity.html":{},"coverage.html":{}}}],["src/domain/exceptions/http",{"_index":511,"title":{},"body":{"classes/HttpResponseException.html":{},"coverage.html":{}}}],["src/domain/helpers/env.helper.ts",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/domain/helpers/util.helper.ts",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/domain/interceptors/logger.interceptor.ts",{"_index":557,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"coverage.html":{}}}],["src/domain/interceptors/logger.interceptor.ts:16",{"_index":578,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["src/domain/interceptors/logger.interceptor.ts:25",{"_index":566,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["src/domain/interceptors/logger.interceptor.ts:55",{"_index":572,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["src/domain/interfaces/http",{"_index":498,"title":{},"body":{"interfaces/HttpResponse.html":{},"coverage.html":{}}}],["src/domain/modules/account.module.ts",{"_index":194,"title":{},"body":{"modules/AccountModule.html":{}}}],["src/domain/modules/common/http",{"_index":526,"title":{},"body":{"modules/HttpResponseModule.html":{}}}],["src/domain/modules/common/logger.module.ts",{"_index":607,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/domain/modules/health.module.ts",{"_index":493,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/domain/pipes/validation.pipe.ts",{"_index":667,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{},"coverage.html":{}}}],["src/domain/repositories/account.repository.ts",{"_index":209,"title":{},"body":{"injectables/AccountRepository.html":{},"coverage.html":{}}}],["src/domain/repositories/account.repository.ts:10",{"_index":214,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["src/domain/repositories/account.repository.ts:22",{"_index":216,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["src/domain/repositories/account.repository.ts:31",{"_index":222,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["src/domain/repositories/account.repository.ts:40",{"_index":224,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["src/domain/repositories/account.repository.ts:49",{"_index":228,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["src/domain/servicecs/account.service.ts",{"_index":238,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/domain/servicecs/account.service.ts:107",{"_index":257,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:15",{"_index":244,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:21",{"_index":260,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:28",{"_index":247,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:51",{"_index":249,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:63",{"_index":253,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:76",{"_index":255,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:91",{"_index":252,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/common/http",{"_index":529,"title":{},"body":{"injectables/HttpResponseService.html":{},"coverage.html":{}}}],["src/domain/servicecs/common/logger.service.ts",{"_index":608,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/domain/servicecs/common/logger.service.ts:12",{"_index":640,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:16",{"_index":619,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:32",{"_index":621,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:41",{"_index":634,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:51",{"_index":627,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:60",{"_index":638,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:69",{"_index":624,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:78",{"_index":636,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:88",{"_index":630,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/infrastructure/config/env.objects.ts",{"_index":682,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/config/env.validation.ts",{"_index":423,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/infrastructure/config/env.validation.ts:12",{"_index":432,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/infrastructure/config/env.validation.ts:15",{"_index":436,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/infrastructure/config/env.validation.ts:18",{"_index":430,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/infrastructure/modules/app.module.ts",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/modules/common/common.module.ts",{"_index":373,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/main.ts",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stages",{"_index":896,"title":{},"body":{"index.html":{}}}],["start",{"_index":573,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"dependencies.html":{}}}],["start.sh",{"_index":838,"title":{},"body":{"index.html":{}}}],["startdocker",{"_index":910,"title":{},"body":{"index.html":{}}}],["started",{"_index":826,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":1015,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":571,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["state",{"_index":1298,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1227,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1292,"title":{},"body":{"license.html":{}}}],["statements",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":610,"title":{},"body":{"injectables/LoggerService.html":{}}}],["stating",{"_index":1266,"title":{},"body":{"license.html":{}}}],["status",{"_index":130,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpResponseService.html":{}}}],["status\":\"ok\",\"info\":{\"alive\":{\"status\":\"up\"}},\"error\":{},\"details\":{\"alive\":{\"status\":\"up",{"_index":1060,"title":{},"body":{"index.html":{}}}],["statuscode",{"_index":600,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["stop",{"_index":938,"title":{},"body":{"index.html":{}}}],["stop_docker",{"_index":921,"title":{},"body":{"index.html":{}}}],["stoppage",{"_index":1360,"title":{},"body":{"license.html":{}}}],["string",{"_index":131,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpResponseService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/functions.html":{}}}],["string})@header('content",{"_index":32,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["styles",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["subject",{"_index":1207,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1223,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1294,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1179,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1177,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1203,"title":{},"body":{"license.html":{}}}],["such",{"_index":1118,"title":{},"body":{"license.html":{}}}],["sudo",{"_index":914,"title":{},"body":{"index.html":{}}}],["suites",{"_index":960,"title":{},"body":{"index.html":{}}}],["suites.instructions",{"_index":968,"title":{},"body":{"index.html":{}}}],["summary",{"_index":128,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["super(httpexception.createbody(data",{"_index":520,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["supersede",{"_index":1302,"title":{},"body":{"license.html":{}}}],["support",{"_index":1372,"title":{},"body":{"license.html":{},"modules.html":{}}}],["supports",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["sure",{"_index":1051,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1418,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":794,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["syntax",{"_index":1400,"title":{},"body":{"license.html":{}}}],["systems",{"_index":1189,"title":{},"body":{"license.html":{}}}],["t",{"_index":911,"title":{},"body":{"index.html":{}}}],["table",{"_index":731,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":1010,"title":{},"body":{"index.html":{}}}],["tail",{"_index":1005,"title":{},"body":{"index.html":{}}}],["take",{"_index":230,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["taken",{"_index":698,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["takes",{"_index":65,"title":{},"body":{"controllers/AccountController.html":{},"miscellaneous/functions.html":{}}}],["tap",{"_index":580,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["tar",{"_index":903,"title":{},"body":{"index.html":{}}}],["target",{"_index":1018,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":1253,"title":{},"body":{"license.html":{}}}],["terminusmodule",{"_index":496,"title":{},"body":{"modules/HealthModule.html":{}}}],["terms",{"_index":1089,"title":{},"body":{"license.html":{}}}],["test",{"_index":840,"title":{},"body":{"index.html":{}}}],["tests",{"_index":963,"title":{},"body":{"index.html":{}}}],["tests/account.spec.ts",{"_index":958,"title":{},"body":{"index.html":{}}}],["tests/e2e.spec.ts",{"_index":954,"title":{},"body":{"index.html":{}}}],["tests/health.comtroller.spec.ts",{"_index":959,"title":{},"body":{"index.html":{}}}],["text",{"_index":1275,"title":{},"body":{"license.html":{}}}],["then(async",{"_index":361,"title":{},"body":{"controllers/BalanceController.html":{}}}],["theory",{"_index":1343,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1173,"title":{},"body":{"license.html":{}}}],["third",{"_index":1281,"title":{},"body":{"license.html":{}}}],["this.account_repository.create(account)).pipe(take(1)).subscribe(async",{"_index":273,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_repository.delete(query.id",{"_index":277,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_repository.get(id)).pipe(take(1)).subscribe(async",{"_index":288,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_repository.get(query.id)).pipe(take(1)).subscribe((data",{"_index":278,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_repository.get(record.id)).pipe(take(1)).subscribe(async",{"_index":280,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_repository.update(data",{"_index":285,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_service",{"_index":359,"title":{},"body":{"controllers/BalanceController.html":{}}}],["this.account_service.createnewaccount(body",{"_index":141,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.account_service.deleteaccount(query",{"_index":160,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.account_service.depositmodeny(account.id",{"_index":356,"title":{},"body":{"controllers/BalanceController.html":{}}}],["this.account_service.getaccount(query",{"_index":156,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["this.account_service.updateaccount(body",{"_index":162,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.accountservice.createasync(record",{"_index":234,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.accountservice.deleteasync(id",{"_index":235,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.accountservice.getasync(id",{"_index":236,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.accountservice.updateasync(record",{"_index":237,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.context",{"_index":645,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.getdescription(status",{"_index":540,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["this.getmessage(status",{"_index":538,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["this.gettype(status",{"_index":556,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["this.httpresponseservice",{"_index":138,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["this.httpresponseservice.generate(httpstatus.created",{"_index":144,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.httpresponseservice.generate(httpstatus.ok",{"_index":157,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["this.logger",{"_index":143,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"injectables/LoggerService.html":{}}}],["this.logger.debug(this.format(message",{"_index":652,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.error(this.format(message",{"_index":648,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.log",{"_index":601,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["this.logger.log(`[${error.name",{"_index":589,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["this.logger.log(this.format(message",{"_index":647,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.verbose(this.format(message",{"_index":653,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.warn(this.format(message",{"_index":651,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.loghttprequest(context",{"_index":587,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["this.mutex.acquire",{"_index":287,"title":{},"body":{"injectables/AccountService.html":{}}}],["this[key",{"_index":394,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["those",{"_index":1233,"title":{},"body":{"license.html":{}}}],["three",{"_index":868,"title":{},"body":{"index.html":{}}}],["through",{"_index":1072,"title":{},"body":{"index.html":{},"license.html":{}}}],["throw",{"_index":148,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"classes/EnvironmentVariables.html":{}}}],["throwed",{"_index":816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throws",{"_index":824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["thus",{"_index":874,"title":{},"body":{"index.html":{}}}],["time",{"_index":574,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"index.html":{}}}],["title",{"_index":1330,"title":{},"body":{"license.html":{}}}],["todo",{"_index":845,"title":{},"body":{"index.html":{}}}],["token",{"_index":472,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1344,"title":{},"body":{"license.html":{}}}],["total",{"_index":962,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1191,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1309,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1269,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1307,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":435,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/VirtualBankOptions.html":{},"index.html":{}}}],["transaction.tar",{"_index":905,"title":{},"body":{"index.html":{}}}],["transaction_commission",{"_index":427,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["transactionnpm",{"_index":907,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":1231,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":1027,"title":{},"body":{"index.html":{}}}],["transform",{"_index":674,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["transformation",{"_index":1142,"title":{},"body":{"license.html":{}}}],["transformed",{"_index":679,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["transformer",{"_index":438,"title":{},"body":{"classes/EnvironmentVariables.html":{},"dependencies.html":{}}}],["translation",{"_index":1143,"title":{},"body":{"license.html":{}}}],["true",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountResponseDTO.html":{},"injectables/LoggerService.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["true})@apiproperty({description",{"_index":402,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["try",{"_index":135,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{}}}],["type",{"_index":31,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpResponseService.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1148,"title":{},"body":{"license.html":{}}}],["types/dotenv",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["types/express",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["types/faker",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["types/morgan",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["undefined})@delete()@httpcode(httpstatus.ok",{"_index":56,"title":{},"body":{"controllers/AccountController.html":{}}}],["undefined})@get()@httpcode(httpstatus.ok",{"_index":63,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["undefined})@put()@httpcode(httpstatus.ok",{"_index":74,"title":{},"body":{"controllers/AccountController.html":{}}}],["under",{"_index":1110,"title":{},"body":{"license.html":{}}}],["union",{"_index":1106,"title":{},"body":{"license.html":{}}}],["units",{"_index":879,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":248,"title":{},"body":{"injectables/AccountService.html":{},"injectables/HttpResponseService.html":{}}}],["unless",{"_index":1296,"title":{},"body":{"license.html":{}}}],["up",{"_index":491,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["update",{"_index":212,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["update(record",{"_index":227,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["updateaccount",{"_index":18,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["updateaccount(@body",{"_index":161,"title":{},"body":{"controllers/AccountController.html":{}}}],["updateaccount(body",{"_index":70,"title":{},"body":{"controllers/AccountController.html":{}}}],["updateaccount(record",{"_index":254,"title":{},"body":{"injectables/AccountService.html":{}}}],["updateaccountrequestdto",{"_index":71,"title":{"classes/UpdateAccountRequestDTO.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{}}}],["updated",{"_index":467,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["updated_at",{"_index":174,"title":{},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/GetUserAccountResponseDTO.html":{},"miscellaneous/variables.html":{}}}],["updates",{"_index":72,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["url",{"_index":598,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["us/docs/web/http/status",{"_index":507,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["usage",{"_index":918,"title":{},"body":{"index.html":{}}}],["use",{"_index":1063,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":206,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{}}}],["user",{"_index":38,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"index.html":{}}}],["user'})@apibody({type",{"_index":55,"title":{},"body":{"controllers/AccountController.html":{}}}],["username",{"_index":175,"title":{},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":1425,"title":{},"body":{"properties.html":{}}}],["using",{"_index":983,"title":{},"body":{"index.html":{},"license.html":{}}}],["usr/src/app",{"_index":1040,"title":{},"body":{"index.html":{}}}],["usual",{"_index":942,"title":{},"body":{"index.html":{}}}],["util",{"_index":643,"title":{},"body":{"injectables/LoggerService.html":{}}}],["validate",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validate(config",{"_index":445,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["validated",{"_index":443,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatedconfig",{"_index":446,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatedto",{"_index":96,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatedto(body",{"_index":137,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["validatedto(dto",{"_index":818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validatedto(query",{"_index":155,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["validateoutputdto",{"_index":97,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateoutputdto(account",{"_index":355,"title":{},"body":{"controllers/BalanceController.html":{}}}],["validateoutputdto(balance",{"_index":367,"title":{},"body":{"controllers/BalanceController.html":{}}}],["validateoutputdto(data",{"_index":362,"title":{},"body":{"controllers/BalanceController.html":{}}}],["validateoutputdto(dto",{"_index":822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateoutputdto(response",{"_index":142,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["validates",{"_index":440,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["validatesync",{"_index":439,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync(validatedconfig",{"_index":450,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validation",{"_index":669,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["validationerror",{"_index":680,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["validationpipeoptions",{"_index":666,"title":{"interfaces/ValidationPipeOptions.html":{}},"body":{"interfaces/ValidationPipeOptions.html":{},"coverage.html":{}}}],["validator",{"_index":388,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"dependencies.html":{}}}],["validatoroptions",{"_index":671,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["value",{"_index":259,"title":{},"body":{"injectables/AccountService.html":{},"classes/EnvironmentVariables.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":668,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/ValidationPipeOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["vatiables",{"_index":425,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["verbal",{"_index":1182,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":616,"title":{},"body":{"injectables/LoggerService.html":{}}}],["verbose(message",{"_index":635,"title":{},"body":{"injectables/LoggerService.html":{}}}],["version",{"_index":1084,"title":{},"body":{"license.html":{},"properties.html":{}}}],["very",{"_index":869,"title":{},"body":{"index.html":{}}}],["virtualbank",{"_index":683,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["virtualbankoptions",{"_index":681,"title":{"interfaces/VirtualBankOptions.html":{}},"body":{"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":575,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{}}}],["want",{"_index":67,"title":{},"body":{"controllers/AccountController.html":{},"index.html":{}}}],["warn",{"_index":617,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warn(message",{"_index":637,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warning",{"_index":639,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warranties",{"_index":1326,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1321,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1008,"title":{},"body":{"index.html":{}}}],["way",{"_index":943,"title":{},"body":{"index.html":{}}}],["ways",{"_index":901,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["whatever",{"_index":888,"title":{},"body":{"index.html":{}}}],["wherever",{"_index":1280,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1119,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1165,"title":{},"body":{"license.html":{}}}],["widraw",{"_index":336,"title":{},"body":{"controllers/BalanceController.html":{},"index.html":{}}}],["widraw(@query",{"_index":358,"title":{},"body":{"controllers/BalanceController.html":{}}}],["widraw(query",{"_index":349,"title":{},"body":{"controllers/BalanceController.html":{}}}],["widraw_commission",{"_index":428,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["widrawal",{"_index":694,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["widrawmoney",{"_index":242,"title":{},"body":{"injectables/AccountService.html":{}}}],["widrawmoney(account.id",{"_index":360,"title":{},"body":{"controllers/BalanceController.html":{}}}],["widrawmoney(id",{"_index":256,"title":{},"body":{"injectables/AccountService.html":{}}}],["willsoto/nestjs",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["wirdraws",{"_index":352,"title":{},"body":{"controllers/BalanceController.html":{}}}],["within",{"_index":1205,"title":{},"body":{"license.html":{}}}],["without",{"_index":1258,"title":{},"body":{"license.html":{}}}],["work",{"_index":1149,"title":{},"body":{"license.html":{}}}],["workdir",{"_index":1039,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":1000,"title":{},"body":{"index.html":{}}}],["works",{"_index":1158,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":1211,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1200,"title":{},"body":{"license.html":{}}}],["written",{"_index":1183,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["xvf",{"_index":904,"title":{},"body":{"index.html":{}}}],["yes",{"_index":628,"title":{},"body":{"injectables/LoggerService.html":{}}}],["yyyy",{"_index":1408,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":191,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AccountController.html":{"url":"controllers/AccountController.html","title":"controller - AccountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/controllers/account.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/v1/account\n            \n\n\n            \n                Description\n            \n            \n                Account controller class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewAccountHandler\n                            \n                            \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Async\n                                getAccount\n                            \n                            \n                                    Async\n                                updateAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createNewAccountHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewAccountHandler(body: CreateAccountRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Entry point for crteate account API'})@ApiResponse({status: 201, description: 'Creates a new account', type: String})@Header('content-type', 'application/json')@Post()\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/account.controller.ts:55\n                \n            \n\n\n            \n                \n                    This endpoint creates a new account for a given user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        body of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        return CreateAccountReponseDTO\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount(query: GetUserAccountRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Deletes the account associated to a given user with user id'})@ApiResponse({status: 200, description: 'Deletes account object of the user'})@ApiBody({type: undefined})@Delete()@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/account.controller.ts:109\n                \n            \n\n\n            \n                \n                    Deletes the account of a given user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        HTTPReponse\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccount(query: GetUserAccountRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Returns back the account associated to a given user with user id'})@ApiResponse({status: 200, description: 'Returns back account object of the user', type: GetUserAccountResponseDTO})@ApiBody({type: undefined})@Get()@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/account.controller.ts:81\n                \n            \n\n\n            \n                \n                    Takes a radious in which we want to invite the customers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        HTTPReponse\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAccount(body: UpdateAccountRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updates the account associated to a given user with user id'})@ApiResponse({status: 200, description: 'Updates account object of the user', type: CreateAccountRequestDTO})@ApiBody({type: undefined})@Put()@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/account.controller.ts:134\n                \n            \n\n\n            \n                \n                    Updates the account of a given user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UpdateAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GetUserAccountRequestDTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        HTTPReponse\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Header,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  Patch,\n  Post,\n  Put,\n  Query,\n  Req,\n  Res,\n} from '@nestjs/common';\nimport { ApiBody, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { HttpResponseException } from '../../domain/exceptions/http-response.exception';\nimport { processHttpError, validateDTO, validateOutputDTO } from '../../domain/helpers';\nimport { HttpResponse } from '../../domain/interfaces';\nimport { HttpResponseService, LoggerService } from '../../domain/servicecs';\nimport { AccountService } from '../../domain/servicecs/Account.service';\nimport { CreateAccountRequestDTO, GetUserAccountRequestDTO, GetUserAccountResponseDTO } from '../dtos';\nimport { DepositMoneyRequestDTO } from '../dtos/deposit-money-request.dto';\nimport { ShowBalanceReponseDTO } from '../dtos/show-balance-response.dto';\nimport { UpdateAccountRequestDTO } from '../dtos/update-account-request.dto';\n/**\n * Account controller class\n */\n@Controller('api/v1/account')\nexport class AccountController {\n  /**\n   * Constructs account controller class\n   * @param account_service Account service\n   */\n  constructor(\n    @Inject('ACCOUNT') private readonly account_service: AccountService,\n    private readonly httpResponseService: HttpResponseService,\n    private readonly logger: LoggerService\n  ) {}\n  //================================================================================================================\n  /**\n   * This endpoint creates a new account for a given user\n   * @param body body of the request\n   * @returns return CreateAccountReponseDTO\n   */\n  @ApiOperation({ summary: 'Entry point for crteate account API' })\n  @ApiResponse({\n    status: 201,\n    description: 'Creates a new account',\n    type: String,\n  })\n  @Header('content-type', 'application/json')\n  @Post()\n  async createNewAccountHandler(@Body() body: CreateAccountRequestDTO): Promise {\n    try {\n      await validateDTO(body, this.httpResponseService);\n      const response = await this.account_service.createNewAccount(body);\n      await validateOutputDTO(response, this.logger);\n      return this.httpResponseService.generate(HttpStatus.CREATED, response);\n    } catch (error) {\n      processHttpError(error, this.logger);\n      throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n    }\n  }\n  //================================================================================================================\n  /**\n   * Takes a radious in which we want to invite the customers.\n   * @param body radious circle information\n   * @returns HTTPReponse\n   */\n  @ApiOperation({ summary: 'Returns back the account associated to a given user with user id' })\n  @ApiResponse({\n    status: 200,\n    description: 'Returns back account object of the user',\n    type: GetUserAccountResponseDTO,\n  })\n  @ApiBody({ type: [GetUserAccountRequestDTO] })\n  @Get()\n  @HttpCode(HttpStatus.OK)\n  async getAccount(@Query() query: GetUserAccountRequestDTO): Promise {\n    try {\n      await validateDTO(query, this.httpResponseService);\n      const response = await this.account_service.getAccount(query);\n      if (!response) {\n        throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n      }\n      await validateOutputDTO(response, this.logger);\n      return this.httpResponseService.generate(HttpStatus.OK, response);\n    } catch (error) {\n      processHttpError(error, this.logger);\n      throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.INTERNAL_SERVER_ERROR));\n    }\n  }\n  //================================================================================================================\n  /**\n   * Deletes the account of a given user.\n   * @param body GetUserAccountRequestDTO\n   * @returns HTTPReponse\n   */\n  @ApiOperation({ summary: 'Deletes the account associated to a given user with user id' })\n  @ApiResponse({\n    status: 200,\n    description: 'Deletes account object of the user',\n  })\n  @ApiBody({ type: [GetUserAccountRequestDTO] })\n  @Delete()\n  @HttpCode(HttpStatus.OK)\n  async deleteAccount(@Query() query: GetUserAccountRequestDTO): Promise {\n    try {\n      await validateDTO(query, this.httpResponseService);\n      await this.account_service.deleteAccount(query);\n      return this.httpResponseService.generate(HttpStatus.OK);\n    } catch (error) {\n      processHttpError(error, this.logger);\n      throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.INTERNAL_SERVER_ERROR));\n    }\n  }\n  //================================================================================================================\n  /**\n   * Updates the account of a given user.\n   * @param body GetUserAccountRequestDTO\n   * @returns HTTPReponse\n   */\n  @ApiOperation({ summary: 'Updates the account associated to a given user with user id' })\n  @ApiResponse({\n    status: 200,\n    description: 'Updates account object of the user',\n    type: CreateAccountRequestDTO,\n  })\n  @ApiBody({ type: [UpdateAccountRequestDTO] })\n  @Put()\n  @HttpCode(HttpStatus.OK)\n  async updateAccount(@Body() body: UpdateAccountRequestDTO): Promise {\n    try {\n      await validateDTO(body, this.httpResponseService);\n      const response = await this.account_service.updateAccount(body);\n      if (!response) {\n        throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n      }\n      await validateOutputDTO(response, this.logger);\n      return this.httpResponseService.generate(HttpStatus.OK, response);\n    } catch (error) {\n      processHttpError(error, this.logger);\n      throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.INTERNAL_SERVER_ERROR));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountEntity.html":{"url":"interfaces/AccountEntity.html","title":"interface - AccountEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/account.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    InMemoryDBEntity\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            balance\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            family\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        family:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InMemoryDBEntity } from '@nestjs-addons/in-memory-db';\n\nexport interface AccountEntity extends InMemoryDBEntity {\n  username: string;\n  name: string;\n  family: string;\n  balance?: number;\n  created_at?: Date;\n  updated_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AccountModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nCommonModule->AccountModule\n\n\n\n\n\nAccountRepository\n\nAccountRepository\n\nAccountModule -->\n\nAccountRepository->AccountModule\n\n\n\n\n\nHttpResponseService\n\nHttpResponseService\n\nAccountModule -->\n\nHttpResponseService->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/account.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountRepository\n                        \n                        \n                            HttpResponseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountController\n                        \n                        \n                            BalanceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountService } from '../servicecs/Account.service';\nimport { AccountController } from '../../application/controllers/account.controller';\nimport { AccountRepository } from '../repositories/account.repository';\nimport { InMemoryDBService } from '@nestjs-addons/in-memory-db';\nimport { HttpResponseService, LoggerService } from '../servicecs';\nimport { CommonModule } from '../../infrastructure/modules/common';\nimport { BalanceController } from '../../application/controllers';\n\n@Module({\n  imports: [CommonModule],\n  controllers: [AccountController, BalanceController],\n  providers: [\n    {\n      provide: 'ACCOUNT',\n      useClass: AccountService,\n    },\n    AccountRepository,\n    InMemoryDBService,\n    HttpResponseService,\n  ],\n})\nexport class AccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountRepository.html":{"url":"injectables/AccountRepository.html","title":"injectable - AccountRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/repositories/account.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Account repository\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: InMemoryDBService)\n                    \n                \n                        \n                            \n                                Defined in src/domain/repositories/account.repository.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs account repository class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        InMemoryDBService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                account in memory db service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(record: AccountEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/repositories/account.repository.ts:22\n                \n            \n\n\n            \n                \n                    Creates a new account inside inMemoryDB\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                                AccountEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Account entity\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/repositories/account.repository.ts:31\n                \n            \n\n\n            \n                \n                    Deletes an account inside inMemoryDb\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/repositories/account.repository.ts:40\n                \n            \n\n\n            \n                \n                    Gets an account record from InMemoryDb\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id os the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(record: AccountEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/repositories/account.repository.ts:49\n                \n            \n\n\n            \n                \n                    Updates an account inside inMemoryDB\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                                AccountEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Account entity\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InMemoryDBService } from '@nestjs-addons/in-memory-db';\nimport { Injectable } from '@nestjs/common';\nimport { Observable, take } from 'rxjs';\nimport { AccountEntity } from '../entities/account.entity';\n\n/**\n * Account repository\n */\n@Injectable()\nexport class AccountRepository {\n  /**\n   * Constructs account repository class\n   * @param accountService account in memory db service\n   */\n  constructor(private readonly accountService: InMemoryDBService) {}\n  //=======================================================================================================\n  /**\n   * Creates a new account inside inMemoryDB\n   * @param record Account entity\n   * @returns Promise>\n   */\n  async create(record: AccountEntity): Promise> {\n    return this.accountService.createAsync(record);\n  }\n  //=======================================================================================================\n  /**\n   * Deletes an account inside inMemoryDb\n   * @param id id of the user\n   * @returns Promise>\n   */\n  async delete(id: string): Promise> {\n    return this.accountService.deleteAsync(id);\n  }\n  //=======================================================================================================\n  /**\n   * Gets an account record from InMemoryDb\n   * @param id id os the user\n   * @returns Promise>\n   */\n  async get(id: string): Promise> {\n    return this.accountService.getAsync(id);\n  }\n  //=======================================================================================================\n  /**\n   * Updates an account inside inMemoryDB\n   * @param record Account entity\n   * @returns Promise>\n   */\n  async update(record: AccountEntity): Promise> {\n    return this.accountService.updateAsync(record);\n  }\n  //=======================================================================================================\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/servicecs/Account.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Account service class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mutex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewAccount\n                            \n                            \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Async\n                                depositModeny\n                            \n                            \n                                    Async\n                                getAccount\n                            \n                            \n                                    Async\n                                updateAccount\n                            \n                            \n                                    Async\n                                widrawMoney\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(account_repository: AccountRepository)\n                    \n                \n                        \n                            \n                                Defined in src/domain/servicecs/Account.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructs Account service class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        account_repository\n                                                  \n                                                        \n                                                                        AccountRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                account repository\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createNewAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewAccount(record: CreateAccountRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:28\n                \n            \n\n\n            \n                \n                    Creates a new account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                                CreateAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Account entity\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount(query: GetUserAccountRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:51\n                \n            \n\n\n            \n                \n                    Deletes an account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        depositModeny\n                        \n                    \n                \n            \n            \n                \n                    \n                    depositModeny(id: string, amount: DepositMoneyRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                DepositMoneyRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccount(query: GetUserAccountRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:63\n                \n            \n\n\n            \n                \n                    Gets an account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAccount(record: UpdateAccountRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:76\n                \n            \n\n\n            \n                \n                    Updates an account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                                UpdateAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Account entity\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        widrawMoney\n                        \n                    \n                \n            \n            \n                \n                    \n                    widrawMoney(id: string, amount: DepositMoneyRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                DepositMoneyRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mutex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Mutex()\n                    \n                \n                    \n                        \n                                Defined in src/domain/servicecs/Account.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Mutex } from 'async-mutex';\nimport { take } from 'rxjs';\nimport { CreateAccountRequestDTO, GetUserAccountRequestDTO, GetUserAccountResponseDTO } from '../../application/dtos';\nimport { DepositMoneyRequestDTO } from '../../application/dtos/deposit-money-request.dto';\nimport { UpdateAccountRequestDTO } from '../../application/dtos/update-account-request.dto';\nimport { AccountEntity } from '../entities';\nimport { naiveRound } from '../helpers';\nimport { AccountRepository } from '../repositories/account.repository';\n\n/**\n * Account service class\n */\n@Injectable()\nexport class AccountService {\n  /**\n   * Constructs Account service class\n   * @param account_repository account repository\n   */\n  constructor(private readonly account_repository: AccountRepository) {}\n  mutex = new Mutex();\n  //====================================================================================================================================\n  /**\n   * Creates a new account\n   * @param record Account entity\n   * @returns Promise>\n   */\n  async createNewAccount(record: CreateAccountRequestDTO) {\n    const account: AccountEntity = {\n      username: record.username,\n      name: record.name,\n      family: record.family,\n      created_at: new Date(),\n      updated_at: new Date(),\n      balance: 0.0,\n      id: '',\n    };\n    return new Promise(async resolve => {\n      (await this.account_repository.create(account)).pipe(take(1)).subscribe(async (data: any) => {\n        const response = { id: data.id };\n        resolve(response);\n      });\n    });\n  }\n  //====================================================================================================================================\n  /**\n   * Deletes an account\n   * @param id id of the user\n   * @returns Promise>\n   */\n  async deleteAccount(query: GetUserAccountRequestDTO): Promise {\n    return new Promise(async resolve => {\n      await this.account_repository.delete(query.id);\n      resolve();\n    });\n  }\n  //====================================================================================================================================\n  /**\n   * Gets an account\n   * @param id id os the user\n   * @returns Promise>\n   */\n  async getAccount(query: GetUserAccountRequestDTO): Promise {\n    return new Promise(async resolve => {\n      (await this.account_repository.get(query.id)).pipe(take(1)).subscribe((data: any) => {\n        resolve(data);\n      });\n    });\n  }\n  //====================================================================================================================================\n  /**\n   * Updates an account\n   * @param record Account entity\n   * @returns Promise>\n   */\n  async updateAccount(record: UpdateAccountRequestDTO): Promise {\n    return new Promise(async resolve => {\n      (await this.account_repository.get(record.id)).pipe(take(1)).subscribe(async (data: any) => {\n        if (data) {\n          if (record.name) data.name = record.name;\n          if (record.family) data.family = record.family;\n          if (record.currency) data.currencies = record.currency;\n          await this.account_repository.update(data);\n        }\n\n        resolve(data);\n      });\n    });\n  }\n  //====================================================================================================================================\n  async depositModeny(id: string, amount: DepositMoneyRequestDTO) {\n    const release = await this.mutex.acquire();\n    try {\n      return new Promise(async resolve => {\n        (await this.account_repository.get(id)).pipe(take(1)).subscribe(async (data: any) => {\n          (await data).balance += amount.amount;\n          (await data).balance = naiveRound((await data).balance, 3);\n          await this.account_repository.update(data);\n          resolve(data);\n        });\n      });\n    } finally {\n      release();\n    }\n  }\n  //====================================================================================================================================\n  async widrawMoney(id: string, amount: DepositMoneyRequestDTO) {\n    const release = await this.mutex.acquire();\n    try {\n      return new Promise(async (resolve, rejects) => {\n        try {\n          (await this.account_repository.get(id)).pipe(take(1)).subscribe(async (data: any) => {\n            if (data.balance \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/modules/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            application module\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheInterceptor, CacheModule, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { ConfigModule } from '@nestjs/config';\nimport { configuration } from '../config/env.objects';\nimport { validate } from '../config/env.validation';\nimport { LoggerInterceptor } from '../../domain/interceptors';\nimport * as modules from '../../domain/modules';\nimport { CommonModule } from './common/common.module';\nimport { PrometheusModule } from '@willsoto/nestjs-prometheus';\n\n/**\n * application modules list\n */\nconst modulesList = Object.keys(modules).map(moduleIndex => modules[moduleIndex as keyof typeof modules]);\n\n/**\n * application module\n */\n@Module({\n  imports: [\n    PrometheusModule.register(),\n    CacheModule.register(),\n    CommonModule,\n    ConfigModule.forRoot({\n      load: [configuration],\n      validate,\n      isGlobal: true,\n      cache: true,\n      expandVariables: true,\n    }),\n    ...modulesList,\n  ],\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: CacheInterceptor,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: LoggerInterceptor,\n    },\n  ],\n  controllers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BalanceController.html":{"url":"controllers/BalanceController.html","title":"controller - BalanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BalanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/controllers/balance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/v1/balance\n            \n\n\n            \n                Description\n            \n            \n                Balance controller class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                depositMoney\n                            \n                            \n                                    Async\n                                showBalance\n                            \n                            \n                                    Async\n                                widraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        depositMoney\n                        \n                    \n                \n            \n            \n                \n                    \n                    depositMoney(query: GetUserAccountRequestDTO, body: DepositMoneyRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Entry point for crteate account API'})@ApiResponse({status: 200, description: 'Creates a new account', type: String})@Header('content-type', 'application/json')@Post('deposit')\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/balance.controller.ts:40\n                \n            \n\n\n            \n                \n                    This endpoint deposits money to user account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        query of the API\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                DepositMoneyRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        body of the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        lastest changed acount info\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    showBalance(query: GetUserAccountRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Returns back the balance of the account'})@ApiResponse({status: 200, description: 'Returns back the balance of the account', type: ShowBalanceReponseDTO})@ApiBody({type: undefined})@Get()@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/balance.controller.ts:116\n                \n            \n\n\n            \n                \n                    This endpoint show money balance from user account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        query of the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        lastest changed acount info\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        widraw\n                        \n                    \n                \n            \n            \n                \n                    \n                    widraw(query: GetUserAccountRequestDTO, body: DepositMoneyRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Entry point for crteate account API'})@ApiResponse({status: 200, description: 'Creates a new account', type: String})@Header('content-type', 'application/json')@Post('widraw')\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/balance.controller.ts:76\n                \n            \n\n\n            \n                \n                    This endpoint wirdraws money from user account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        query of the API\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                DepositMoneyRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        body of the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        lastest changed acount info\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Header, HttpCode, HttpStatus, Inject, Post, Query } from '@nestjs/common';\nimport { ApiBody, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { HttpResponseException } from '../../domain/exceptions/http-response.exception';\nimport { processHttpError, validateDTO, validateOutputDTO } from '../../domain/helpers';\nimport { HttpResponse } from '../../domain/interfaces';\nimport { HttpResponseService, LoggerService } from '../../domain/servicecs';\nimport { AccountService } from '../../domain/servicecs/Account.service';\nimport { GetUserAccountRequestDTO } from '../dtos';\nimport { DepositMoneyRequestDTO } from '../dtos/deposit-money-request.dto';\nimport { ShowBalanceReponseDTO } from '../dtos/show-balance-response.dto';\n/**\n * Balance controller class\n */\n@Controller('api/v1/balance')\nexport class BalanceController {\n  /**\n   * Constructs balance controller class\n   * @param account_service Account service\n   */\n  constructor(\n    @Inject('ACCOUNT') private readonly account_service: AccountService,\n    private readonly httpResponseService: HttpResponseService,\n    private readonly logger: LoggerService\n  ) {}\n  //================================================================================================================\n  /**\n   * This endpoint deposits money to user account\n   * @param query query of the API\n   * @param body body of the API\n   * @returns lastest changed acount info\n   */\n  @ApiOperation({ summary: 'Entry point for crteate account API' })\n  @ApiResponse({\n    status: 200,\n    description: 'Creates a new account',\n    type: String,\n  })\n  @Header('content-type', 'application/json')\n  @Post('deposit')\n  async depositMoney(\n    @Query() query: GetUserAccountRequestDTO,\n    @Body() body: DepositMoneyRequestDTO\n  ): Promise {\n    try {\n      await validateDTO(query, this.httpResponseService);\n      await validateDTO(body, this.httpResponseService);\n      const account = await this.account_service.getAccount(query);\n\n      if (!account) {\n        throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n      }\n      await validateOutputDTO(account, this.logger);\n      const response = await this.account_service.depositModeny(account.id, body);\n      await validateOutputDTO(response, this.logger);\n      return this.httpResponseService.generate(HttpStatus.OK, response);\n    } catch (error) {\n      processHttpError(error, this.logger);\n      throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n    }\n  }\n  //================================================================================================================\n  /**\n   * This endpoint wirdraws money from user account\n   * @param query query of the API\n   * @param body body of the API\n   * @returns lastest changed acount info\n   */\n  @ApiOperation({ summary: 'Entry point for crteate account API' })\n  @ApiResponse({\n    status: 200,\n    description: 'Creates a new account',\n    type: String,\n  })\n  @Header('content-type', 'application/json')\n  @Post('widraw')\n  async widraw(@Query() query: GetUserAccountRequestDTO, @Body() body: DepositMoneyRequestDTO): Promise {\n    try {\n      await validateDTO(query, this.httpResponseService);\n      await validateDTO(body, this.httpResponseService);\n      const account = await this.account_service.getAccount(query);\n      if (!account) {\n        throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n      }\n      await validateOutputDTO(account, this.logger);\n      return this.account_service\n        .widrawMoney(account.id, body)\n        .then(async data => {\n          await validateOutputDTO(data, this.logger);\n          return this.httpResponseService.generate(HttpStatus.OK, data);\n        })\n        .catch(error => {\n          processHttpError(error, this.logger);\n          throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_ACCEPTABLE, error));\n        });\n    } catch (error) {\n      processHttpError(error, this.logger);\n      throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n    }\n  }\n  //================================================================================================================\n  /**\n   * This endpoint show money balance from user account\n   * @param query query of the API\n   * @param body body of the API\n   * @returns lastest changed acount info\n   */\n  @ApiOperation({ summary: 'Returns back the balance of the account' })\n  @ApiResponse({\n    status: 200,\n    description: 'Returns back the balance of the account',\n    type: ShowBalanceReponseDTO,\n  })\n  @ApiBody({ type: [GetUserAccountRequestDTO] })\n  @Get()\n  @HttpCode(HttpStatus.OK)\n  async showBalance(@Query() query: GetUserAccountRequestDTO): Promise {\n    try {\n      await validateDTO(query, this.httpResponseService);\n      const account = await this.account_service.getAccount(query);\n      if (!account) {\n        throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n      }\n      await validateOutputDTO(account, this.logger);\n      const balance = { balance: account.balance };\n      await validateOutputDTO(balance, this.logger);\n      return this.httpResponseService.generate(HttpStatus.OK, balance);\n    } catch (error) {\n      processHttpError(error, this.logger);\n      throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.INTERNAL_SERVER_ERROR));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\n\nHttpResponseModule\n\nHttpResponseModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nHttpResponseModule->CommonModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCommonModule -->\n\nLoggerModule->CommonModule\n\n\n\n\n\nHttpResponseModule \n\nHttpResponseModule \n\nHttpResponseModule  -->\n\nCommonModule->HttpResponseModule \n\n\n\n\n\nLoggerModule \n\nLoggerModule \n\nLoggerModule  -->\n\nCommonModule->LoggerModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/modules/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HttpResponseModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HttpResponseModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HttpResponseModule } from '../../../domain/modules/common';\nimport { LoggerModule } from '../../../domain/modules/common';\n\n@Module({\n  imports: [HttpResponseModule, LoggerModule],\n  exports: [HttpResponseModule, LoggerModule],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountReposnseDto.html":{"url":"classes/CreateAccountReposnseDto.html","title":"class - CreateAccountReposnseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountReposnseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/create-account-response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                CreateAccountReposnseDto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/create-account-response.dto.ts:20\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@ApiProperty({description: 'id of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-account-response.dto.ts:20\n                        \n                    \n\n            \n                \n                    id of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsNotEmpty, IsString } from 'class-validator';\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['acccount_token', 'id'];\n/**\n * CreateAccountReposnseDto\n */\nexport class CreateAccountReposnseDto {\n  /**\n   * id of the user\n   */\n  @IsDefined()\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'id of the user',\n  })\n  id: string;\n\n  /**\n   * get user DTO constructor\n   * @param properties DTO properties\n   */\n  constructor(properties: any = {}) {\n    Object.keys(properties).forEach((key: string) => {\n      if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountRequestDTO.html":{"url":"classes/CreateAccountRequestDTO.html","title":"class - CreateAccountRequestDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/create-account-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                family\n                            \n                            \n                                name\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/create-account-request.dto.ts:53\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Currencies\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNotEmpty()@IsEnum(Currencies, {each: true})@ApiProperty({description: 'currency of the user account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-account-request.dto.ts:53\n                        \n                    \n\n            \n                \n                    default currency of the account\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        family\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'family of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-account-request.dto.ts:31\n                        \n                    \n\n            \n                \n                    familty of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-account-request.dto.ts:20\n                        \n                    \n\n            \n                \n                    name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'username of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-account-request.dto.ts:42\n                        \n                    \n\n            \n                \n                    username of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsEmail, IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength, MinLength } from 'class-validator';\nimport { Currencies } from '../../domain/enums/currencies.enum';\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['name', 'familty', 'username', 'currency'];\nexport class CreateAccountRequestDTO {\n  /**\n   * name of the user\n   */\n  @IsDefined()\n  @IsString()\n  @MaxLength(30)\n  @MinLength(3)\n  @ApiProperty({\n    description: 'name of the user',\n  })\n  name: string;\n  /**\n   * familty of the user\n   */\n  @IsDefined()\n  @IsString()\n  @MaxLength(30)\n  @MinLength(3)\n  @ApiProperty({\n    description: 'family of the user',\n  })\n  family: string;\n  /**\n   * username of the user\n   */\n  @IsDefined()\n  @IsString()\n  @MaxLength(30)\n  @MinLength(3)\n  @ApiProperty({\n    description: 'username of the user',\n  })\n  username: string;\n\n  /**\n   * default currency of the account\n   */\n  @IsDefined()\n  @IsNotEmpty()\n  @IsEnum(Currencies, { each: true })\n  @ApiProperty({\n    description: 'currency of the user account',\n  })\n  currency: Currencies;\n\n  /**\n   * get user DTO constructor\n   * @param properties DTO properties\n   */\n  constructor(properties: any = {}) {\n    Object.keys(properties).forEach((key: string) => {\n      if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DepositMoneyRequestDTO.html":{"url":"classes/DepositMoneyRequestDTO.html","title":"class - DepositMoneyRequestDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DepositMoneyRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/deposit-money-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/deposit-money-request.dto.ts:18\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNumber()@IsNotEmpty()@ApiProperty({description: 'amount of the user account balance'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/deposit-money-request.dto.ts:18\n                        \n                    \n\n            \n                \n                    amount of money to deposit\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsNotEmpty, IsNumber } from 'class-validator';\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['amount'];\nexport class DepositMoneyRequestDTO {\n  /**\n   * amount of money to deposit\n   */\n  @IsDefined()\n  @IsNumber()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'amount of the user account balance',\n  })\n  amount: number;\n\n  /**\n   * get user DTO constructor\n   * @param properties DTO properties\n   */\n  constructor(properties: any = {}) {\n    Object.keys(properties).forEach((key: string) => {\n      if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariables.html":{"url":"classes/EnvironmentVariables.html","title":"class - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/config/env.validation.ts\n        \n\n\n            \n                Description\n            \n            \n                env vatiables\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DEPOSIT_FEE_PER_MINUTE\n                            \n                            \n                                TRANSACTION_COMMISSION\n                            \n                            \n                                WIDRAW_COMMISSION\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DEPOSIT_FEE_PER_MINUTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.0001\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/config/env.validation.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TRANSACTION_COMMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.001\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/config/env.validation.ts:12\n                        \n                    \n\n            \n                \n                    Represents the amount of comission for each transaction\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WIDRAW_COMMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.001\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/config/env.validation.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { plainToClass } from 'class-transformer';\nimport { validateSync, IsOptional } from 'class-validator';\n\n/**\n * env vatiables\n */\nclass EnvironmentVariables {\n  /**\n   * Represents the amount of comission for each transaction\n   */\n  @IsOptional()\n  TRANSACTION_COMMISSION = 0.001;\n\n  @IsOptional()\n  WIDRAW_COMMISSION = 0.001;\n\n  @IsOptional()\n  DEPOSIT_FEE_PER_MINUTE = 0.0001;\n}\n\n/**\n * validates the config\n * @param config congig\n * @returns validated config\n */\nexport function validate(config: Record) {\n  const validatedConfig = plainToClass(EnvironmentVariables, config, { enableImplicitConversion: true });\n  const errors = validateSync(validatedConfig, { skipMissingProperties: false });\n\n  if (errors.length > 0) {\n    throw new Error(errors.toString());\n  }\n  return validatedConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserAccountRequestDTO.html":{"url":"classes/GetUserAccountRequestDTO.html","title":"class - GetUserAccountRequestDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserAccountRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/get-account-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/get-account-request.dto.ts:18\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@ApiProperty({description: 'id of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-request.dto.ts:18\n                        \n                    \n\n            \n                \n                    id of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsNotEmpty, IsString } from 'class-validator';\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['id'];\nexport class GetUserAccountRequestDTO {\n  /**\n   * id of the user\n   */\n  @IsDefined()\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'id of the user',\n  })\n  id: string;\n\n  /**\n   * get user DTO constructor\n   * @param properties DTO properties\n   */\n  constructor(properties: any = {}) {\n    Object.keys(properties).forEach((key: string) => {\n      if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserAccountResponseDTO.html":{"url":"classes/GetUserAccountResponseDTO.html","title":"class - GetUserAccountResponseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserAccountResponseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/get-account-reponse.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                            \n                                created_at\n                            \n                            \n                                currency\n                            \n                            \n                                family\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updated_at\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:118\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNumber()@IsNotEmpty()@ApiProperty({description: 'balance of the user acount'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:118\n                        \n                    \n\n            \n                \n                    balance of the aaount\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsDate()@IsNotEmpty()@ApiProperty({description: 'acount created at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:96\n                        \n                    \n\n            \n                \n                    date of when account had been created\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Currencies\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNotEmpty()@IsEnum(Currencies, {each: true})@ApiProperty({description: 'currency of the user acount balance'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:85\n                        \n                    \n\n            \n                \n                    default currency of the account\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        family\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'family of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:64\n                        \n                    \n\n            \n                \n                    familty of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@ApiProperty({description: 'id of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:41\n                        \n                    \n\n            \n                \n                    id of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:53\n                        \n                    \n\n            \n                \n                    name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsDate()@IsNotEmpty()@ApiProperty({description: 'account updated at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:107\n                        \n                    \n\n            \n                \n                    date of when account had been updated\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'username of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:75\n                        \n                    \n\n            \n                \n                    username of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsDate,\n  IsDefined,\n  IsEmail,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\nimport { Currencies } from '../../domain/enums/currencies.enum';\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = [\n  'id',\n  'name',\n  'familty',\n  'username',\n  'currency',\n  'created_at',\n  'updated_at',\n  'token',\n  'balance',\n];\nexport class GetUserAccountResponseDTO {\n  /**\n   * id of the user\n   */\n  @IsDefined()\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'id of the user',\n  })\n  id: string;\n\n  /**\n   * name of the user\n   */\n  @IsDefined()\n  @IsString()\n  @MaxLength(30)\n  @MinLength(3)\n  @ApiProperty({\n    description: 'name of the user',\n  })\n  name: string;\n  /**\n   * familty of the user\n   */\n  @IsDefined()\n  @IsString()\n  @MaxLength(30)\n  @MinLength(3)\n  @ApiProperty({\n    description: 'family of the user',\n  })\n  family: string;\n  /**\n   * username of the user\n   */\n  @IsDefined()\n  @IsString()\n  @MaxLength(30)\n  @MinLength(3)\n  @ApiProperty({\n    description: 'username of the user',\n  })\n  username: string;\n  /**\n   * default currency of the account\n   */\n  @IsDefined()\n  @IsNotEmpty()\n  @IsEnum(Currencies, { each: true })\n  @ApiProperty({\n    description: 'currency of the user acount balance',\n  })\n  currency: Currencies;\n\n  /**\n   * date of when account had been created\n   */\n  @IsDefined()\n  @IsDate()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'acount created at',\n  })\n  created_at: Date;\n\n  /**\n   * date of when account had been updated\n   */\n  @IsDefined()\n  @IsDate()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'account updated at',\n  })\n  updated_at: Date;\n\n  /**\n   * balance of the aaount\n   */\n  @IsDefined()\n  @IsNumber()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'balance of the user acount',\n  })\n  balance: number;\n\n  /**\n   * get user DTO constructor\n   * @param properties DTO properties\n   */\n  constructor(properties: any = {}) {\n    Object.keys(properties).forEach((key: string) => {\n      if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/controllers/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n            \n                Description\n            \n            \n                Health controller class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/health.controller.ts:21\n                \n            \n\n\n            \n                \n                    Checks the liveness of the project\n\n\n                    \n                    \n                    \n                        Returns :     { status: string; info: { alive: { status: string; }; }; error: {}; details: { alive: { status: string; }; }; }\n\n                    \n                    \n                        http response\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheckService, HttpHealthIndicator, HealthCheck } from '@nestjs/terminus';\n/**\n * Health controller class\n */\n@Controller('health')\nexport class HealthController {\n  /**\n   * Health check controller class constructor.\n   * @param health health check service\n   * @param http http response\n   */\n  constructor(private health: HealthCheckService, private http: HttpHealthIndicator) {}\n  //======================================================================================================\n  /**\n   * Checks the liveness of the project\n   * @returns http response\n   */\n  @Get()\n  @HealthCheck()\n  check() {\n    return { status: 'ok', info: { alive: { status: 'up' } }, error: {}, details: { alive: { status: 'up' } } };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HttpModule } from '@nestjs/axios';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from '../../application/controllers/health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpResponse.html":{"url":"interfaces/HttpResponse.html","title":"interface - HttpResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/interfaces/http-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the actual data which is returned by the API. In case of empty response we will have it empty also.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents a full description about the response (https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents a short message about the response status.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the status code of the http response(https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the type of the response\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface HttpResponse {\n  /**\n   * Represents the type of the response\n   */\n  type: string;\n  /**\n   * Represents the status code of the http response(https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).\n   */\n  status: number;\n  /**\n   * Represents a short message about the response status.\n   */\n  message: string;\n  /**\n   * Represents a full description about the response (https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)\n   */\n  description: string;\n  /**\n   * Represents the actual data which is returned by the API. In case of empty response we will have it empty also.\n   */\n  data: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpResponseException.html":{"url":"classes/HttpResponseException.html","title":"class - HttpResponseException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpResponseException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/exceptions/http-response.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                implements http exception with http response from the service of common module\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: HttpResponse)\n                    \n                \n                        \n                            \n                                Defined in src/domain/exceptions/http-response.exception.ts:8\n                            \n                        \n\n                \n                    \n                            Http response exception contructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        HttpResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Http response\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { HttpResponse } from '../interfaces';\n\n//==================================================================================================\n/**\n * implements http exception with http response from the service of common module\n */\nexport class HttpResponseException extends HttpException {\n  /**\n   * Http response exception contructor\n   * @param data Http response\n   */\n  constructor(data: HttpResponse) {\n    super(HttpException.createBody(data, data.description, data.status), data.status);\n  }\n}\n\n//==================================================================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpResponseModule.html":{"url":"modules/HttpResponseModule.html","title":"module - HttpResponseModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpResponseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HttpResponseModule\n\n\n\ncluster_HttpResponseModule_providers\n\n\n\ncluster_HttpResponseModule_exports\n\n\n\n\nHttpResponseService \n\nHttpResponseService \n\n\n\nHttpResponseModule\n\nHttpResponseModule\n\nHttpResponseService  -->\n\nHttpResponseModule->HttpResponseService \n\n\n\n\n\nHttpResponseService\n\nHttpResponseService\n\nHttpResponseModule -->\n\nHttpResponseService->HttpResponseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/common/http-response.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HttpResponseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HttpResponseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HttpResponseService } from '../../servicecs/common';\n\n@Module({\n  providers: [HttpResponseService],\n  exports: [HttpResponseService],\n})\nexport class HttpResponseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpResponseService.html":{"url":"injectables/HttpResponseService.html","title":"injectable - HttpResponseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpResponseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/servicecs/common/http-response.service.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                            \n                                    Private\n                                getDescription\n                            \n                            \n                                    Private\n                                getMessage\n                            \n                            \n                                    Private\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate(status: number, data, message: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/http-response.service.ts:57\n                \n            \n\n\n            \n                \n                    generates the HTTP response\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        HTTP status\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        data\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getMessage(status)\n                                    \n\n                                    \n                                        custom message\n\n                                    \n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getDescription(status)\n                                    \n\n                                    \n                                        custom description\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HttpResponse\n\n                    \n                    \n                        response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDescription(status: number)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/http-response.service.ts:32\n                \n            \n\n\n            \n                \n                    gets the description\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        description\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMessage(status: number)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/http-response.service.ts:22\n                \n            \n\n\n            \n                \n                    gets the message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getType\n                        \n                    \n                \n            \n            \n                \n                    \n                    getType(status: number)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/http-response.service.ts:42\n                \n            \n\n\n            \n                \n                    gets the type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable } from '@nestjs/common';\nimport {\n  HttpResponseDescriptions,\n  HttpResponseMessages,\n  HttpResponseTypes,\n  HttpResponseTypesCodes,\n} from '../../enums/httpResponse';\n\nimport { HttpResponse } from '../../interfaces';\n\n/**\n * HTTP response service\n */\n@Injectable()\nexport class HttpResponseService {\n  //==================================================================================================\n  /**\n   * gets the message\n   * @param status HTTP status\n   * @returns message\n   */\n  private getMessage(status: number): string {\n    return HttpResponseMessages[HttpStatus[status].toString() as keyof typeof HttpResponseMessages];\n  }\n\n  //==================================================================================================\n  /**\n   * gets the description\n   * @param status HTTP status\n   * @returns description\n   */\n  private getDescription(status: number): string {\n    return HttpResponseDescriptions[HttpStatus[status].toString() as keyof typeof HttpResponseMessages];\n  }\n\n  //==================================================================================================\n  /**\n   * gets the type\n   * @param status HTTP status\n   * @returns type\n   */\n  private getType(status: number): string {\n    return HttpResponseTypes[\n      HttpResponseTypesCodes[Math.floor(status / 100)].toString() as keyof typeof HttpResponseTypes\n    ];\n  }\n\n  //==================================================================================================\n  /**\n   * generates the HTTP response\n   * @param status HTTP status\n   * @param data data\n   * @param message custom message\n   * @param description custom description\n   * @returns response\n   */\n  generate(\n    status: number,\n    data: unknown = {},\n    message: string = this.getMessage(status),\n    description: string = this.getDescription(status)\n  ): HttpResponse {\n    const response: HttpResponse = {\n      type: this.getType(status),\n      status: status,\n      message: message,\n      description: description,\n      data: data,\n    };\n\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerInterceptor.html":{"url":"injectables/LoggerInterceptor.html","title":"injectable - LoggerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/interceptors/logger.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Logs the requests\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                logHttpRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/interceptors/logger.interceptor.ts:25\n                \n            \n\n\n            \n                \n                    intercept handler\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        context\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        handler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        logHttpRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    logHttpRequest(context: ExecutionContext, startTime: number)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/interceptors/logger.interceptor.ts:55\n                \n            \n\n\n            \n                \n                    logs the HTTP requests\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        context\n\n                                    \n                                \n                                \n                                    startTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        start time\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        nothing\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerService\n\n                    \n                \n                \n                    \n                        Default value : new LoggerService(LoggerInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/domain/interceptors/logger.interceptor.ts:16\n                        \n                    \n\n            \n                \n                    logs requests for the service\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Request, Response } from 'express';\nimport { LoggerService } from '../servicecs/common';\n////////////////////////////////////////////////////////////////////////\n/**\n * Logs the requests\n */\n@Injectable()\nexport class LoggerInterceptor implements NestInterceptor {\n  //==================================================================================================\n  /**\n   * logs requests for the service\n   */\n  private readonly logger: LoggerService = new LoggerService(LoggerInterceptor.name);\n\n  //==================================================================================================\n  /**\n   * intercept handler\n   * @param context context\n   * @param next next call\n   * @returns handler\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const startTime = Date.now();\n    const contextType = context.getType();\n\n    return next.handle().pipe(\n      tap(\n        () => {\n          if (contextType === 'http') {\n            this.logHttpRequest(context, startTime);\n          }\n        },\n        (error: Error) => {\n          if (contextType === 'http') {\n            this.logHttpRequest(context, startTime);\n          } else {\n            const reqTime = Date.now() - startTime;\n            this.logger.log(`[${error.name}] ${error.message} ${reqTime}ms`);\n          }\n        }\n      )\n    );\n  }\n\n  //==================================================================================================\n  /**\n   * logs the HTTP requests\n   * @param context context\n   * @param startTime start time\n   * @returns nothing\n   */\n  private logHttpRequest(context: ExecutionContext, startTime: number) {\n    if (context.getType() !== 'http') return;\n    const reqTime = Date.now() - startTime;\n    const controllerName = context.getClass().name;\n    const handlerName = context.getHandler().name;\n    const request = context.switchToHttp().getRequest();\n    const response = context.switchToHttp().getResponse();\n    const { url, method } = request;\n    const { statusCode } = response;\n    this.logger.log(\n      `[HTTP] ${method.toUpperCase()} ${url} ${statusCode} [${controllerName}:${handlerName}] ${reqTime}ms`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLoggerService \n\nLoggerService \n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/common/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerService } from '../../servicecs/common';\n\n@Module({\n  providers: [LoggerService, String],\n  exports: [LoggerService],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/servicecs/common/logger.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for logging\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createlogger\n                            \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Private\n                                format\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                verbose\n                            \n                            \n                                    Public\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/servicecs/common/logger.service.ts:16\n                            \n                        \n\n                \n                    \n                            constructor for the logger\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createlogger\n                        \n                    \n                \n            \n            \n                \n                    \n                    createlogger(context: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:32\n                \n            \n\n\n            \n                \n                    creates the logger\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        context\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LoggerService\n\n                    \n                    \n                        logger\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        debug\n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(message: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:69\n                \n            \n\n\n            \n                \n                    logs the debug message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message: string, error?: string | Error, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:51\n                \n            \n\n\n            \n                \n                    logs the error message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                            string | Error\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        error\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        format\n                        \n                    \n                \n            \n            \n                \n                    \n                    format(message: string, args?: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:88\n                \n            \n\n\n            \n                \n                    formats the message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        formatted message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:41\n                \n            \n\n\n            \n                \n                    logs the message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        verbose\n                        \n                    \n                \n            \n            \n                \n                    \n                    verbose(message: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:78\n                \n            \n\n\n            \n                \n                    logs the verbose message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        warn\n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(message: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:60\n                \n            \n\n\n            \n                \n                    logs the warning message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/servicecs/common/logger.service.ts:16\n                        \n                    \n\n            \n                \n                    context\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/servicecs/common/logger.service.ts:12\n                        \n                    \n\n            \n                \n                    logger\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, LoggerService as NestLoggerService } from '@nestjs/common';\nimport { formatWithOptions } from 'util';\n\n/**\n * service for logging\n */\n@Injectable()\nexport class LoggerService implements NestLoggerService {\n  /**\n   * logger\n   */\n  private readonly logger: Logger;\n  /**\n   * context\n   */\n  private readonly context?: string;\n  //=============================================================================================================\n  /**\n   * constructor for the logger\n   * @param context\n   */\n  constructor(context: string) {\n    this.logger = new Logger(context);\n    this.context = context;\n  }\n  //=============================================================================================================\n  /**\n   * creates the logger\n   * @param context context\n   * @returns logger\n   */\n  static createlogger(context: string): LoggerService {\n    return new LoggerService(context);\n  }\n  //=============================================================================================================\n  /**\n   * logs the message\n   * @param message message\n   * @param args arguments\n   */\n  public log(message: string, ...args: any[]) {\n    this.logger.log(this.format(message, args));\n  }\n  //=============================================================================================================\n  /**\n   * logs the error message\n   * @param message message\n   * @param error error\n   * @param args arguments\n   */\n  public error(message: string, error?: string | Error, ...args: any[]) {\n    this.logger.error(this.format(message, args), error instanceof Error ? error.stack : error);\n  }\n  //=============================================================================================================\n  /**\n   * logs the warning message\n   * @param message message\n   * @param args arguments\n   */\n  public warn(message: string, ...args: any[]) {\n    this.logger.warn(this.format(message, args));\n  }\n  //=============================================================================================================\n  /**\n   * logs the debug message\n   * @param message message\n   * @param args arguments\n   */\n  public debug(message: string, ...args: any[]) {\n    this.logger.debug(this.format(message, args));\n  }\n  //=============================================================================================================\n  /**\n   * logs the verbose message\n   * @param message message\n   * @param args arguments\n   */\n  public verbose(message: string, ...args: any[]) {\n    this.logger.verbose(this.format(message, args));\n  }\n  //=============================================================================================================\n  /**\n   * formats the message\n   * @param message message\n   * @param args arguments\n   * @returns formatted message\n   */\n  private format(message: string, args?: string[]) {\n    if (!args || !args.length) return message;\n\n    return formatWithOptions({ colors: true, depth: 5 }, message, ...args);\n  }\n  //=============================================================================================================\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShowBalanceReponseDTO.html":{"url":"classes/ShowBalanceReponseDTO.html","title":"class - ShowBalanceReponseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShowBalanceReponseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/show-balance-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/show-balance-response.dto.ts:18\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNumber()@IsNotEmpty()@ApiProperty({description: 'balance of the user account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/show-balance-response.dto.ts:18\n                        \n                    \n\n            \n                \n                    Current Balance of the account\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsNotEmpty, IsNumber } from 'class-validator';\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['balance'];\nexport class ShowBalanceReponseDTO {\n  /**\n   * Current Balance of the account\n   */\n  @IsDefined()\n  @IsNumber()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'balance of the user account',\n  })\n  balance: number;\n\n  /**\n   * get user DTO constructor\n   * @param properties DTO properties\n   */\n  constructor(properties: any = {}) {\n    Object.keys(properties).forEach((key: string) => {\n      if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountRequestDTO.html":{"url":"classes/UpdateAccountRequestDTO.html","title":"class - UpdateAccountRequestDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/update-account-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                family\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/update-account-request.dto.ts:53\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Currencies\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNotEmpty()@IsEnum(Currencies, {each: true})@ApiProperty({description: 'currency of the user acount balance'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-account-request.dto.ts:53\n                        \n                    \n\n            \n                \n                    default currency of the account\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        family\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'family of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-account-request.dto.ts:42\n                        \n                    \n\n            \n                \n                    familty of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@ApiProperty({description: 'id of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-account-request.dto.ts:19\n                        \n                    \n\n            \n                \n                    id of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-account-request.dto.ts:31\n                        \n                    \n\n            \n                \n                    name of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsEmail, IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength, MinLength } from 'class-validator';\nimport { Currencies } from '../../domain/enums/currencies.enum';\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['id', 'name', 'familty', 'username', 'email', 'currency'];\nexport class UpdateAccountRequestDTO {\n  /**\n   * id of the user\n   */\n  @IsDefined()\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'id of the user',\n  })\n  id: string;\n\n  /**\n   * name of the user\n   */\n  @IsOptional()\n  @IsString()\n  @MaxLength(30)\n  @MinLength(3)\n  @ApiProperty({\n    description: 'name of the user',\n  })\n  name: string;\n  /**\n   * familty of the user\n   */\n  @IsOptional()\n  @IsString()\n  @MaxLength(30)\n  @MinLength(3)\n  @ApiProperty({\n    description: 'family of the user',\n  })\n  family: string;\n\n  /**\n   * default currency of the account\n   */\n  @IsOptional()\n  @IsNotEmpty()\n  @IsEnum(Currencies, { each: true })\n  @ApiProperty({\n    description: 'currency of the user acount balance',\n  })\n  currency: Currencies;\n\n  /**\n   * get user DTO constructor\n   * @param properties DTO properties\n   */\n  constructor(properties: any = {}) {\n    Object.keys(properties).forEach((key: string) => {\n      if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationPipeOptions.html":{"url":"interfaces/ValidationPipeOptions.html","title":"interface - ValidationPipeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationPipeOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/pipes/validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                env variables validation pipeline\n\n            \n\n            \n                Extends\n            \n            \n                    ValidatorOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disableErrorMessages\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exceptionFactory\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transform\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableErrorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableErrorMessages:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If error messages should be disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exceptionFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exceptionFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Exception factory\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transform:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If it should be transformed\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ValidationError, ValidatorOptions } from 'class-validator';\n/**\n * env variables validation pipeline\n */\nexport interface ValidationPipeOptions extends ValidatorOptions {\n  /**\n   * If it should be transformed\n   */\n  transform?: boolean;\n  /**\n   * If error messages should be disabled\n   */\n  disableErrorMessages?: boolean;\n  /**\n   * Exception factory\n   */\n  exceptionFactory?: (errors: ValidationError[]) => any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VirtualBankOptions.html":{"url":"interfaces/VirtualBankOptions.html","title":"interface - VirtualBankOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VirtualBankOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/config/env.objects.ts\n        \n\n\n            \n                Description\n            \n            \n                VirtualBank options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            deposit_fee_per_minute\n                                        \n                                \n                                \n                                        \n                                            transaction_commission\n                                        \n                                \n                                \n                                        \n                                            widraw_commission\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deposit_fee_per_minute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deposit_fee_per_minute:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the fee for each minute more if customer keeps the money in our bank\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transaction_commission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transaction_commission:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the commision amount defined for each money transaction\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widraw_commission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        widraw_commission:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the ammount of commission for each widrawal\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { expandEnvVariables } from '../../domain/helpers';\nexpandEnvVariables();\n\n/**\n * options enum\n */\nexport enum EnvObjects {\n  TRANSACTION_COMMISSION = 'VirtualBankOptions',\n  WIDRAW_COMMISSION = 'VirtualBankOptions',\n  DEPOSIT_FEE_PER_MINUTE = 'VirtualBankOptions',\n}\n//===================================================================================================\n/**\n * VirtualBank options\n */\nexport interface VirtualBankOptions {\n  /**\n   * Represents the commision amount defined for each money transaction\n   */\n  transaction_commission: number;\n  /**\n   * Represents the ammount of commission for each widrawal\n   */\n  widraw_commission: number;\n\n  /**\n   * Represents the fee for each minute more if customer keeps the money in our bank\n   */\n  deposit_fee_per_minute: number;\n}\n\n/**\n * configuration function\n * @returns configuration taken from env\n */\nexport const configuration = (): any => ({\n  VirtualBankOptions: {\n    transaction_commission: process.env.TRANSACTION_COMMISSION,\n    widraw_commission: process.env.WIDRAW_COMMISSION,\n    deposit_fee_per_minute: process.env.DEPOSIT_FEE_PER_MINUTE,\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/application/controllers/account.controller.ts\n            \n            controller\n            AccountController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/application/controllers/balance.controller.ts\n            \n            controller\n            BalanceController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/application/controllers/health.controller.ts\n            \n            controller\n            HealthController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/application/dtos/create-account-request.dto.ts\n            \n            class\n            CreateAccountRequestDTO\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/application/dtos/create-account-request.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/create-account-response.dto.ts\n            \n            class\n            CreateAccountReposnseDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/dtos/create-account-response.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/deposit-money-request.dto.ts\n            \n            class\n            DepositMoneyRequestDTO\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/application/dtos/deposit-money-request.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/get-account-reponse.dto.ts\n            \n            class\n            GetUserAccountResponseDTO\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/application/dtos/get-account-reponse.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/get-account-request.dto.ts\n            \n            class\n            GetUserAccountRequestDTO\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/application/dtos/get-account-request.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/show-balance-response.dto.ts\n            \n            class\n            ShowBalanceReponseDTO\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/application/dtos/show-balance-response.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/update-account-request.dto.ts\n            \n            class\n            UpdateAccountRequestDTO\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/application/dtos/update-account-request.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/entities/account.entity.ts\n            \n            interface\n            AccountEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/exceptions/http-response.exception.ts\n            \n            class\n            HttpResponseException\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/domain/helpers/env.helper.ts\n            \n            function\n            expandEnvVariables\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/helpers/util.helper.ts\n            \n            function\n            naiveRound\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/helpers/util.helper.ts\n            \n            function\n            processHttpError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/helpers/util.helper.ts\n            \n            function\n            processMicroserviceHttpError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/helpers/util.helper.ts\n            \n            function\n            validateDTO\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/helpers/util.helper.ts\n            \n            function\n            validateOutputDTO\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/interceptors/logger.interceptor.ts\n            \n            injectable\n            LoggerInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/domain/interfaces/http-response.interface.ts\n            \n            interface\n            HttpResponse\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/domain/pipes/validation.pipe.ts\n            \n            interface\n            ValidationPipeOptions\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/domain/repositories/account.repository.ts\n            \n            injectable\n            AccountRepository\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/domain/servicecs/Account.service.ts\n            \n            injectable\n            AccountService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/domain/servicecs/common/http-response.service.ts\n            \n            injectable\n            HttpResponseService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/domain/servicecs/common/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/infrastructure/config/env.objects.ts\n            \n            interface\n            VirtualBankOptions\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/infrastructure/config/env.objects.ts\n            \n            variable\n            configuration\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/infrastructure/config/env.validation.ts\n            \n            class\n            EnvironmentVariables\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/infrastructure/config/env.validation.ts\n            \n            function\n            validate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/infrastructure/modules/app.module.ts\n            \n            variable\n            modulesList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @nestjs-addons/in-memory-db : ^ 3.0.3\n        \n            @nestjs/axios : 0.0.7\n        \n            @nestjs/cli : ^8.2.5\n        \n            @nestjs/common : ^8.4.5\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^8.4.5\n        \n            @nestjs/platform-express : ^8.4.5\n        \n            @nestjs/swagger : ^5.0.8\n        \n            @nestjs/terminus : ^7.2.0\n        \n            @types/dotenv-flow : ^3.1.0\n        \n            @types/express : ^4.17.8\n        \n            @types/faker : ^5.1.4\n        \n            @types/morgan : ^1.9.2\n        \n            @willsoto/nestjs-prometheus : ^4.6.0\n        \n            ansi-styles : ^6.1.0\n        \n            async-mutex : ^0.3.2\n        \n            cache-manager : ^3.6.1\n        \n            chokidar : ^3.5.3\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv : ^8.2.0\n        \n            dotenv-expand : ^5.1.0\n        \n            dotenv-flow : ^3.2.0\n        \n            faker : ^5.1.0\n        \n            has-flag : ^5.0.1\n        \n            morgan : ^1.10.0\n        \n            prom-client : ^14.0.1\n        \n            ramda : ^0.27.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.5.5\n        \n            skaffold : ^1.0.11\n        \n            start-server-webpack-plugin : ^2.2.5\n        \n            supports-color : ^9.2.2\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            expandEnvVariables   (src/.../env.helper.ts)\n                        \n                        \n                            naiveRound   (src/.../util.helper.ts)\n                        \n                        \n                            processHttpError   (src/.../util.helper.ts)\n                        \n                        \n                            processMicroserviceHttpError   (src/.../util.helper.ts)\n                        \n                        \n                            validate   (src/.../env.validation.ts)\n                        \n                        \n                            validateDTO   (src/.../util.helper.ts)\n                        \n                        \n                            validateOutputDTO   (src/.../util.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Main entry point of the application\n\n\n                    \n                    \n                \n            \n        \n    \n    src/domain/helpers/env.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        expandEnvVariables\n                        \n                    \n                \n            \n            \n                \nexpandEnvVariables()\n                \n            \n\n\n\n\n            \n                \n                    Expands the environmanet variables\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    src/domain/helpers/util.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        naiveRound\n                        \n                    \n                \n            \n            \n                \nnaiveRound(num: number, decimalPlaces: number)\n                \n            \n\n\n\n\n            \n                \n                    Takes a number and rounds to a percission number\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        number to be rounded\n\n                                    \n                                \n                                \n                                    decimalPlaces\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        2\n                                    \n\n                                    \n                                        number of decimal places\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processHttpError\n                        \n                    \n                \n            \n            \n                \nprocessHttpError(error: any, logger: any)\n                \n            \n\n\n\n\n            \n                \n                    processes http error that was throwed by service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        error (exception or string)\n\n                                    \n                                \n                                \n                                    logger\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        logger service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processMicroserviceHttpError\n                        \n                    \n                \n            \n            \n                \nprocessMicroserviceHttpError(error: any, logger: any)\n                \n            \n\n\n\n\n            \n                \n                    processes http error that was throwed by service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        error (exception or string)\n\n                                    \n                                \n                                \n                                    logger\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        logger service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateDTO\n                        \n                    \n                \n            \n            \n                \nvalidateDTO(dto: any, httpResponseGenerator: any)\n                \n            \n\n\n\n\n            \n                \n                    validates dto and returns bad request if it is wrong\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        dto\n\n                                    \n                                \n                                \n                                    httpResponseGenerator\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        http response service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateOutputDTO\n                        \n                    \n                \n            \n            \n                \nvalidateOutputDTO(dto: any, logger: any)\n                \n            \n\n\n\n\n            \n                \n                    validates output dto and throws an error if it is wrong\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        dto\n\n                                    \n                                \n                                \n                                    logger\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        logger service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/infrastructure/config/env.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(config: Record)\n                \n            \n\n\n\n\n            \n                \n                    validates the config\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        congig\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGrover monetary transaction\nTable of Contents\n\nOverview\nAPIs\n\n\nCode architecture\nBuild instruction\nsource code\nNPM\nDocker\nDocker-compose\nStart.sh script\n\n\nTest\nDeployment\nMonitoring and alerting\nOpenApi\nDocumentation\nToDo list\n\nOverview\nGrover monetary transaction provides a bunch of REST APIs  to simulate a monetary transaction for the given user. It provides following list of APIs\n\nProvided APIs\n\nCreate new account (/api/v1/account)[POST][GET][PUT][DELETE]\n\nDeposit money (/api/v1/balance/deposit)[POST]\n\nWidraw money (/api/v1/balance/widraw)[POST]\n\nShow balance(/api/v1/balance)[GET]\n\n\n\nCode architecture\nOnion Architecture\nsrc\n├── application\n│   ├── controllers\n│   └── dtos\n├── domain\n│   ├── decorators\n│   ├── entities\n│   ├── enums\n│   │   └── httpResponse\n│   ├── exceptions\n│   ├── guards\n│   ├── helpers\n│   ├── interceptors\n│   ├── interfaces\n│   ├── modules\n│   │   └── common\n│   ├── pipes\n│   ├── repositories\n│   ├── seeders\n│   └── servicecs\n│       └── common\n└── infrastructure\n    ├── config\n    └── modules\n        └── commonHere we have three very main layers \n\nApplication\nin this layer we define the actual behavior of our application, thus being responsible for performing interactions among units of the domain layer.\n\nDomain\nthis layer represents the business and behavior objects. we define units which play the role of entities and business rules and have a direct relationship to our domain\n\nInfrastructure\nthis layer the boundary to whatever is external to our application: the database, email services, queue engines, etc.\n\n\n\nService build information\nThere are different stages of building the application for this service. Based on the environment you want to deploy we have different ways to build the application. following information may help with building the service.\nsource code\ntar -xvf monetary-transaction.tar\ncd monetary-transactionNPM\nnpm install\nnpm run build\nnpm startDocker\ndocker build . -t grover:latestDocker-compose\ndocker-compose buildStart.sh script\nsudo bash scripts/start.sh -h\nUsage: start.sh [-h] [-build_docker] [-build_and_run_docker] [-stop_docker] [-run_app] [-run_test] [-run_lint] [-deploy_on_kubernetes] \n\n\nThis script helps you to runn the application in different forms. below you can get the full list of available options.\n\nAvailable options:\n\n-h, --help              Print this help and exit\n-build_docker           Build the docker image called \"grover:latest\"\n-build_and_run_docker   Build the docker image and run on local machine\n-stop_docker            Stop running docker container named \"grover\"\n-run_app                Run application with npm in usual way for development\n-run_test               Run npm test\n-run_lint               Run npm lint\n-generate_doc           Generate the code documentation\n-deploy_on_kubernetes   you need to have a kubernetes cluster already up and running on the machine.Tests\nnpm test\n PASS  __test__/e2e-tests/e2e.spec.ts (6.367 s)\n PASS  __test__/account-balance-tests/account.spec.ts\n PASS  __test__/account-balance-tests/health.comtroller.spec.ts\n\nTest Suites: 3 passed, 3 total\nTests:       20 passed, 20 total\nSnapshots:   0 total\nTime:        7.665 s\nRan all test suites.Instructions for deploying the software\nHelm\nwith the following instruction you can make the helmchart ready for deployment. Following instruction make a app-0.1.0.tgz helm package. then we can install or push it to a helm repository.\ncd k8s\nhelm package .with the following instruction you can install the helm chart on an up and running kubernetes cluster.\nhelm install grover-app app-0.1.0.tgz --set service.type=NodePortKubernetes\nAlternativelly you can deploy the application on an up an running kubernetes cluster using provided config files.\ncd k8s/configFiles\nkubectl apply -f grover-namespace.yaml, grover-configmap.yaml, grover-deployment.yaml, grover-service.yamlit should give you following output\nnamespace/grover created\nconfigmap/grover-config created\ndeployment.apps/grover created\nservice/grover createdSkaffold\nSkaffold handles the workflow for building, pushing and deploying the application\nmakeskaffold dev --auto-build --auto-deploy --tail --cleanup\nListing files to watch...\n - grover\nGenerating tags...\n - grover -> grover:6b79957-dirty\nChecking cache...\n - grover: Not found. Building\nStarting build...\nFound [minikube] context, using local docker daemon.\nBuilding [grover]...\nTarget platforms: [linux/amd64]\n[+] Building 14.0s (8/14)                                                                                                                                                                                          \n => [internal] load build definition from Dockerfile                                                                                                                                                          0.0s\n => => transferring dockerfile: 594B                                                                                                                                                                          0.0s\n => [internal] load .dockerignore                                                                                                                                                                             0.0s\n => => transferring context: 35B                                                                                                                                                                              0.0s\n => [internal] load metadata for docker.io/library/node:12.19.0-alpine3.9                                                                                                                                     1.3s\n => [internal] load build context                                                                                                                                                                             0.0s\n => => transferring context: 5.77kB                                                                                                                                                                           0.0s\n => [development 1/7] FROM docker.io/library/node:12.19.0-alpine3.9@sha256:63777fafdf8d55f53dc31910d0e086a7bd12c45f5bb09be63d720f5fb37a0635                                                                   0.0s\n => CACHED [development 2/7] WORKDIR /usr/src/app                                                                                                                                                             0.0s\n => CACHED [development 3/7] COPY package*.json ./                                                                                                                                                            0.0s\n => [development 4/7] RUN npm install glob rimraf                                                                                                                                                            10.5s\n => [production 4/6] RUN npm installMonitoring and alerting\nHealth check\nby calling the following endpoint you can make sure that the application is running and listening to your desired port\nhttp://localhost:{port_number}/health\nmost probably you will get a result back as follow\n\nExample\n{\"status\":\"ok\",\"info\":{\"alive\":{\"status\":\"up\"}},\"error\":{},\"details\":{\"alive\":{\"status\":\"up\"}}}\n\nmertics\nto get the default metrics of the application you can use the following endpoint\nhttp://localhost:{port_number}/metrics\nOpenApi\nby calling the following endpoint you can see the Swagger OpenApi documentation and explore all the available apis and  schemas.\nhttp://localhost:{port_number}/api\nDocumentation\nBy running following comman you  can generate the full code documentation (Compodoc) and get access to it through port 7000\nnpm run dochttp://localhost:7000\nToDo list\n\n \nadd moneytion from one account to another account\n\n \napply commision to money transaction\n\n \napply commision to widraw money\n\n \napply deposit fee per minute to the balance\n\n \nadd counter metric to the apis\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nApache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n  (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and\n  (b) You must cause any modified files to carry prominent notices stating that You changed the files; and\n  (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and\n  (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.\n  You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n\n\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!)  The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpResponseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_HttpResponseModule\n\n\n\ncluster_HttpResponseModule_exports\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nCommonModule->AccountModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nHttpResponseModule \n\nHttpResponseModule \n\nHttpResponseModule  -->\n\nCommonModule->HttpResponseModule \n\n\n\n\n\nLoggerModule \n\nLoggerModule \n\nLoggerModule  -->\n\nCommonModule->LoggerModule \n\n\n\n\n\nAccountRepository\n\nAccountRepository\n\nAccountModule -->\n\nAccountRepository->AccountModule\n\n\n\n\n\nHttpResponseService\n\nHttpResponseService\n\nAccountModule -->\n\nHttpResponseService->AccountModule\n\n\n\n\n\nHttpResponseModule\n\nHttpResponseModule\n\nHttpResponseModule -->\n\nHttpResponseService->HttpResponseModule\n\n\n\nCommonModule -->\n\nHttpResponseModule->CommonModule\n\n\n\n\n\nHttpResponseService \n\nHttpResponseService \n\nHttpResponseService  -->\n\nHttpResponseModule->HttpResponseService \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCommonModule -->\n\nLoggerModule->CommonModule\n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : This service manages the balance of users.\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            allowedProperties   (src/.../create-account-request.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../create-account-response.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../deposit-money-request.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../get-account-reponse.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../get-account-request.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../show-balance-response.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../update-account-request.dto.ts)\n                        \n                        \n                            configuration   (src/.../env.objects.ts)\n                        \n                        \n                            modulesList   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/application/dtos/create-account-request.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['name', 'familty', 'username', 'currency']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/create-account-response.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['acccount_token', 'id']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/deposit-money-request.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['amount']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/get-account-reponse.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'id',\n  'name',\n  'familty',\n  'username',\n  'currency',\n  'created_at',\n  'updated_at',\n  'token',\n  'balance',\n]\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/get-account-request.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['id']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/show-balance-response.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['balance']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/update-account-request.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['id', 'name', 'familty', 'username', 'email', 'currency']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/infrastructure/config/env.objects.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): any => ({\n  VirtualBankOptions: {\n    transaction_commission: process.env.TRANSACTION_COMMISSION,\n    widraw_commission: process.env.WIDRAW_COMMISSION,\n    deposit_fee_per_minute: process.env.DEPOSIT_FEE_PER_MINUTE,\n  },\n})\n                    \n                \n\n            \n                \n                    configuration function\n\n                \n            \n\n        \n    \n\n    src/infrastructure/modules/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        modulesList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(modules).map(moduleIndex => modules[moduleIndex as keyof typeof modules])\n                    \n                \n\n            \n                \n                    application modules list\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
