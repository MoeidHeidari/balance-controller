var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AccountController.html",[0,1.674,1,2.201]],["body/controllers/AccountController.html",[0,2.06,1,1.903,2,0.908,3,0.161,4,0.142,5,0.123,6,1.522,7,1.334,8,1.808,9,0.693,10,1.912,11,0.017,12,0.245,13,1.236,14,3.417,15,2.883,16,2.427,17,2.427,18,2.427,19,1.808,20,2.68,21,1.411,22,0.028,23,3.454,24,2.127,25,2.127,26,2.427,27,1.522,28,2.427,29,2.453,30,2.547,31,0.808,32,1.522,33,1.808,34,0.723,35,1.808,36,2.427,37,5.714,38,2.169,39,0.984,40,0.783,41,0.847,42,4.726,43,2.127,44,1.966,45,3.111,46,1.901,47,2.883,48,1.522,49,3.122,50,3.524,51,4.021,52,3.595,53,4.021,54,4.021,55,1.808,56,1.808,57,1.808,58,3.307,59,4.776,60,1.522,61,3.454,62,1.808,63,1.522,64,1.808,65,2.427,66,3.595,67,2.883,68,2.883,69,2.883,70,1.808,71,2.68,72,3.524,73,1.808,74,1.808,75,1.808,76,0.509,77,2.427,78,1.522,79,1.522,80,1.334,81,1.522,82,1.808,83,2.427,84,2.883,85,1.808,86,1.808,87,0.434,88,3.454,89,3.773,90,3.773,91,0.719,92,2.68,93,1.522,94,1.081,95,1.522,96,1.522,97,1.193,98,1.193,99,1.193,100,1.334,101,0.908,102,1.522,103,1.666,104,1.236,105,1.522,106,1.447,107,1.522,108,1.724,109,1.522,110,0.988,111,1.522,112,0.908,113,2.127,114,1.081,115,1.522,116,0.622,117,1.522,118,1.808,119,1.808,120,0.161,121,1.193,122,0.998,123,2.427,124,0.539,125,0.502,126,1.522,127,1.964,128,1.964,129,1.081,130,3.454,131,1.334,132,2.453,133,0.373,134,1.522,135,1.522,136,1.808,137,3.027,138,4.142,139,2.427,140,3.454,141,0.928,142,2.232,143,1.808,144,3.027,145,3.697,146,1.808,147,3.454,148,2.06,149,3.027,150,3.524,151,3.027,152,1.808,153,1.334,154,1.666,155,3.027,156,1.808,157,2.427,158,1.522,159,3.027,160,3.027,161,1.808,162,1.808,163,1.808,164,1.808,165,0.012,166,0.012]],["title/interfaces/AccountEntity.html",[167,1.43,168,1.994]],["body/interfaces/AccountEntity.html",[3,0.382,4,0.336,5,0.292,12,0.582,22,0.027,31,0.87,40,1.113,41,1.323,76,0.382,116,2.006,120,0.382,133,1.342,165,0.022,166,0.022,167,1.839,168,3.199,169,1.987,170,3.61,171,3.947,172,5.831,173,1.191,174,4.302,175,3.487,176,3.849,177,3.336,178,2.129,179,4.03,180,2.83,181,2.83,182,2.83,183,2.83,184,4.288,185,4.288,186,4.288,187,4.288,188,4.288]],["title/modules/AccountModule.html",[189,1.068,190,2.201]],["body/modules/AccountModule.html",[1,3.408,2,2.592,3,0.361,4,0.318,5,0.276,10,1.208,11,0.017,22,0.028,76,0.578,87,0.972,103,2.863,104,1.739,106,2.592,120,0.361,165,0.021,166,0.021,180,2.676,181,2.676,182,2.676,183,2.676,189,1.653,190,4.365,191,1.613,192,2.392,193,3.413,194,3.413,195,3.413,196,3.451,197,3.376,198,2.821,199,2.215,200,2.035,201,4.054,202,3.408,203,3.408,204,3.408,205,4.054,206,4.054,207,3.413,208,3.413,209,4.054,210,4.054,211,4.054,212,4.054,213,2.991,214,3.413,215,4.054]],["title/injectables/AccountRepository.html",[197,1.822,216,1.147]],["body/injectables/AccountRepository.html",[3,0.255,4,0.225,5,0.195,9,0.704,10,1.959,11,0.02,12,0.389,13,1.753,14,3.786,22,0.028,29,2.444,30,1.894,31,0.745,34,0.967,38,1.786,39,1.316,40,1.048,41,1.133,44,2.064,45,3.786,46,2.066,50,3.016,72,3.016,76,0.462,77,3.442,87,0.688,106,2.391,120,0.255,121,2.698,122,1.222,124,1.218,125,0.796,128,1.567,133,1.072,154,2.78,165,0.017,166,0.017,168,3.281,180,1.893,181,1.893,182,3.144,183,3.144,197,2.233,208,4.371,216,1.406,217,1.567,218,2.415,219,4.371,220,4.088,221,4.088,222,2.868,223,2.868,224,2.868,225,2.868,226,5.704,227,6.001,228,3.765,229,3.83,230,2.868,231,2.868,232,2.868,233,2.868,234,3.016,235,3.442,236,2.868,237,2.868,238,2.415,239,2.415,240,1.893,241,2.868,242,1.893,243,2.868,244,2.868,245,2.868,246,2.868,247,2.868,248,2.868,249,2.868,250,2.868]],["title/injectables/AccountService.html",[106,1.674,216,1.147]],["body/injectables/AccountService.html",[3,0.184,4,0.162,5,0.141,9,0.546,10,1.89,11,0.02,12,0.281,13,1.376,14,3.769,16,2.701,17,2.701,18,2.701,20,2.644,22,0.029,29,1.918,30,2.739,31,0.717,34,0.961,38,1.103,39,1.266,40,1.041,41,1.089,44,1.967,45,3.623,46,2.013,48,2.701,49,2.883,50,2.367,58,2.367,60,2.701,71,2.644,72,2.367,76,0.498,87,0.497,106,1.61,108,1.239,110,2.883,112,1.04,113,2.367,116,0.712,120,0.184,121,2.117,122,1.065,124,1.318,125,0.575,128,1.131,133,1.044,137,2.897,138,4.362,141,1.141,142,0.888,154,2.526,165,0.013,166,0.013,168,1.918,173,0.714,174,1.528,175,1.239,176,1.367,177,1.131,179,2.117,197,2.415,207,1.744,216,1.103,217,1.131,219,2.701,228,2.918,229,3.262,234,2.367,235,1.744,239,1.744,240,1.367,242,1.367,251,1.744,252,4.443,253,3.208,254,3.208,255,3.208,256,2.071,257,2.071,258,3.926,259,3.208,260,2.071,261,3.306,262,2.071,263,3.208,264,3.025,265,2.071,266,2.071,267,3.208,268,2.071,269,3.208,270,2.071,271,0.888,272,1.131,273,2.071,274,2.071,275,2.071,276,2.071,277,1.744,278,1.528,279,2.071,280,2.071,281,2.071,282,2.071,283,2.071,284,5.059,285,5.059,286,2.071,287,2.644,288,2.071,289,2.071,290,2.071,291,2.071,292,3.926,293,2.071,294,2.071,295,2.071,296,2.071,297,2.071,298,2.071,299,2.071,300,2.071,301,3.208,302,3.926,303,3.208,304,3.208,305,2.071,306,2.071,307,2.071,308,2.071,309,2.071,310,2.071,311,2.071]],["title/modules/AppModule.html",[189,1.068,312,2.201]],["body/modules/AppModule.html",[2,1.843,3,0.327,4,0.287,5,0.25,9,0.453,11,0.015,22,0.029,76,0.579,87,0.88,120,0.327,141,0.947,165,0.02,166,0.02,189,1.844,191,2.292,192,2.243,196,3.36,198,2.645,199,2.005,200,1.843,202,2.423,204,3.196,213,3.997,214,4.561,312,4.059,313,3.09,314,3.67,315,2.708,316,3.997,317,4.841,318,3.67,319,4.841,320,5.418,321,2.708,322,3.67,323,3.09,324,2.895,325,3.67,326,3.572,327,3.67,328,3.196,329,3.67,330,3.196,331,3.67,332,3.67,333,3.67,334,3.67,335,3.09,336,3.09,337,1.574,338,3.572,339,3.09,340,3.09,341,1.46,342,2.708,343,3.67,344,3.67,345,3.67,346,3.67,347,3.67,348,2.51,349,3.09,350,3.67]],["title/controllers/BalanceController.html",[0,1.674,203,2.201]],["body/controllers/BalanceController.html",[0,2.103,2,0.942,3,0.452,4,0.147,5,0.128,7,1.384,9,0.686,10,1.899,11,0.017,12,0.255,13,1.273,14,3.246,21,1.267,22,0.028,23,3.101,24,3.09,25,3.09,26,3.526,27,2.499,28,3.526,29,2.504,30,2.628,31,0.805,32,2.499,34,0.649,36,4.086,38,1.669,39,0.884,40,0.703,41,0.76,42,5.183,44,1.912,45,2.902,46,1.667,49,3.098,53,2.499,58,4.467,61,3.526,63,1.579,76,0.505,78,1.579,79,1.579,80,1.384,81,1.579,83,1.579,87,0.45,88,2.499,89,3.526,90,3.526,91,0.746,92,2.504,93,1.579,94,1.121,95,1.579,96,1.579,97,1.238,98,1.238,99,1.238,100,1.384,101,0.942,102,1.579,103,1.707,104,1.273,105,1.579,106,1.49,107,1.579,109,1.579,110,2.777,111,1.579,112,2.552,113,1.384,114,1.775,115,1.579,116,2.014,117,1.579,120,0.167,121,1.238,122,1.132,123,2.499,124,0.559,125,0.52,126,1.579,127,2.012,128,2.012,129,1.121,130,3.101,131,4.319,132,2.203,133,0.613,134,2.499,135,2.499,137,2.718,138,4.423,139,2.499,140,3.842,141,1.178,142,1.273,144,1.579,145,4.102,147,3.101,148,1.849,149,3.09,150,3.751,151,3.842,155,1.579,157,3.101,158,3.101,159,3.101,160,1.579,165,0.012,166,0.012,203,1.959,287,1.775,351,1.579,352,1.875,353,2.968,354,2.968,355,2.968,356,1.875,357,1.875,358,1.875,359,2.968,360,4.853,361,4.086,362,3.581,363,1.875,364,1.875,365,1.875,366,1.875,367,2.968,368,1.875,369,1.875,370,1.875,371,2.968,372,1.875,373,1.875,374,1.875,375,3.683,376,1.875,377,1.875,378,1.875,379,1.875,380,1.875,381,1.875,382,1.875,383,1.875,384,1.875,385,1.875,386,1.875]],["title/modules/CommonModule.html",[189,1.068,196,1.822]],["body/modules/CommonModule.html",[3,0.387,4,0.341,5,0.296,11,0.018,22,0.028,76,0.523,87,1.044,120,0.387,165,0.022,166,0.022,189,1.729,191,1.732,192,2.502,196,3.653,198,2.95,199,2.378,200,2.186,204,3.565,387,3.665,388,3.665,389,3.665,390,4.039,391,4.039,392,4.353,393,3.985,394,5.401]],["title/classes/CreateAccountReposnseDto.html",[11,0.014,395,2.46]],["body/classes/CreateAccountReposnseDto.html",[3,0.346,4,0.305,5,0.264,9,0.688,10,1.661,11,0.021,12,0.528,21,1.337,22,0.028,31,0.683,34,0.886,38,2.149,39,0.933,40,0.742,41,0.802,76,0.447,91,1.547,120,0.346,122,0.866,125,1.546,133,1.15,141,1.003,154,2.946,165,0.021,166,0.021,173,1.416,337,1.667,341,1.547,395,4.346,396,1.547,397,3.677,398,2.566,399,2.524,400,5.027,401,2.616,402,2.566,403,2.524,404,2.524,405,2.524,406,3.006,407,1.547,408,1.667,409,1.667,410,3.273,411,1.952,412,1.952,413,1.952,414,1.952]],["title/classes/CreateAccountRequestDTO.html",[11,0.014,20,1.994]],["body/classes/CreateAccountRequestDTO.html",[3,0.275,4,0.242,5,0.21,9,0.697,10,1.876,11,0.018,12,0.42,20,2.577,21,1.846,22,0.028,31,0.766,34,0.994,38,2.262,39,0.742,40,1.186,41,0.638,76,0.442,91,1.23,120,0.275,122,0.689,125,1.376,133,1.238,141,0.798,165,0.018,166,0.018,173,1.336,175,3.375,177,3.276,271,1.848,337,1.326,341,1.23,348,1.432,396,1.23,397,3.858,399,2.164,401,2.421,403,2.833,404,2.833,405,2.164,406,3.209,407,1.23,408,1.326,409,1.326,411,1.552,412,1.552,413,1.552,414,1.552,415,1.689,416,3.959,417,3.628,418,3.66,419,2.603,420,2.354,421,2.281,422,4.177,423,2.603,424,3.275,425,3.092,426,2.603,427,2.281,428,2.281,429,2.041,430,2.281,431,2.281,432,2.281,433,2.603,434,3.66,435,3.66,436,2.281]],["title/classes/DepositMoneyRequestDTO.html",[11,0.014,110,1.822]],["body/classes/DepositMoneyRequestDTO.html",[3,0.346,4,0.305,5,0.264,9,0.62,10,1.498,11,0.021,12,0.528,21,1.337,22,0.028,31,0.683,34,0.886,38,2.026,39,0.933,40,0.742,41,0.802,76,0.447,91,1.547,110,2.746,112,3.062,116,1.729,120,0.346,122,0.866,125,1.546,133,0.802,141,1.003,165,0.021,166,0.021,173,1.416,178,2,264,3.853,337,1.667,341,1.547,396,1.547,399,2.524,401,2.616,403,2.524,404,2.524,405,2.524,407,1.547,408,1.667,409,1.667,411,1.952,412,1.952,413,1.952,414,1.952,415,2.124,437,4.111,438,4.232,439,2.868,440,5.027,441,3.709]],["title/classes/EnvironmentVariables.html",[11,0.014,442,2.46]],["body/classes/EnvironmentVariables.html",[3,0.327,4,0.287,5,0.25,9,0.453,11,0.022,12,0.498,21,1.864,22,0.029,30,1.7,31,0.736,34,0.955,44,1.262,46,1.46,76,0.431,120,0.327,122,0.817,141,1.25,150,2.708,165,0.02,166,0.02,173,1.078,178,2.156,228,2.423,264,2.895,271,2.324,272,2.96,348,1.7,396,1.46,407,1.46,420,2.645,429,4.139,442,3.572,443,2.708,444,3.572,445,4.841,446,3.997,447,3.997,448,3.997,449,4.841,450,3.67,451,5.761,452,3.67,453,3.572,454,4.841,455,4.076,456,3.67,457,3.67,458,3.09,459,3.67,460,3.09,461,4.85,462,3.09,463,3.67,464,2.195,465,3.09,466,4.841,467,3.67,468,3.67,469,3.09,470,3.67,471,3.67,472,3.67,473,3.67,474,3.09,475,3.67]],["title/classes/GetUserAccountRequestDTO.html",[11,0.014,49,1.822]],["body/classes/GetUserAccountRequestDTO.html",[3,0.352,4,0.309,5,0.269,9,0.627,10,1.673,11,0.021,12,0.536,21,1.359,22,0.028,31,0.69,34,0.895,38,2.158,39,0.948,40,0.754,41,0.815,49,2.775,76,0.452,91,1.572,120,0.352,122,0.88,125,1.558,133,1.159,141,1.02,154,2.995,165,0.021,166,0.021,173,1.421,337,1.694,341,1.572,396,1.572,399,2.55,401,2.629,402,2.608,403,2.55,404,1.983,405,1.983,406,3.037,407,1.572,408,1.694,409,1.694,411,1.983,412,1.983,413,1.983,414,1.983,415,2.158,438,4.276,476,3.706,477,3.95]],["title/classes/GetUserAccountResponseDTO.html",[11,0.014,108,1.994]],["body/classes/GetUserAccountResponseDTO.html",[3,0.22,4,0.194,5,0.168,9,0.726,10,1.92,11,0.015,12,0.336,21,1.982,22,0.028,31,0.799,34,1.037,38,2.254,39,0.593,40,1.124,41,0.511,76,0.389,91,0.984,108,2.195,116,2.024,120,0.22,122,0.551,125,1.214,133,1.215,141,0.638,154,2.669,165,0.015,166,0.015,173,1.249,174,3.229,175,3.093,176,3.196,177,3.147,178,1.46,179,3.803,271,1.574,337,1.061,341,0.984,348,1.146,362,3.997,396,0.984,399,1.843,401,2.218,402,1.633,403,2.954,404,2.954,405,2.72,406,3.093,407,0.984,408,1.061,409,1.061,411,1.242,412,1.242,413,1.242,414,1.242,416,3.702,418,3.229,419,2.082,420,2.005,421,1.825,422,3.684,424,2.888,427,1.825,428,1.825,429,1.633,430,1.825,431,1.825,432,1.825,434,3.229,435,3.229,436,1.825,439,1.825,441,2.708,476,3.953,478,1.825,479,3.67,480,3.67,481,3.67,482,4.841,483,2.473,484,2.473,485,2.473,486,2.473,487,2.473,488,4.841,489,2.473,490,2.473,491,2.473,492,4.376,493,2.082,494,2.082]],["title/controllers/HealthController.html",[0,1.674,495,2.201]],["body/controllers/HealthController.html",[0,2.909,2,1.871,3,0.486,4,0.292,5,0.253,7,2.749,9,0.46,11,0.024,12,0.506,13,2.097,21,1.282,22,0.029,34,0.657,44,1.682,46,1.483,76,0.435,87,0.894,120,0.332,122,1.089,124,1.111,125,1.034,127,2.036,132,3.693,133,1.127,142,2.341,148,2.455,165,0.02,166,0.02,242,2.46,495,3.228,496,3.137,497,6.294,498,6.176,499,3.726,500,3.726,501,4.117,502,4.89,503,4.89,504,5.795,505,4.89,506,3.287,507,4.89,508,4.89,509,4.89,510,2.749,511,3.726,512,3.726,513,4.89]],["title/modules/HealthModule.html",[189,1.068,514,2.46]],["body/modules/HealthModule.html",[2,2.87,3,0.425,4,0.374,5,0.325,11,0.02,22,0.028,76,0.564,87,1.147,120,0.425,165,0.023,166,0.023,189,1.831,191,1.902,204,3.155,495,4.038,510,3.527,514,4.218,515,4.78,516,5.717,517,4.025,518,5.717,519,4.78]],["title/interfaces/HttpResponse.html",[101,1.674,167,1.43]],["body/interfaces/HttpResponse.html",[3,0.341,4,0.3,5,0.26,9,0.768,12,0.52,22,0.028,31,0.896,101,2.498,120,0.341,131,3.671,132,3.84,133,1.34,142,2.754,165,0.02,166,0.02,167,1.641,169,1.773,173,1.108,178,2.2,287,3.72,453,4.832,506,2.718,520,3.222,521,3.222,522,4.59,523,4.189,524,4.975,525,4.975,526,5.854,527,4.975,528,4.975,529,4.975,530,4.975,531,4.189,532,4.975]],["title/classes/HttpResponseException.html",[11,0.014,94,1.994]],["body/classes/HttpResponseException.html",[3,0.374,4,0.329,5,0.286,9,0.652,11,0.017,22,0.028,31,0.571,34,0.741,39,1.008,40,0.803,41,0.868,76,0.47,87,1.008,94,3.16,101,3.044,120,0.374,122,0.936,124,1.575,125,1.166,142,2.735,165,0.022,166,0.022,169,1.948,171,3.898,189,1.692,287,3.16,396,1.673,506,3.576,533,4.448,534,3.539,535,3.488,536,4.473,537,4.448,538,5.778,539,5.283,540,4.203,541,5.283,542,4.203,543,4.203,544,5.283]],["title/modules/HttpResponseModule.html",[189,1.068,390,1.994]],["body/modules/HttpResponseModule.html",[3,0.408,4,0.359,5,0.312,11,0.019,22,0.028,76,0.496,87,1.101,103,3.15,120,0.408,165,0.023,166,0.023,189,1.786,191,1.826,192,2.584,198,3.047,199,2.506,200,2.303,202,3.681,390,3.942,393,4.115,545,3.862,546,4.588,547,3.862,548,4.588,549,4.588,550,3.385]],["title/injectables/HttpResponseService.html",[103,1.545,216,1.147]],["body/injectables/HttpResponseService.html",[3,0.242,4,0.213,5,0.185,9,0.802,11,0.011,12,0.37,13,1.688,22,0.028,31,0.819,34,0.893,39,1.216,40,0.968,41,1.046,44,2.036,46,2.017,76,0.412,80,2.008,87,0.653,101,2.544,103,1.824,120,0.242,122,1.287,124,1.173,127,3.294,132,3.92,133,1.294,141,0.703,142,2.538,165,0.016,166,0.016,169,1.261,178,2.494,216,1.354,217,1.487,234,4.135,261,2.292,271,1.167,272,1.487,287,3.539,341,1.84,342,3.412,506,3.425,522,4.625,551,4.527,552,2.292,553,4.625,554,3.937,555,3.937,556,3.937,557,2.722,558,2.722,559,3.937,560,3.937,561,5.068,562,3.937,563,3.937,564,2.722,565,3.937,566,2.722,567,3.937,568,2.722,569,2.722,570,4.625,571,4.625,572,2.722,573,2.722,574,2.722,575,2.722,576,2.722,577,2.722,578,2.722]],["title/injectables/LoggerInterceptor.html",[216,1.147,328,2.201]],["body/injectables/LoggerInterceptor.html",[3,0.25,4,0.22,5,0.191,9,0.581,11,0.012,12,0.381,13,1.726,22,0.029,30,1.865,31,0.639,34,0.829,39,0.966,40,0.769,41,0.831,43,3.472,44,1.768,46,1.602,76,0.484,87,0.673,104,2.018,120,0.25,122,1.145,124,1.2,127,3.094,128,2.571,129,2.814,141,1.591,142,2.018,148,2.021,165,0.016,166,0.016,173,0.896,178,1.873,216,1.385,217,1.533,238,3.962,240,1.853,271,1.204,272,1.533,328,2.657,506,3.094,535,1.853,550,2.071,579,2.363,580,4.768,581,5.663,582,5.14,583,4.025,584,4.025,585,4.911,586,5.663,587,5.14,588,2.807,589,5.14,590,4.403,591,4.025,592,4.025,593,6.076,594,2.807,595,3.389,596,4.025,597,2.071,598,3.389,599,4.025,600,2.807,601,4.025,602,4.025,603,2.807,604,2.071,605,4.706,606,4.706,607,4.025,608,2.807,609,4.025,610,4.025,611,2.807,612,2.807,613,4.025,614,2.807,615,2.807,616,2.807,617,2.807,618,2.363,619,2.807,620,4.025,621,2.363,622,4.025,623,2.807,624,2.807,625,2.807]],["title/modules/LoggerModule.html",[189,1.068,391,1.994]],["body/modules/LoggerModule.html",[3,0.408,4,0.359,5,0.312,11,0.019,22,0.028,76,0.496,87,1.101,104,2.916,120,0.408,133,0.947,165,0.023,166,0.023,189,1.786,191,1.826,192,2.584,198,3.047,199,2.506,200,2.303,202,3.681,391,3.942,393,4.115,550,3.385,626,3.862,627,3.862,628,3.862,629,4.588]],["title/injectables/LoggerService.html",[104,1.43,216,1.147]],["body/injectables/LoggerService.html",[3,0.186,4,0.164,5,0.142,9,0.675,11,0.009,12,0.284,13,1.386,22,0.029,29,1.933,30,1.498,31,0.779,34,1.01,39,1.312,40,1.044,41,1.184,44,1.931,46,1.572,76,0.288,87,0.502,92,3.666,104,2.061,120,0.186,122,1.365,124,0.963,125,1.096,127,3.067,128,2.775,129,3.63,133,1.365,145,1.543,148,3.104,165,0.013,166,0.013,173,0.72,216,1.112,217,1.143,348,0.969,522,4.95,535,1.381,580,4.828,590,4.372,597,3.545,630,1.761,631,3.232,632,3.95,633,3.232,634,4.444,635,2.721,636,3.232,637,4.444,638,3.232,639,3.232,640,3.232,641,3.232,642,2.091,643,3.232,644,6.6,645,2.091,646,5.926,647,3.232,648,2.091,649,3.232,650,3.232,651,2.091,652,3.232,653,3.232,654,3.232,655,2.091,656,3.232,657,2.091,658,3.232,659,2.091,660,3.232,661,2.091,662,3.232,663,3.232,664,2.091,665,2.091,666,2.091,667,2.091,668,2.091,669,2.091,670,2.091,671,2.091,672,2.091,673,2.091,674,2.091,675,2.091,676,2.091,677,2.091,678,1.761]],["title/guards/RolesGuard.html",[330,2.201,679,2.201]],["body/guards/RolesGuard.html",[3,0.313,4,0.275,5,0.239,9,0.654,11,0.014,12,0.477,13,2.016,21,1.208,22,0.028,31,0.638,34,0.828,38,2.03,39,1.128,40,0.898,41,0.97,44,1.947,46,1.871,76,0.504,87,0.842,120,0.313,122,1.047,124,1.401,125,0.974,141,1.213,153,3.469,165,0.019,166,0.019,216,1.617,242,2.318,321,2.591,330,3.103,348,2.456,408,2.016,501,3.958,523,3.958,535,2.318,585,4.766,590,4.176,618,2.956,679,4.161,680,3.511,681,2.956,682,3.911,683,5.66,684,3.511,685,6.384,686,3.511,687,4.701,688,5.307,689,4.701,690,3.511,691,3.958,692,3.958,693,3.958,694,3.511,695,2.591,696,4.701,697,3.511,698,3.511,699,3.511,700,3.511,701,3.511]],["title/classes/ShowBalanceReponseDTO.html",[11,0.014,114,1.994]],["body/classes/ShowBalanceReponseDTO.html",[3,0.348,4,0.306,5,0.266,9,0.622,10,1.759,11,0.021,12,0.53,21,1.343,22,0.028,31,0.685,34,0.888,38,2.03,39,0.937,40,0.746,41,0.806,76,0.449,91,1.554,114,3.015,116,2.276,120,0.348,122,0.87,125,1.549,133,0.806,141,1.008,165,0.021,166,0.021,173,1.417,178,2.006,337,1.675,341,1.554,396,1.554,398,2.578,399,2.531,401,2.62,403,2.531,404,2.531,405,2.531,407,1.554,408,1.675,409,1.675,411,1.961,412,1.961,413,1.961,414,1.961,439,2.881,441,3.72,702,4.119,703,5.042,704,5.042]],["title/classes/UpdateAccountRequestDTO.html",[11,0.014,71,1.994]],["body/classes/UpdateAccountRequestDTO.html",[3,0.274,4,0.241,5,0.209,9,0.695,10,1.821,11,0.018,12,0.418,21,1.842,22,0.028,31,0.765,34,0.992,38,2.261,39,0.738,40,1.185,41,0.635,71,2.567,76,0.44,91,1.224,116,1.477,120,0.274,122,0.685,125,1.372,133,1.236,141,0.794,154,2.83,165,0.018,166,0.018,173,1.334,175,3.368,177,1.68,271,1.841,337,1.319,341,1.224,348,1.425,362,3.168,396,1.224,399,2.155,401,2.416,402,2.03,403,2.828,404,2.155,405,2.483,406,3.202,407,1.224,408,1.319,409,1.319,411,1.544,412,1.544,413,1.544,414,1.544,415,1.68,416,4.032,417,3.615,418,3.65,420,2.345,421,2.269,423,2.589,424,3.265,426,2.589,427,2.269,428,2.269,429,3.534,430,2.269,431,2.269,432,2.269,434,3.168,435,3.168,436,2.269,705,4.305,706,3.075,707,4.293,708,3.075,709,2.589]],["title/interfaces/ValidationPipeOptions.html",[167,1.43,710,2.46]],["body/interfaces/ValidationPipeOptions.html",[3,0.37,4,0.325,5,0.282,9,0.512,11,0.017,12,0.564,22,0.028,31,0.78,41,1.312,76,0.37,120,0.37,148,2.632,165,0.021,166,0.021,167,1.781,169,1.924,171,3.868,173,1.168,407,1.652,444,3.868,464,3.135,469,3.496,536,3.868,692,5.351,710,3.868,711,3.496,712,3.461,713,5.243,714,5.243,715,5.746,716,6.036,717,6.036,718,6.036,719,5.243,720,5.243,721,5.243,722,5.243,723,5.243]],["title/interfaces/VirtualBankOptions.html",[167,1.43,724,2.201]],["body/interfaces/VirtualBankOptions.html",[3,0.322,4,0.284,5,0.246,9,0.447,12,0.492,22,0.028,31,0.731,34,0.846,44,1.246,76,0.322,100,2.673,112,2.878,120,0.479,141,0.935,165,0.02,166,0.02,167,1.554,169,1.679,173,1.069,178,2.556,264,2.871,324,3.219,420,3.348,444,2.673,446,4.521,447,4.521,448,4.521,453,4.521,455,4.042,464,2.167,724,4.045,725,2.673,726,4.8,727,5.383,728,4.042,729,4.8,730,4.042,731,4.8,732,4.8,733,4.8,734,4.8,735,4.8,736,4.8,737,4.8,738,3.542,739,4.8,740,3.623,741,3.623,742,3.051,743,3.051,744,3.051]],["title/coverage.html",[745,3.822]],["body/coverage.html",[0,2.345,1,1.829,5,0.188,6,2.333,10,1.832,11,0.025,20,1.657,22,0.028,30,1.284,31,0.376,49,1.514,71,1.657,92,1.657,94,1.657,97,1.829,98,1.829,99,1.829,101,1.391,103,1.284,104,1.188,106,1.391,108,1.657,110,1.514,112,2.002,114,1.657,116,1.372,165,0.016,166,0.016,167,2.192,168,1.657,170,2.333,197,1.514,203,1.829,216,1.863,218,2.333,251,2.333,278,2.044,315,2.044,324,1.657,326,2.044,328,1.829,330,1.829,338,2.044,351,2.333,395,2.044,397,3.373,398,3.373,409,2.492,415,3.249,437,2.942,442,2.044,443,2.942,464,3.556,474,2.333,476,3.373,478,2.942,495,1.829,496,2.333,520,2.333,521,2.333,533,2.333,534,2.333,551,2.333,552,2.333,579,2.333,630,2.333,679,1.829,681,2.333,682,2.044,695,2.044,702,2.942,705,2.942,710,2.044,711,2.333,724,1.829,725,2.942,738,2.044,745,2.333,746,2.333,747,2.77,748,2.77,749,6.788,750,3.987,751,5.109,752,3.987,753,4.671,754,4.671,755,6.346,756,6.617,757,3.987,758,5.109,759,4.671,760,2.77,761,2.77,762,3.357,763,2.333,764,3.357,765,2.77,766,2.333,767,4.559,768,2.333,769,2.77,770,2.77,771,2.77,772,2.333,773,2.77,774,2.333,775,2.333,776,2.77,777,2.77]],["title/dependencies.html",[192,1.857,778,2.349]],["body/dependencies.html",[11,0.02,14,2.273,22,0.029,87,0.912,91,1.513,165,0.02,166,0.02,180,2.509,181,2.509,182,2.509,183,2.509,192,1.761,240,2.509,252,3.2,321,2.804,323,3.2,335,3.2,336,3.2,349,3.2,407,1.513,458,3.2,510,2.804,517,3.2,595,3.2,604,3.655,779,3.801,780,3.801,781,3.801,782,3.801,783,3.801,784,3.801,785,4.954,786,3.801,787,3.801,788,3.801,789,3.801,790,4.954,791,3.801,792,3.801,793,3.801,794,4.954,795,3.801,796,3.801,797,3.801,798,3.801,799,3.801,800,3.801,801,3.801,802,3.801,803,3.801,804,3.801,805,3.801,806,3.801,807,3.801,808,3.801,809,3.801,810,3.801,811,5.511,812,3.801,813,3.801,814,4.954,815,3.801,816,3.801,817,3.801,818,3.801,819,3.801,820,3.801,821,3.801,822,3.801,823,3.801,824,3.801,825,3.801,826,3.801,827,3.801,828,3.801,829,3.801,830,3.801,831,3.801,832,3.801,833,3.801,834,3.801,835,3.801,836,3.801,837,3.801,838,3.801,839,3.801,840,3.801,841,3.801,842,3.801]],["title/miscellaneous/functions.html",[843,1.842,844,3.374]],["body/miscellaneous/functions.html",[9,0.75,12,0.477,22,0.027,24,2.591,25,2.591,31,0.825,39,1.457,40,1.16,41,1.254,43,2.591,44,1.947,45,2.811,65,2.956,97,3.103,98,3.103,99,3.103,124,1.81,129,3.817,133,0.97,142,1.506,148,3.114,149,2.591,165,0.019,166,0.019,178,2.508,228,3.103,271,1.506,272,1.918,278,3.469,316,2.591,326,3.469,401,2.605,443,2.591,460,4.462,461,3.958,462,2.956,465,2.956,506,2.895,536,3.469,597,2.591,712,2.318,738,3.911,766,2.956,767,2.956,768,3.958,774,2.956,775,4.462,843,2.318,844,2.956,845,3.511,846,3.511,847,5.901,848,3.511,849,3.511,850,3.511,851,3.511,852,3.511,853,4.701,854,3.511,855,3.511,856,3.511,857,3.511,858,3.511,859,3.511,860,2.956,861,4.701,862,4.701,863,3.511,864,3.511,865,4.701,866,3.511,867,4.701,868,3.511,869,3.511,870,3.511]],["title/index.html",[12,0.379,871,2.349,872,2.349]],["body/index.html",[22,0.025,116,2.082,124,1.57,165,0.025,166,0.025,873,5.267,874,4.435,875,4.435]],["title/license.html",[871,2.349,872,2.349,876,2.349]],["body/license.html",[4,0.416,5,0.321,9,0.173,11,0.006,22,0.012,34,0.248,40,0.577,51,1.183,54,3.57,76,0.125,124,0.419,153,1.036,165,0.01,166,0.01,169,0.651,179,0.927,200,0.705,213,1.036,229,3.731,277,1.183,324,0.84,361,1.183,420,1.927,531,2.543,537,1.183,598,1.183,604,1.731,635,1.183,691,1.183,693,1.183,728,1.183,730,1.183,746,2.543,772,1.183,860,1.183,876,5.348,877,3.528,878,2.543,879,3.02,880,1.405,881,1.405,882,1.405,883,4.899,884,5.418,885,5.056,886,3.528,887,3.923,888,1.405,889,5.595,890,5.056,891,1.405,892,1.183,893,1.405,894,1.183,895,1.405,896,5.056,897,5.418,898,4.24,899,2.346,900,1.405,901,3.923,902,1.405,903,1.405,904,3.528,905,1.405,906,4.899,907,3.528,908,2.346,909,2.346,910,1.405,911,3.02,912,2.346,913,2.346,914,1.405,915,1.405,916,5.801,917,3.528,918,2.346,919,4.24,920,1.405,921,2.346,922,1.405,923,1.405,924,1.405,925,1.405,926,1.405,927,1.405,928,3.02,929,1.405,930,3.02,931,2.346,932,5.418,933,1.405,934,1.405,935,4.24,936,4.899,937,3.528,938,2.346,939,3.02,940,1.405,941,1.405,942,1.405,943,1.405,944,1.405,945,2.346,946,1.405,947,1.405,948,1.405,949,6.352,950,3.02,951,2.346,952,1.183,953,1.405,954,4.899,955,2.346,956,1.405,957,1.405,958,3.923,959,2.346,960,1.405,961,5.801,962,5.858,963,1.405,964,1.405,965,1.405,966,1.405,967,1.405,968,1.405,969,1.405,970,2.346,971,2.346,972,3.02,973,1.405,974,1.405,975,1.405,976,1.405,977,1.405,978,3.528,979,3.923,980,1.405,981,2.346,982,3.528,983,2.346,984,1.405,985,3.923,986,2.346,987,1.405,988,1.405,989,3.02,990,1.405,991,1.405,992,1.405,993,1.405,994,2.346,995,1.405,996,1.405,997,1.405,998,3.02,999,1.405,1000,1.405,1001,3.02,1002,1.405,1003,1.405,1004,1.405,1005,3.528,1006,5.056,1007,1.405,1008,1.405,1009,2.346,1010,4.716,1011,3.02,1012,2.346,1013,2.346,1014,2.346,1015,2.346,1016,2.346,1017,3.02,1018,2.346,1019,3.02,1020,2.346,1021,2.346,1022,2.346,1023,2.346,1024,1.405,1025,2.346,1026,2.346,1027,1.405,1028,1.405,1029,3.923,1030,4.499,1031,3.02,1032,2.346,1033,1.405,1034,1.405,1035,2.346,1036,2.346,1037,1.405,1038,1.405,1039,3.02,1040,2.346,1041,1.405,1042,1.405,1043,1.405,1044,3.02,1045,1.405,1046,1.405,1047,1.405,1048,2.346,1049,2.346,1050,1.405,1051,1.405,1052,1.405,1053,1.405,1054,1.405,1055,1.405,1056,1.405,1057,2.346,1058,1.405,1059,1.405,1060,1.405,1061,1.405,1062,1.405,1063,1.405,1064,3.923,1065,1.405,1066,3.02,1067,1.405,1068,1.405,1069,3.02,1070,1.405,1071,1.405,1072,1.405,1073,1.405,1074,4.716,1075,1.405,1076,1.405,1077,1.405,1078,1.405,1079,3.528,1080,2.346,1081,3.528,1082,1.405,1083,1.405,1084,3.528,1085,1.405,1086,1.405,1087,1.405,1088,3.02,1089,1.405,1090,1.405,1091,2.346,1092,2.346,1093,1.405,1094,1.405,1095,1.405,1096,1.405,1097,2.346,1098,2.346,1099,1.405,1100,1.405,1101,3.923,1102,1.405,1103,1.405,1104,1.405,1105,1.405,1106,1.405,1107,1.405,1108,3.02,1109,3.528,1110,1.405,1111,1.183,1112,1.405,1113,1.405,1114,1.405,1115,1.405,1116,1.405,1117,1.405,1118,1.405,1119,1.405,1120,2.346,1121,1.405,1122,2.346,1123,1.405,1124,1.405,1125,3.528,1126,1.405,1127,1.405,1128,1.405,1129,1.405,1130,1.405,1131,1.405,1132,1.405,1133,3.528,1134,3.02,1135,3.02,1136,3.02,1137,2.346,1138,2.346,1139,3.02,1140,2.346,1141,2.346,1142,2.346,1143,1.405,1144,1.405,1145,1.405,1146,1.405,1147,1.405,1148,1.405,1149,1.405,1150,1.405,1151,1.405,1152,2.346,1153,1.405,1154,1.405,1155,1.405,1156,3.923,1157,1.405,1158,1.405,1159,1.405,1160,1.405,1161,1.405,1162,1.405,1163,1.405,1164,1.405,1165,1.405,1166,3.923,1167,1.405,1168,1.405,1169,1.405,1170,1.405,1171,1.405,1172,1.405,1173,1.405,1174,1.405,1175,1.405,1176,1.405,1177,1.405,1178,1.405,1179,1.405,1180,1.405,1181,1.405,1182,1.405,1183,1.405,1184,1.405,1185,3.02,1186,1.405,1187,1.405,1188,1.183,1189,1.405,1190,2.346,1191,1.405,1192,1.405,1193,1.405,1194,1.405,1195,1.405,1196,1.405,1197,1.405,1198,1.405,1199,1.405,1200,1.405,1201,1.405,1202,1.405,1203,1.405,1204,1.405,1205,1.405,1206,2.346,1207,1.405,1208,1.405,1209,1.405,1210,2.346,1211,2.346,1212,1.405,1213,1.405,1214,1.405,1215,1.405,1216,1.405,1217,1.405,1218,1.405,1219,1.405,1220,1.405,1221,1.405,1222,1.405,1223,1.405,1224,1.405,1225,1.405,1226,1.405,1227,1.405,1228,1.405,1229,1.405,1230,1.405,1231,1.405,1232,1.405,1233,1.405]],["title/modules.html",[191,1.807]],["body/modules.html",[22,0.024,165,0.024,166,0.024,190,3.237,191,1.951,196,2.679,312,3.237,390,2.933,391,2.933,514,3.618,952,4.129,1188,5.493,1234,6.524,1235,6.524,1236,6.615,1237,4.904]],["title/overview.html",[1238,3.822]],["body/overview.html",[2,2.035,22,0.028,103,3.011,104,2.753,165,0.021,166,0.021,169,1.878,190,4.289,191,1.613,192,2.392,193,3.413,194,3.413,195,3.413,196,3.612,197,3.104,198,2.821,199,2.215,200,2.035,217,2.215,312,3.949,313,3.413,387,3.413,388,3.413,389,3.413,390,3.954,391,3.954,396,1.613,545,3.413,547,3.413,626,3.413,627,3.413,628,3.413,678,3.413,679,2.676,892,3.413,894,3.413,1238,3.413,1239,4.054,1240,4.054,1241,4.054]],["title/properties.html",[173,0.892,778,2.349]],["body/properties.html",[9,0.642,22,0.027,116,1.79,124,1.551,165,0.025,166,0.025,173,1.159,874,4.381,875,4.381,878,4.381,1242,5.203]],["title/miscellaneous/variables.html",[712,2.645,843,1.842]],["body/miscellaneous/variables.html",[10,1.87,12,0.413,22,0.028,31,0.841,34,0.536,40,0.939,92,3.187,112,2.139,116,1.692,133,0.88,154,2.279,165,0.017,166,0.017,173,1.33,176,2.008,177,2.328,191,1.696,264,1.819,271,2.765,272,3.522,315,2.245,316,2.245,324,2.941,337,2.655,338,3.144,339,2.561,340,2.561,341,1.211,342,2.245,348,1.409,397,2.813,398,3.518,401,2.561,408,2.561,409,2.784,410,2.561,415,3.328,416,2.008,424,3.246,433,2.561,437,2.245,446,2.245,447,2.245,448,2.245,464,1.819,476,2.813,478,3.144,493,2.561,494,2.561,621,2.561,682,4.405,688,2.561,695,3.144,702,2.245,705,2.245,709,2.561,712,2.008,724,2.008,725,2.245,742,2.561,743,2.561,744,2.561,762,2.561,763,3.588,764,2.561,843,2.008,1111,2.561,1243,4.261,1244,3.042,1245,4.261,1246,3.042,1247,3.042,1248,3.042,1249,4.261,1250,3.042,1251,4.261,1252,3.042,1253,3.042,1254,3.042,1255,3.042,1256,3.042,1257,3.042,1258,3.042]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":474,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["0.0",{"_index":283,"title":{},"body":{"injectables/AccountService.html":{}}}],["0.0.7",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["0.0001",{"_index":449,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["0.001",{"_index":451,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["0.1.13",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["0.27.1",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["0/7",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":892,"title":{},"body":{"license.html":{},"overview.html":{}}}],["1.0.0",{"_index":1242,"title":{},"body":{"properties.html":{}}}],["1.0.11",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["1.9.2",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["100)].tostring",{"_index":577,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["11/11",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["14.0.1",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["2.0",{"_index":879,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["2.2.5",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":53,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["2004",{"_index":881,"title":{},"body":{"license.html":{}}}],["201",{"_index":28,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["3",{"_index":1240,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["3.5.3",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1241,"title":{},"body":{"overview.html":{}}}],["4.17.8",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":678,"title":{},"body":{"injectables/LoggerService.html":{},"overview.html":{}}}],["5.0.1",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["5.0.8",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["5.1.4",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":772,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6",{"_index":1239,"title":{},"body":{"overview.html":{}}}],["6.1.0",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["7.5.5",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["8.2.5",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["8.4.5",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["83",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":894,"title":{},"body":{"license.html":{},"overview.html":{}}}],["9.2.2",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["aaount",{"_index":480,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["above",{"_index":1113,"title":{},"body":{"license.html":{}}}],["acccount_token','id",{"_index":410,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"miscellaneous/variables.html":{}}}],["acceptance",{"_index":1187,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1185,"title":{},"body":{"license.html":{}}}],["account",{"_index":10,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["account'})@apiresponse({status",{"_index":364,"title":{},"body":{"controllers/BalanceController.html":{}}}],["account.balance",{"_index":385,"title":{},"body":{"controllers/BalanceController.html":{}}}],["account_repository",{"_index":258,"title":{},"body":{"injectables/AccountService.html":{}}}],["account_service",{"_index":123,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["accountcontroller",{"_index":1,"title":{"controllers/AccountController.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"coverage.html":{}}}],["accountcontroller,balancecontroller",{"_index":212,"title":{},"body":{"modules/AccountModule.html":{}}}],["accountentity",{"_index":168,"title":{"interfaces/AccountEntity.html":{}},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"coverage.html":{}}}],["accountmodule",{"_index":190,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules.html":{},"overview.html":{}}}],["accountrepository",{"_index":197,"title":{"injectables/AccountRepository.html":{}},"body":{"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"coverage.html":{},"overview.html":{}}}],["accountrepository,inmemorydbservice,httpresponseservice",{"_index":215,"title":{},"body":{"modules/AccountModule.html":{}}}],["accountservice",{"_index":106,"title":{"injectables/AccountService.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"coverage.html":{}}}],["acount",{"_index":362,"title":{},"body":{"controllers/BalanceController.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["act",{"_index":1194,"title":{},"body":{"license.html":{}}}],["acting",{"_index":903,"title":{},"body":{"license.html":{}}}],["acts",{"_index":1164,"title":{},"body":{"license.html":{}}}],["actual",{"_index":523,"title":{},"body":{"interfaces/HttpResponse.html":{},"guards/RolesGuard.html":{}}}],["add",{"_index":1098,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":1100,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1101,"title":{},"body":{"license.html":{}}}],["additions",{"_index":980,"title":{},"body":{"license.html":{}}}],["addons/in",{"_index":181,"title":{},"body":{"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"dependencies.html":{}}}],["advised",{"_index":1183,"title":{},"body":{"license.html":{}}}],["against",{"_index":1049,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1197,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1136,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1117,"title":{},"body":{"license.html":{}}}],["alive",{"_index":504,"title":{},"body":{"controllers/HealthController.html":{}}}],["alleging",{"_index":1054,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":408,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["allowedproperties",{"_index":409,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allowedproperties.includes(key",{"_index":412,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["alone",{"_index":1045,"title":{},"body":{"license.html":{}}}],["along",{"_index":1089,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1099,"title":{},"body":{"license.html":{}}}],["ammount",{"_index":735,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["amount",{"_index":264,"title":{},"body":{"injectables/AccountService.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["amount.amount",{"_index":306,"title":{},"body":{"injectables/AccountService.html":{}}}],["and/or",{"_index":1191,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":967,"title":{},"body":{"license.html":{}}}],["ansi",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["apache",{"_index":877,"title":{},"body":{"license.html":{}}}],["api",{"_index":131,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"interfaces/HttpResponse.html":{}}}],["api'})@apiresponse({status",{"_index":27,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["api/v1/account",{"_index":8,"title":{},"body":{"controllers/AccountController.html":{}}}],["api/v1/balance",{"_index":352,"title":{},"body":{"controllers/BalanceController.html":{}}}],["apibody",{"_index":88,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["apioperation",{"_index":89,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["apioperation({summary",{"_index":23,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["apiproperty",{"_index":403,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["apiresponse",{"_index":90,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["app_guard",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["appear",{"_index":1094,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":959,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1134,"title":{},"body":{"license.html":{}}}],["application",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["application/controllers",{"_index":211,"title":{},"body":{"modules/AccountModule.html":{}}}],["application/controllers/account.controller",{"_index":206,"title":{},"body":{"modules/AccountModule.html":{}}}],["application/controllers/health.controller",{"_index":519,"title":{},"body":{"modules/HealthModule.html":{}}}],["application/dtos",{"_index":274,"title":{},"body":{"injectables/AccountService.html":{}}}],["application/dtos/deposit",{"_index":275,"title":{},"body":{"injectables/AccountService.html":{}}}],["application/dtos/update",{"_index":276,"title":{},"body":{"injectables/AccountService.html":{}}}],["application/json",{"_index":135,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["application/json')@post('deposit')@public",{"_index":357,"title":{},"body":{"controllers/BalanceController.html":{}}}],["application/json')@post('widraw')@public",{"_index":369,"title":{},"body":{"controllers/BalanceController.html":{}}}],["application/json')@post()@public",{"_index":33,"title":{},"body":{"controllers/AccountController.html":{}}}],["applies",{"_index":1038,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1206,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":312,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":693,"title":{},"body":{"guards/RolesGuard.html":{},"license.html":{}}}],["appropriateness",{"_index":1150,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1223,"title":{},"body":{"license.html":{}}}],["args",{"_index":644,"title":{},"body":{"injectables/LoggerService.html":{}}}],["args.length",{"_index":675,"title":{},"body":{"injectables/LoggerService.html":{}}}],["arguments",{"_index":646,"title":{},"body":{"injectables/LoggerService.html":{}}}],["arising",{"_index":1171,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1203,"title":{},"body":{"license.html":{}}}],["associated",{"_index":51,"title":{},"body":{"controllers/AccountController.html":{},"license.html":{}}}],["assume",{"_index":1153,"title":{},"body":{"license.html":{}}}],["async",{"_index":14,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"dependencies.html":{}}}],["attach",{"_index":1207,"title":{},"body":{"license.html":{}}}],["attached",{"_index":956,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":1079,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":899,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":950,"title":{},"body":{"license.html":{}}}],["available",{"_index":952,"title":{},"body":{"license.html":{},"modules.html":{}}}],["await",{"_index":138,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{}}}],["b",{"_index":1070,"title":{},"body":{"license.html":{}}}],["back",{"_index":61,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["bad",{"_index":866,"title":{},"body":{"miscellaneous/functions.html":{}}}],["balance",{"_index":116,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["balance?:number",{"_index":186,"title":{},"body":{"interfaces/AccountEntity.html":{}}}],["balancecontroller",{"_index":203,"title":{"controllers/BalanceController.html":{}},"body":{"modules/AccountModule.html":{},"controllers/BalanceController.html":{},"coverage.html":{}}}],["bank",{"_index":733,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["based",{"_index":963,"title":{},"body":{"license.html":{}}}],["basis",{"_index":1138,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":985,"title":{},"body":{"license.html":{}}}],["below",{"_index":960,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":927,"title":{},"body":{"license.html":{}}}],["bind",{"_index":977,"title":{},"body":{"license.html":{}}}],["body",{"_index":42,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["body).then(async",{"_index":380,"title":{},"body":{"controllers/BalanceController.html":{}}}],["boilerplate",{"_index":1208,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":692,"title":{},"body":{"guards/RolesGuard.html":{},"interfaces/ValidationPipeOptions.html":{}}}],["bootstrap",{"_index":775,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["brackets",{"_index":1211,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1236,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1234,"title":{},"body":{"modules.html":{}}}],["c",{"_index":1076,"title":{},"body":{"license.html":{}}}],["cache",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["call",{"_index":591,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["callhandler",{"_index":587,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["canactivate",{"_index":683,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":689,"title":{},"body":{"guards/RolesGuard.html":{}}}],["carry",{"_index":1072,"title":{},"body":{"license.html":{}}}],["case",{"_index":525,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["catch",{"_index":147,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["catch(error",{"_index":382,"title":{},"body":{"controllers/BalanceController.html":{}}}],["cause",{"_index":913,"title":{},"body":{"license.html":{}}}],["changed",{"_index":361,"title":{},"body":{"controllers/BalanceController.html":{},"license.html":{}}}],["character",{"_index":1170,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1019,"title":{},"body":{"license.html":{}}}],["check",{"_index":498,"title":{},"body":{"controllers/HealthController.html":{}}}],["checker",{"_index":873,"title":{},"body":{"index.html":{}}}],["checks",{"_index":501,"title":{},"body":{"controllers/HealthController.html":{},"guards/RolesGuard.html":{}}}],["chokidar",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["choose",{"_index":1186,"title":{},"body":{"license.html":{}}}],["circle",{"_index":152,"title":{},"body":{"controllers/AccountController.html":{}}}],["claim",{"_index":1051,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1040,"title":{},"body":{"license.html":{}}}],["class",{"_index":11,"title":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/HttpResponseException.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["classes",{"_index":396,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/HttpResponseException.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"overview.html":{}}}],["client",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["cluster_accountmodule",{"_index":193,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_imports",{"_index":194,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_providers",{"_index":195,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_commonmodule",{"_index":387,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":389,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":388,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_httpresponsemodule",{"_index":545,"title":{},"body":{"modules/HttpResponseModule.html":{},"overview.html":{}}}],["cluster_httpresponsemodule_exports",{"_index":547,"title":{},"body":{"modules/HttpResponseModule.html":{},"overview.html":{}}}],["cluster_httpresponsemodule_providers",{"_index":546,"title":{},"body":{"modules/HttpResponseModule.html":{}}}],["cluster_loggermodule",{"_index":626,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":628,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":627,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["code",{"_index":531,"title":{},"body":{"interfaces/HttpResponse.html":{},"license.html":{}}}],["color",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["colors",{"_index":676,"title":{},"body":{"injectables/LoggerService.html":{}}}],["combination",{"_index":1046,"title":{},"body":{"license.html":{}}}],["comission",{"_index":454,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["comment",{"_index":1215,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1180,"title":{},"body":{"license.html":{}}}],["commision",{"_index":734,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["commission",{"_index":736,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["common",{"_index":537,"title":{},"body":{"classes/HttpResponseException.html":{},"license.html":{}}}],["common/common.module",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":196,"title":{"modules/CommonModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["communication",{"_index":989,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":944,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1226,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1106,"title":{},"body":{"license.html":{}}}],["compodoc/compodoc",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":1177,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":884,"title":{},"body":{"license.html":{}}}],["config",{"_index":461,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["config/env.objects",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["config/env.validation",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["congig",{"_index":462,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["consequential",{"_index":1169,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1193,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":1002,"title":{},"body":{"license.html":{}}}],["const",{"_index":141,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/VirtualBankOptions.html":{}}}],["constitutes",{"_index":1055,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"classes/HttpResponseException.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["constructor(account_repository",{"_index":256,"title":{},"body":{"injectables/AccountService.html":{}}}],["constructor(accountservice",{"_index":222,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["constructor(context",{"_index":639,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(data",{"_index":539,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["constructor(private",{"_index":242,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/HealthController.html":{},"guards/RolesGuard.html":{}}}],["constructor(properties",{"_index":399,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["constructor(reflector",{"_index":684,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructs",{"_index":121,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{}}}],["construed",{"_index":1102,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1086,"title":{},"body":{"license.html":{}}}],["content",{"_index":1131,"title":{},"body":{"license.html":{}}}],["contents",{"_index":1095,"title":{},"body":{"license.html":{}}}],["context",{"_index":590,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":699,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.getclass().name",{"_index":615,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["context.gethandler",{"_index":698,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler().name",{"_index":617,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["context.gettype",{"_index":607,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":618,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getresponse",{"_index":619,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["contexttype",{"_index":606,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["contract",{"_index":918,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":979,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1044,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1108,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1006,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1056,"title":{},"body":{"license.html":{}}}],["control",{"_index":904,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":905,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('api/v1/account",{"_index":119,"title":{},"body":{"controllers/AccountController.html":{}}}],["controller('api/v1/balance",{"_index":372,"title":{},"body":{"controllers/BalanceController.html":{}}}],["controller('health",{"_index":511,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllername",{"_index":614,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["controllername}:${handlername",{"_index":625,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["contructor",{"_index":541,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["contructs",{"_index":687,"title":{},"body":{"guards/RolesGuard.html":{}}}],["conversions",{"_index":946,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1062,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1069,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":897,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":1052,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":745,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":220,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["create(record",{"_index":224,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["create(record:accountentity):promise",{"_index":243,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["createaccountreponsedto",{"_index":47,"title":{},"body":{"controllers/AccountController.html":{}}}],["createaccountreposnsedto",{"_index":395,"title":{"classes/CreateAccountReposnseDto.html":{}},"body":{"classes/CreateAccountReposnseDto.html":{},"coverage.html":{}}}],["createaccountrequestdto",{"_index":20,"title":{"classes/CreateAccountRequestDTO.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/CreateAccountRequestDTO.html":{},"coverage.html":{}}}],["createaccountrequestdto})@apibody({type",{"_index":73,"title":{},"body":{"controllers/AccountController.html":{}}}],["created",{"_index":482,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["created_at",{"_index":174,"title":{},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/GetUserAccountResponseDTO.html":{}}}],["created_at?:date",{"_index":187,"title":{},"body":{"interfaces/AccountEntity.html":{}}}],["createlogger",{"_index":633,"title":{},"body":{"injectables/LoggerService.html":{}}}],["createlogger(context",{"_index":641,"title":{},"body":{"injectables/LoggerService.html":{}}}],["createnewaccount",{"_index":253,"title":{},"body":{"injectables/AccountService.html":{}}}],["createnewaccount(record",{"_index":259,"title":{},"body":{"injectables/AccountService.html":{}}}],["createnewaccounthandler",{"_index":15,"title":{},"body":{"controllers/AccountController.html":{}}}],["createnewaccounthandler(@body",{"_index":136,"title":{},"body":{"controllers/AccountController.html":{}}}],["createnewaccounthandler(body",{"_index":19,"title":{},"body":{"controllers/AccountController.html":{}}}],["creates",{"_index":29,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"injectables/LoggerService.html":{}}}],["cross",{"_index":1050,"title":{},"body":{"license.html":{}}}],["crteate",{"_index":26,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["currencies",{"_index":418,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["currency",{"_index":416,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["currency','created_at",{"_index":493,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":704,"title":{},"body":{"classes/ShowBalanceReponseDTO.html":{}}}],["custom",{"_index":561,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["customary",{"_index":1127,"title":{},"body":{"license.html":{}}}],["customer",{"_index":731,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["customers",{"_index":69,"title":{},"body":{"controllers/AccountController.html":{}}}],["d",{"_index":1082,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1166,"title":{},"body":{"license.html":{}}}],["data",{"_index":287,"title":{},"body":{"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{}}}],["data).balance",{"_index":305,"title":{},"body":{"injectables/AccountService.html":{}}}],["data).balance,3",{"_index":308,"title":{},"body":{"injectables/AccountService.html":{}}}],["data).balance=naiveround((await",{"_index":307,"title":{},"body":{"injectables/AccountService.html":{}}}],["data.currencies=record.currency",{"_index":300,"title":{},"body":{"injectables/AccountService.html":{}}}],["data.description",{"_index":543,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["data.family=record.family",{"_index":298,"title":{},"body":{"injectables/AccountService.html":{}}}],["data.id",{"_index":288,"title":{},"body":{"injectables/AccountService.html":{}}}],["data.name=record.name",{"_index":296,"title":{},"body":{"injectables/AccountService.html":{}}}],["data.status",{"_index":544,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["date",{"_index":179,"title":{},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/GetUserAccountResponseDTO.html":{},"license.html":{}}}],["date.now",{"_index":605,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["db",{"_index":183,"title":{},"body":{"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"dependencies.html":{}}}],["debug",{"_index":634,"title":{},"body":{"injectables/LoggerService.html":{}}}],["debug(message",{"_index":643,"title":{},"body":{"injectables/LoggerService.html":{}}}],["decimal",{"_index":859,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decimalplaces",{"_index":853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorates",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["default",{"_index":271,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountResponseDTO.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1199,"title":{},"body":{"license.html":{}}}],["defined",{"_index":34,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/VirtualBankOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":908,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":888,"title":{},"body":{"license.html":{}}}],["delete",{"_index":77,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{}}}],["delete(id",{"_index":230,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["delete(id:string):promise",{"_index":245,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["deleteaccount",{"_index":16,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["deleteaccount(@query",{"_index":161,"title":{},"body":{"controllers/AccountController.html":{}}}],["deleteaccount(query",{"_index":48,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["deletes",{"_index":50,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["deliberate",{"_index":1161,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":192,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deposit",{"_index":440,"title":{},"body":{"classes/DepositMoneyRequestDTO.html":{}}}],["deposit_fee_per_minute",{"_index":446,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["depositmodeny",{"_index":254,"title":{},"body":{"injectables/AccountService.html":{}}}],["depositmodeny(id",{"_index":263,"title":{},"body":{"injectables/AccountService.html":{}}}],["depositmoney",{"_index":353,"title":{},"body":{"controllers/BalanceController.html":{}}}],["depositmoney(@query",{"_index":374,"title":{},"body":{"controllers/BalanceController.html":{}}}],["depositmoney(query",{"_index":356,"title":{},"body":{"controllers/BalanceController.html":{}}}],["depositmoneyrequestdto",{"_index":110,"title":{"classes/DepositMoneyRequestDTO.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/DepositMoneyRequestDTO.html":{},"coverage.html":{}}}],["deposits",{"_index":359,"title":{},"body":{"controllers/BalanceController.html":{}}}],["depth",{"_index":677,"title":{},"body":{"injectables/LoggerService.html":{}}}],["derivative",{"_index":961,"title":{},"body":{"license.html":{}}}],["derived",{"_index":964,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1128,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/functions.html":{},"license.html":{},"properties.html":{}}}],["designated",{"_index":1004,"title":{},"body":{"license.html":{}}}],["details",{"_index":505,"title":{},"body":{"controllers/HealthController.html":{}}}],["determining",{"_index":1149,"title":{},"body":{"license.html":{}}}],["different",{"_index":1105,"title":{},"body":{"license.html":{}}}],["direct",{"_index":911,"title":{},"body":{"license.html":{}}}],["direction",{"_index":914,"title":{},"body":{"license.html":{}}}],["disabled",{"_index":720,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["disableerrormessages",{"_index":716,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["disclaimer",{"_index":1132,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":999,"title":{},"body":{"license.html":{}}}],["display",{"_index":1026,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1029,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1088,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":887,"title":{},"body":{"license.html":{}}}],["document",{"_index":895,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":746,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["domain/decorators",{"_index":93,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["domain/enums/currencies.enum",{"_index":432,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["domain/exceptions/http",{"_index":95,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["domain/guards",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["domain/helpers",{"_index":100,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"interfaces/VirtualBankOptions.html":{}}}],["domain/interceptors",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["domain/interfaces",{"_index":102,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["domain/modules",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["domain/modules/common",{"_index":394,"title":{},"body":{"modules/CommonModule.html":{}}}],["domain/servicecs",{"_index":105,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["domain/servicecs/account.service",{"_index":107,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["don't",{"_index":1214,"title":{},"body":{"license.html":{}}}],["dotenv",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":401,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dtos",{"_index":109,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["dtos/deposit",{"_index":111,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["dtos/show",{"_index":115,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["dtos/update",{"_index":118,"title":{},"body":{"controllers/AccountController.html":{}}}],["each",{"_index":420,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/VirtualBankOptions.html":{},"license.html":{}}}],["easier",{"_index":1221,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":965,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":968,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":986,"title":{},"body":{"license.html":{}}}],["email",{"_index":709,"title":{},"body":{"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":526,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["enableimplicitconversion",{"_index":468,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["enclosed",{"_index":1210,"title":{},"body":{"license.html":{}}}],["end",{"_index":1205,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":36,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["entities",{"_index":277,"title":{},"body":{"injectables/AccountService.html":{},"license.html":{}}}],["entities/account.entity",{"_index":241,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["entity",{"_index":229,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"license.html":{}}}],["entry",{"_index":24,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"miscellaneous/functions.html":{}}}],["enum",{"_index":739,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["enums",{"_index":694,"title":{},"body":{"guards/RolesGuard.html":{}}}],["enums/httpresponse",{"_index":573,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["env",{"_index":444,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{}}}],["environmanet",{"_index":851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["environmentvariables",{"_index":442,"title":{"classes/EnvironmentVariables.html":{}},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["envobjects",{"_index":740,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["error",{"_index":148,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"interfaces/ValidationPipeOptions.html":{},"miscellaneous/functions.html":{}}}],["error(errors.tostring",{"_index":475,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["error(message",{"_index":647,"title":{},"body":{"injectables/LoggerService.html":{}}}],["error.message",{"_index":612,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["error.stack",{"_index":671,"title":{},"body":{"injectables/LoggerService.html":{}}}],["errors",{"_index":469,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/ValidationPipeOptions.html":{}}}],["errors.length",{"_index":473,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["even",{"_index":1182,"title":{},"body":{"license.html":{}}}],["event",{"_index":1157,"title":{},"body":{"license.html":{}}}],["example",{"_index":957,"title":{},"body":{"license.html":{}}}],["except",{"_index":1031,"title":{},"body":{"license.html":{}}}],["exception",{"_index":536,"title":{},"body":{"classes/HttpResponseException.html":{},"interfaces/ValidationPipeOptions.html":{},"miscellaneous/functions.html":{}}}],["exceptionfactory",{"_index":717,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["excluding",{"_index":1001,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1018,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1118,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":585,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"guards/RolesGuard.html":{}}}],["exercise",{"_index":1155,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":929,"title":{},"body":{"license.html":{}}}],["expand",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["expandenvvariables",{"_index":738,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["expands",{"_index":850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandvariables",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["explicitly",{"_index":1110,"title":{},"body":{"license.html":{}}}],["export",{"_index":120,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{}}}],["exports",{"_index":393,"title":{},"body":{"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{}}}],["express",{"_index":604,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":171,"title":{},"body":{"interfaces/AccountEntity.html":{},"classes/HttpResponseException.html":{},"interfaces/ValidationPipeOptions.html":{}}}],["factory",{"_index":721,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["failure",{"_index":1178,"title":{},"body":{"license.html":{}}}],["faker",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":472,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["familty",{"_index":424,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":175,"title":{},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["family:string",{"_index":185,"title":{},"body":{"interfaces/AccountEntity.html":{}}}],["fee",{"_index":728,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"license.html":{}}}],["fields",{"_index":1209,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":922,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1060,"title":{},"body":{"license.html":{}}}],["files",{"_index":939,"title":{},"body":{"license.html":{}}}],["finally",{"_index":309,"title":{},"body":{"injectables/AccountService.html":{}}}],["fitness",{"_index":1145,"title":{},"body":{"license.html":{}}}],["flag",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["flow",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["following",{"_index":1066,"title":{},"body":{"license.html":{}}}],["form",{"_index":932,"title":{},"body":{"license.html":{}}}],["format",{"_index":635,"title":{},"body":{"injectables/LoggerService.html":{},"license.html":{}}}],["format(message",{"_index":650,"title":{},"body":{"injectables/LoggerService.html":{}}}],["formats",{"_index":652,"title":{},"body":{"injectables/LoggerService.html":{}}}],["formatted",{"_index":653,"title":{},"body":{"injectables/LoggerService.html":{}}}],["formatwithoptions",{"_index":663,"title":{},"body":{"injectables/LoggerService.html":{}}}],["free",{"_index":1021,"title":{},"body":{"license.html":{}}}],["full",{"_index":527,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["function",{"_index":464,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":844,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":553,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["generate(status",{"_index":557,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["generated",{"_index":945,"title":{},"body":{"license.html":{}}}],["generates",{"_index":559,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["get()@healthcheck",{"_index":499,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(id",{"_index":232,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["get(id:string):promise",{"_index":247,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["getaccount",{"_index":17,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["getaccount(@query",{"_index":156,"title":{},"body":{"controllers/AccountController.html":{}}}],["getaccount(query",{"_index":60,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["getdescription",{"_index":554,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["getdescription(status",{"_index":563,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["getmessage",{"_index":555,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["getmessage(status",{"_index":565,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["gets",{"_index":234,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/HttpResponseService.html":{}}}],["getting",{"_index":871,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettype",{"_index":556,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["gettype(status",{"_index":567,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["getuseraccountrequestdto",{"_index":49,"title":{"classes/GetUserAccountRequestDTO.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/GetUserAccountRequestDTO.html":{},"coverage.html":{}}}],["getuseraccountresponsedto",{"_index":108,"title":{"classes/GetUserAccountResponseDTO.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/GetUserAccountResponseDTO.html":{},"coverage.html":{}}}],["getuseraccountresponsedto})@apibody({type",{"_index":62,"title":{},"body":{"controllers/AccountController.html":{}}}],["give",{"_index":1067,"title":{},"body":{"license.html":{}}}],["given",{"_index":37,"title":{},"body":{"controllers/AccountController.html":{}}}],["goodwill",{"_index":1175,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1232,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1011,"title":{},"body":{"license.html":{}}}],["granted",{"_index":931,"title":{},"body":{"license.html":{}}}],["granting",{"_index":900,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1014,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1237,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1162,"title":{},"body":{"license.html":{}}}],["guard",{"_index":679,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":680,"title":{},"body":{"guards/RolesGuard.html":{}}}],["handler",{"_index":589,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["handlername",{"_index":616,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["harmless",{"_index":1201,"title":{},"body":{"license.html":{}}}],["header",{"_index":78,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["header('content",{"_index":134,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["health",{"_index":497,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheck",{"_index":509,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":507,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":495,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":514,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["helpers",{"_index":279,"title":{},"body":{"injectables/AccountService.html":{}}}],["hereby",{"_index":1013,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1114,"title":{},"body":{"license.html":{}}}],["hold",{"_index":1200,"title":{},"body":{"license.html":{}}}],["http",{"_index":506,"title":{},"body":{"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"miscellaneous/functions.html":{}}}],["http://www.apache.org/licenses",{"_index":882,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1228,"title":{},"body":{"license.html":{}}}],["httpcode",{"_index":79,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["httpcode(httpstatus.ok",{"_index":155,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["httpexception",{"_index":538,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["httphealthindicator",{"_index":508,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":516,"title":{},"body":{"modules/HealthModule.html":{}}}],["httpreponse",{"_index":59,"title":{},"body":{"controllers/AccountController.html":{}}}],["httpresponse",{"_index":101,"title":{"interfaces/HttpResponse.html":{}},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"coverage.html":{}}}],["httpresponsedescriptions",{"_index":569,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponsedescriptions[httpstatus[status].tostring",{"_index":575,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponseexception",{"_index":94,"title":{"classes/HttpResponseException.html":{}},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"classes/HttpResponseException.html":{},"coverage.html":{}}}],["httpresponseexception(this.httpresponseservice.generate(httpstatus.internal_server_error",{"_index":160,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["httpresponseexception(this.httpresponseservice.generate(httpstatus.not_acceptable,error",{"_index":383,"title":{},"body":{"controllers/BalanceController.html":{}}}],["httpresponseexception(this.httpresponseservice.generate(httpstatus.not_found",{"_index":151,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["httpresponsegenerator",{"_index":865,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpresponsemessages",{"_index":570,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponsemessages[httpstatus[status].tostring",{"_index":574,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponsemodule",{"_index":390,"title":{"modules/HttpResponseModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules.html":{},"overview.html":{}}}],["httpresponseservice",{"_index":103,"title":{"injectables/HttpResponseService.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"controllers/BalanceController.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"coverage.html":{},"overview.html":{}}}],["httpresponsetypes",{"_index":571,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponsetypescodes",{"_index":572,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["httpresponsetypescodes[math.floor(status",{"_index":576,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["https://developer.mozilla.org/en",{"_index":528,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["httpstatus",{"_index":80,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"injectables/HttpResponseService.html":{}}}],["id",{"_index":154,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["id'})@apiresponse({status",{"_index":52,"title":{},"body":{"controllers/AccountController.html":{}}}],["identification",{"_index":1222,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1213,"title":{},"body":{"license.html":{}}}],["if(data",{"_index":294,"title":{},"body":{"injectables/AccountService.html":{}}}],["if(data.balance",{"_index":311,"title":{},"body":{"injectables/AccountService.html":{}}}],["if(record.currency",{"_index":299,"title":{},"body":{"injectables/AccountService.html":{}}}],["if(record.family",{"_index":297,"title":{},"body":{"injectables/AccountService.html":{}}}],["if(record.name",{"_index":295,"title":{},"body":{"injectables/AccountService.html":{}}}],["ii",{"_index":920,"title":{},"body":{"license.html":{}}}],["iii",{"_index":926,"title":{},"body":{"license.html":{}}}],["implements",{"_index":535,"title":{},"body":{"classes/HttpResponseException.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{}}}],["implied",{"_index":1141,"title":{},"body":{"license.html":{}}}],["import",{"_index":76,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"license.html":{}}}],["imports",{"_index":204,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{}}}],["improving",{"_index":1000,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1173,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1168,"title":{},"body":{"license.html":{}}}],["include",{"_index":972,"title":{},"body":{"license.html":{}}}],["included",{"_index":955,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1083,"title":{},"body":{"license.html":{}}}],["including",{"_index":936,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":983,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1009,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1202,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1198,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1189,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":953,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":912,"title":{},"body":{"license.html":{}}}],["individual",{"_index":928,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{}}}],["information",{"_index":153,"title":{},"body":{"controllers/AccountController.html":{},"guards/RolesGuard.html":{},"license.html":{}}}],["informational",{"_index":1096,"title":{},"body":{"license.html":{}}}],["infrastructure/modules/common",{"_index":210,"title":{},"body":{"modules/AccountModule.html":{}}}],["infringed",{"_index":1043,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1057,"title":{},"body":{"license.html":{}}}],["inject",{"_index":81,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["inject('account",{"_index":126,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["injectable",{"_index":216,"title":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{}},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":217,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["inmemorydb",{"_index":227,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["inmemorydbentity",{"_index":172,"title":{},"body":{"interfaces/AccountEntity.html":{}}}],["inmemorydbservice",{"_index":208,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountRepository.html":{}}}],["inside",{"_index":226,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["instanceof",{"_index":670,"title":{},"body":{"injectables/LoggerService.html":{}}}],["institute",{"_index":1047,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":981,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":582,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["intercept(context",{"_index":584,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["interface",{"_index":167,"title":{"interfaces/AccountEntity.html":{},"interfaces/HttpResponse.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{}},"body":{"interfaces/AccountEntity.html":{},"interfaces/HttpResponse.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":169,"title":{},"body":{"interfaces/AccountEntity.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"license.html":{},"overview.html":{}}}],["invite",{"_index":68,"title":{},"body":{"controllers/AccountController.html":{}}}],["irrevocable",{"_index":1022,"title":{},"body":{"license.html":{}}}],["is_public_key",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isboolean",{"_index":491,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["isdate",{"_index":492,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["isdefined",{"_index":404,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isdefined()@isdate()@isnotempty()@apiproperty({description",{"_index":481,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["isdefined()@isnotempty()@isenum(currencies",{"_index":419,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{}}}],["isdefined()@isnumber()@isnotempty()@apiproperty({description",{"_index":439,"title":{},"body":{"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{}}}],["isdefined()@isstring()@isnotempty()@apiproperty({description",{"_index":402,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isdefined()@isstring()@maxlength(30)@minlength(3)@apiproperty({description",{"_index":422,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{}}}],["isdefined,isnotempty",{"_index":477,"title":{},"body":{"classes/GetUserAccountRequestDTO.html":{}}}],["isemail",{"_index":427,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isenum",{"_index":428,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isenum(currencies",{"_index":436,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isglobal",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":405,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isnumber",{"_index":441,"title":{},"body":{"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{}}}],["isoptional",{"_index":429,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["isoptional()@isnotempty()@isenum(currencies",{"_index":706,"title":{},"body":{"classes/UpdateAccountRequestDTO.html":{}}}],["isoptional()@isstring()@maxlength(30)@minlength(3)@apiproperty({description",{"_index":707,"title":{},"body":{"classes/UpdateAccountRequestDTO.html":{}}}],["ispublic",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstring",{"_index":406,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["issue",{"_index":995,"title":{},"body":{"license.html":{}}}],["january",{"_index":880,"title":{},"body":{"license.html":{}}}],["keeps",{"_index":732,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["key",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyof",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"injectables/HttpResponseService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":1140,"title":{},"body":{"license.html":{}}}],["language",{"_index":1231,"title":{},"body":{"license.html":{}}}],["lastest",{"_index":360,"title":{},"body":{"controllers/BalanceController.html":{}}}],["law",{"_index":1135,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1053,"title":{},"body":{"license.html":{}}}],["legal",{"_index":901,"title":{},"body":{"license.html":{}}}],["liability",{"_index":1156,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1165,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":1041,"title":{},"body":{"license.html":{}}}],["license",{"_index":876,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1225,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1058,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":896,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1142,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1233,"title":{},"body":{"license.html":{}}}],["limited",{"_index":937,"title":{},"body":{"license.html":{}}}],["link",{"_index":976,"title":{},"body":{"license.html":{}}}],["list",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["lists",{"_index":993,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":1048,"title":{},"body":{"license.html":{}}}],["liveness",{"_index":502,"title":{},"body":{"controllers/HealthController.html":{}}}],["load",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":636,"title":{},"body":{"injectables/LoggerService.html":{}}}],["log(message",{"_index":654,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":129,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{}}}],["logger(context",{"_index":665,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerinterceptor",{"_index":328,"title":{"injectables/LoggerInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerInterceptor.html":{},"coverage.html":{}}}],["loggermodule",{"_index":391,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerservice",{"_index":104,"title":{"injectables/LoggerService.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"controllers/BalanceController.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["loggerservice(context",{"_index":667,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice(loggerinterceptor.name",{"_index":599,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["logging",{"_index":631,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loghttprequest",{"_index":583,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["loghttprequest(context",{"_index":592,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["logs",{"_index":580,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{}}}],["loss",{"_index":1174,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1181,"title":{},"body":{"license.html":{}}}],["made",{"_index":951,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":992,"title":{},"body":{"license.html":{}}}],["main",{"_index":849,"title":{},"body":{"miscellaneous/functions.html":{}}}],["make",{"_index":1034,"title":{},"body":{"license.html":{}}}],["making",{"_index":934,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1179,"title":{},"body":{"license.html":{}}}],["managed",{"_index":997,"title":{},"body":{"license.html":{}}}],["management",{"_index":915,"title":{},"body":{"license.html":{}}}],["manager",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["manages",{"_index":874,"title":{},"body":{"index.html":{},"properties.html":{}}}],["marked",{"_index":1003,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1123,"title":{},"body":{"license.html":{}}}],["matching",{"_index":166,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":430,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["maxlength(30",{"_index":434,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["mean",{"_index":890,"title":{},"body":{"license.html":{}}}],["means",{"_index":909,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":941,"title":{},"body":{"license.html":{}}}],["media",{"_index":947,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1063,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1065,"title":{},"body":{"license.html":{}}}],["memory",{"_index":182,"title":{},"body":{"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"dependencies.html":{}}}],["merchantability",{"_index":1144,"title":{},"body":{"license.html":{}}}],["merely",{"_index":975,"title":{},"body":{"license.html":{}}}],["message",{"_index":522,"title":{},"body":{"interfaces/HttpResponse.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerService.html":{}}}],["messages",{"_index":719,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["metadata",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":621,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["method.touppercase",{"_index":624,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["methods",{"_index":13,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{}}}],["minlength",{"_index":431,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["minlength(3",{"_index":435,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["minute",{"_index":729,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["miscellaneous",{"_index":843,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modifications",{"_index":935,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1071,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1097,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1103,"title":{},"body":{"license.html":{}}}],["module",{"_index":189,"title":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{}}}],["modules",{"_index":191,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules[moduleindex",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["moduleslist",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["money",{"_index":112,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/DepositMoneyRequestDTO.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":730,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"license.html":{}}}],["morgan",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["mutex",{"_index":252,"title":{},"body":{"injectables/AccountService.html":{},"dependencies.html":{}}}],["naiveround",{"_index":278,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["naiveround(num",{"_index":852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":40,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["name:string",{"_index":184,"title":{},"body":{"interfaces/AccountEntity.html":{}}}],["names",{"_index":1122,"title":{},"body":{"license.html":{}}}],["necessarily",{"_index":1042,"title":{},"body":{"license.html":{}}}],["negligence",{"_index":1160,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1163,"title":{},"body":{"license.html":{}}}],["nestinterceptor",{"_index":601,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["nestjs",{"_index":180,"title":{},"body":{"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":517,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/cli",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":87,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":91,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":510,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestloggerservice",{"_index":662,"title":{},"body":{"injectables/LoggerService.html":{}}}],["new",{"_index":30,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/EnvironmentVariables.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["next",{"_index":586,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["next.handle().pipe",{"_index":608,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["non",{"_index":1017,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1093,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":598,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"license.html":{}}}],["notice",{"_index":954,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1074,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1112,"title":{},"body":{"license.html":{}}}],["num",{"_index":856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":178,"title":{},"body":{"interfaces/AccountEntity.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountResponseDTO.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"classes/ShowBalanceReponseDTO.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":54,"title":{},"body":{"controllers/AccountController.html":{},"license.html":{}}}],["object.keys(modules).map(moduleindex",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["object.keys(properties).foreach((key",{"_index":411,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["obligations",{"_index":1190,"title":{},"body":{"license.html":{}}}],["observable",{"_index":238,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/LoggerInterceptor.html":{}}}],["obtain",{"_index":1227,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1035,"title":{},"body":{"license.html":{}}}],["ok",{"_index":512,"title":{},"body":{"controllers/HealthController.html":{}}}],["one",{"_index":1087,"title":{},"body":{"license.html":{}}}],["optional",{"_index":41,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":727,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["origin",{"_index":1129,"title":{},"body":{"license.html":{}}}],["original",{"_index":971,"title":{},"body":{"license.html":{}}}],["os",{"_index":235,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["otherwise",{"_index":919,"title":{},"body":{"license.html":{}}}],["out",{"_index":200,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":869,"title":{},"body":{"miscellaneous/functions.html":{}}}],["outstanding",{"_index":924,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1238,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":898,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":921,"title":{},"body":{"license.html":{}}}],["package",{"_index":778,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1220,"title":{},"body":{"license.html":{}}}],["param",{"_index":122,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":1081,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1146,"title":{},"body":{"license.html":{}}}],["party",{"_index":1092,"title":{},"body":{"license.html":{}}}],["patch",{"_index":82,"title":{},"body":{"controllers/AccountController.html":{}}}],["patent",{"_index":1030,"title":{},"body":{"license.html":{}}}],["percent",{"_index":923,"title":{},"body":{"license.html":{}}}],["percission",{"_index":855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["perform",{"_index":1027,"title":{},"body":{"license.html":{}}}],["permission",{"_index":691,"title":{},"body":{"guards/RolesGuard.html":{},"license.html":{}}}],["permissions",{"_index":930,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1015,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1080,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":714,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["places",{"_index":860,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["plaintoclass",{"_index":457,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["plaintoclass(environmentvariables",{"_index":467,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["plugin",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["point",{"_index":25,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"miscellaneous/functions.html":{}}}],["possibility",{"_index":1184,"title":{},"body":{"license.html":{}}}],["post",{"_index":83,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["post('deposit",{"_index":373,"title":{},"body":{"controllers/BalanceController.html":{}}}],["post('widraw",{"_index":377,"title":{},"body":{"controllers/BalanceController.html":{}}}],["power",{"_index":910,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":933,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{}}}],["prepare",{"_index":1024,"title":{},"body":{"license.html":{}}}],["printed",{"_index":1219,"title":{},"body":{"license.html":{}}}],["private",{"_index":127,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{}}}],["process.env.deposit_fee_per_minute",{"_index":744,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["process.env.transaction_commission",{"_index":742,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["process.env.widraw_commission",{"_index":743,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["processes",{"_index":861,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processhttperror",{"_index":97,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["processhttperror(error",{"_index":149,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"miscellaneous/functions.html":{}}}],["processmicroservicehttperror",{"_index":768,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processmicroservicehttperror(error",{"_index":863,"title":{},"body":{"miscellaneous/functions.html":{}}}],["product",{"_index":1124,"title":{},"body":{"license.html":{}}}],["project",{"_index":503,"title":{},"body":{"controllers/HealthController.html":{}}}],["prom",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["prometheusmodule",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["prometheusmodule.register",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["prominent",{"_index":1073,"title":{},"body":{"license.html":{}}}],["promise",{"_index":45,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"miscellaneous/functions.html":{}}}],["promise(async",{"_index":284,"title":{},"body":{"injectables/AccountService.html":{}}}],["properties",{"_index":173,"title":{"properties.html":{}},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"interfaces/HttpResponse.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["properties[key",{"_index":414,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["provide",{"_index":213,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"license.html":{}}}],["provided",{"_index":958,"title":{},"body":{"license.html":{}}}],["providers",{"_index":202,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{}}}],["provides",{"_index":1137,"title":{},"body":{"license.html":{}}}],["public",{"_index":92,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["publicly",{"_index":1025,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":998,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":907,"title":{},"body":{"license.html":{}}}],["put",{"_index":84,"title":{},"body":{"controllers/AccountController.html":{}}}],["query",{"_index":58,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{}}}],["radious",{"_index":66,"title":{},"body":{"controllers/AccountController.html":{}}}],["ramda",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1085,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":128,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{}}}],["reason",{"_index":1204,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1126,"title":{},"body":{"license.html":{}}}],["received",{"_index":1007,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1068,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1217,"title":{},"body":{"license.html":{}}}],["record",{"_index":228,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["record.family",{"_index":282,"title":{},"body":{"injectables/AccountService.html":{}}}],["record.name",{"_index":281,"title":{},"body":{"injectables/AccountService.html":{}}}],["record.username",{"_index":280,"title":{},"body":{"injectables/AccountService.html":{}}}],["redistributing",{"_index":1152,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1061,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":685,"title":{},"body":{"guards/RolesGuard.html":{}}}],["regarding",{"_index":1119,"title":{},"body":{"license.html":{}}}],["release",{"_index":302,"title":{},"body":{"injectables/AccountService.html":{}}}],["remain",{"_index":973,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":1212,"title":{},"body":{"license.html":{}}}],["reponse.dto.ts",{"_index":478,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reponse.dto.ts:19",{"_index":486,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:31",{"_index":487,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:42",{"_index":485,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:53",{"_index":490,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:63",{"_index":484,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:75",{"_index":483,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:86",{"_index":489,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["reponse.dto.ts:97",{"_index":479,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["repositories/account.repository",{"_index":207,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{}}}],["repository",{"_index":219,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["represent",{"_index":969,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":991,"title":{},"body":{"license.html":{}}}],["represents",{"_index":453,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/HttpResponse.html":{},"interfaces/VirtualBankOptions.html":{}}}],["reproduce",{"_index":1023,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1130,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":886,"title":{},"body":{"license.html":{}}}],["req",{"_index":85,"title":{},"body":{"controllers/AccountController.html":{}}}],["reqtime",{"_index":610,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["reqtime}ms",{"_index":613,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["request",{"_index":43,"title":{},"body":{"controllers/AccountController.html":{},"injectables/LoggerInterceptor.html":{},"miscellaneous/functions.html":{}}}],["request.dto",{"_index":113,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{}}}],["request.dto.ts",{"_index":415,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.dto.ts:18",{"_index":438,"title":{},"body":{"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{}}}],["request.dto.ts:19",{"_index":708,"title":{},"body":{"classes/UpdateAccountRequestDTO.html":{}}}],["request.dto.ts:20",{"_index":425,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{}}}],["request.dto.ts:31",{"_index":423,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["request.dto.ts:42",{"_index":426,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["request.dto.ts:53",{"_index":417,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["requests",{"_index":581,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["required",{"_index":1125,"title":{},"body":{"license.html":{}}}],["requiredroles",{"_index":696,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.includes(role",{"_index":701,"title":{},"body":{"guards/RolesGuard.html":{}}}],["res",{"_index":86,"title":{},"body":{"controllers/AccountController.html":{}}}],["reset",{"_index":199,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}],["resolve",{"_index":285,"title":{},"body":{"injectables/AccountService.html":{}}}],["resolve(data",{"_index":292,"title":{},"body":{"injectables/AccountService.html":{}}}],["resolve(response",{"_index":289,"title":{},"body":{"injectables/AccountService.html":{}}}],["resolve,rejects",{"_index":310,"title":{},"body":{"injectables/AccountService.html":{}}}],["response",{"_index":142,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"miscellaneous/functions.html":{}}}],["response(https://en.wikipedia.org/wiki/list_of_http_status_codes",{"_index":532,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["response.dto",{"_index":117,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["response.dto.ts",{"_index":398,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/ShowBalanceReponseDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto.ts:18",{"_index":703,"title":{},"body":{"classes/ShowBalanceReponseDTO.html":{}}}],["response.dto.ts:21",{"_index":400,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{}}}],["response.exception",{"_index":96,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["response.exception.ts",{"_index":534,"title":{},"body":{"classes/HttpResponseException.html":{},"coverage.html":{}}}],["response.exception.ts:8",{"_index":540,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["response.interface.ts",{"_index":521,"title":{},"body":{"interfaces/HttpResponse.html":{},"coverage.html":{}}}],["response.module.ts",{"_index":549,"title":{},"body":{"modules/HttpResponseModule.html":{}}}],["response.service.ts",{"_index":552,"title":{},"body":{"injectables/HttpResponseService.html":{},"coverage.html":{}}}],["response.service.ts:22",{"_index":566,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["response.service.ts:32",{"_index":564,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["response.service.ts:42",{"_index":568,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["response.service.ts:57",{"_index":558,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["responsibility",{"_index":1196,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1148,"title":{},"body":{"license.html":{}}}],["result",{"_index":1172,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":940,"title":{},"body":{"license.html":{}}}],["results",{"_index":165,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1077,"title":{},"body":{"license.html":{}}}],["retuns",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["return",{"_index":46,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{}}}],["returned",{"_index":524,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["returns",{"_index":44,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/EnvironmentVariables.html":{},"controllers/HealthController.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/functions.html":{}}}],["revisions",{"_index":966,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1192,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["risks",{"_index":1154,"title":{},"body":{"license.html":{}}}],["role",{"_index":688,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":682,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles_key",{"_index":695,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":330,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["rounded",{"_index":857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rounds",{"_index":854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["royalty",{"_index":1020,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":240,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/LoggerInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":603,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["same",{"_index":1218,"title":{},"body":{"license.html":{}}}],["section",{"_index":1033,"title":{},"body":{"license.html":{}}}],["sections",{"_index":891,"title":{},"body":{"license.html":{}}}],["see",{"_index":1229,"title":{},"body":{"license.html":{}}}],["sell",{"_index":1036,"title":{},"body":{"license.html":{}}}],["sent",{"_index":990,"title":{},"body":{"license.html":{}}}],["separable",{"_index":974,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1116,"title":{},"body":{"license.html":{}}}],["server",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":124,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["servicecs",{"_index":209,"title":{},"body":{"modules/AccountModule.html":{}}}],["servicecs/account.service",{"_index":205,"title":{},"body":{"modules/AccountModule.html":{}}}],["servicecs/common",{"_index":550,"title":{},"body":{"modules/HttpResponseModule.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{}}}],["setmetadata(is_public_key",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":889,"title":{},"body":{"license.html":{}}}],["shares",{"_index":925,"title":{},"body":{"license.html":{}}}],["short",{"_index":530,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["show",{"_index":367,"title":{},"body":{"controllers/BalanceController.html":{}}}],["showbalance",{"_index":354,"title":{},"body":{"controllers/BalanceController.html":{}}}],["showbalance(@query",{"_index":384,"title":{},"body":{"controllers/BalanceController.html":{}}}],["showbalance(query",{"_index":363,"title":{},"body":{"controllers/BalanceController.html":{}}}],["showbalancereponsedto",{"_index":114,"title":{"classes/ShowBalanceReponseDTO.html":{}},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"classes/ShowBalanceReponseDTO.html":{},"coverage.html":{}}}],["showbalancereponsedto})@apibody({type",{"_index":365,"title":{},"body":{"controllers/BalanceController.html":{}}}],["skaffold",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["skipmissingproperties",{"_index":471,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["software",{"_index":938,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1195,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1147,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/CommonModule.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"modules/HttpResponseModule.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"license.html":{}}}],["special",{"_index":1167,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1230,"title":{},"body":{"license.html":{}}}],["src/.../app.module.ts",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../deposit",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.helper.ts",{"_index":846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../env.objects.ts",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":848,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../get",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../show",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../update",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../util.helper.ts",{"_index":847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/application/controllers/account.controller.ts",{"_index":6,"title":{},"body":{"controllers/AccountController.html":{},"coverage.html":{}}}],["src/application/controllers/account.controller.ts:125",{"_index":75,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/application/controllers/account.controller.ts:42",{"_index":35,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/application/controllers/account.controller.ts:70",{"_index":64,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/application/controllers/account.controller.ts:99",{"_index":57,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/application/controllers/balance.controller.ts",{"_index":351,"title":{},"body":{"controllers/BalanceController.html":{},"coverage.html":{}}}],["src/application/controllers/balance.controller.ts:118",{"_index":366,"title":{},"body":{"controllers/BalanceController.html":{}}}],["src/application/controllers/balance.controller.ts:43",{"_index":358,"title":{},"body":{"controllers/BalanceController.html":{}}}],["src/application/controllers/balance.controller.ts:79",{"_index":370,"title":{},"body":{"controllers/BalanceController.html":{}}}],["src/application/controllers/health.controller.ts",{"_index":496,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/application/controllers/health.controller.ts:21",{"_index":500,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/application/dtos/create",{"_index":397,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/dtos/deposit",{"_index":437,"title":{},"body":{"classes/DepositMoneyRequestDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/dtos/get",{"_index":476,"title":{},"body":{"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/dtos/show",{"_index":702,"title":{},"body":{"classes/ShowBalanceReponseDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/dtos/update",{"_index":705,"title":{},"body":{"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/decorators/public.decorator.ts",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/decorators/roles.decorator.ts",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/entities/account.entity.ts",{"_index":170,"title":{},"body":{"interfaces/AccountEntity.html":{},"coverage.html":{}}}],["src/domain/exceptions/http",{"_index":533,"title":{},"body":{"classes/HttpResponseException.html":{},"coverage.html":{}}}],["src/domain/guards/roles.guard.ts",{"_index":681,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/domain/guards/roles.guard.ts:23",{"_index":690,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/domain/guards/roles.guard.ts:9",{"_index":686,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/domain/helpers/env.helper.ts",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/domain/helpers/util.helper.ts",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/domain/interceptors/logger.interceptor.ts",{"_index":579,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"coverage.html":{}}}],["src/domain/interceptors/logger.interceptor.ts:16",{"_index":600,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["src/domain/interceptors/logger.interceptor.ts:25",{"_index":588,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["src/domain/interceptors/logger.interceptor.ts:55",{"_index":594,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["src/domain/interfaces/http",{"_index":520,"title":{},"body":{"interfaces/HttpResponse.html":{},"coverage.html":{}}}],["src/domain/modules/account.module.ts",{"_index":201,"title":{},"body":{"modules/AccountModule.html":{}}}],["src/domain/modules/common/http",{"_index":548,"title":{},"body":{"modules/HttpResponseModule.html":{}}}],["src/domain/modules/common/logger.module.ts",{"_index":629,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/domain/modules/health.module.ts",{"_index":515,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/domain/pipes/validation.pipe.ts",{"_index":711,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{},"coverage.html":{}}}],["src/domain/repositories/account.repository.ts",{"_index":218,"title":{},"body":{"injectables/AccountRepository.html":{},"coverage.html":{}}}],["src/domain/repositories/account.repository.ts:10",{"_index":223,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["src/domain/repositories/account.repository.ts:23",{"_index":225,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["src/domain/repositories/account.repository.ts:32",{"_index":231,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["src/domain/repositories/account.repository.ts:43",{"_index":233,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["src/domain/repositories/account.repository.ts:52",{"_index":237,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["src/domain/servicecs/account.service.ts",{"_index":251,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/domain/servicecs/account.service.ts:109",{"_index":270,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:15",{"_index":257,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:21",{"_index":273,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:28",{"_index":260,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:51",{"_index":262,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:63",{"_index":266,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:76",{"_index":268,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/account.service.ts:93",{"_index":265,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/domain/servicecs/common/http",{"_index":551,"title":{},"body":{"injectables/HttpResponseService.html":{},"coverage.html":{}}}],["src/domain/servicecs/common/logger.service.ts",{"_index":630,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/domain/servicecs/common/logger.service.ts:12",{"_index":661,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:16",{"_index":640,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:32",{"_index":642,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:41",{"_index":655,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:51",{"_index":648,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:60",{"_index":659,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:69",{"_index":645,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:78",{"_index":657,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/domain/servicecs/common/logger.service.ts:88",{"_index":651,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/infrastructure/config/env.objects.ts",{"_index":725,"title":{},"body":{"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/config/env.validation.ts",{"_index":443,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/infrastructure/config/env.validation.ts:12",{"_index":452,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/infrastructure/config/env.validation.ts:15",{"_index":456,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/infrastructure/config/env.validation.ts:18",{"_index":450,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/infrastructure/modules/app.module.ts",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/modules/common/common.module.ts",{"_index":392,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/main.ts",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":595,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"dependencies.html":{}}}],["started",{"_index":872,"title":{"index.html":{},"license.html":{}},"body":{}}],["starttime",{"_index":593,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["state",{"_index":1111,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["stated",{"_index":1032,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1104,"title":{},"body":{"license.html":{}}}],["statements",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":632,"title":{},"body":{"injectables/LoggerService.html":{}}}],["stating",{"_index":1075,"title":{},"body":{"license.html":{}}}],["status",{"_index":132,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpResponseService.html":{}}}],["statuscode",{"_index":622,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["stoppage",{"_index":1176,"title":{},"body":{"license.html":{}}}],["string",{"_index":133,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"controllers/HealthController.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpResponseService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string})@header('content",{"_index":32,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["styles",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["subject",{"_index":1012,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1028,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1107,"title":{},"body":{"license.html":{}}}],["submit",{"_index":984,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":982,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1008,"title":{},"body":{"license.html":{}}}],["such",{"_index":916,"title":{},"body":{"license.html":{}}}],["summary",{"_index":130,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["super(httpexception.createbody(data",{"_index":542,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["supersede",{"_index":1115,"title":{},"body":{"license.html":{}}}],["support",{"_index":1188,"title":{},"body":{"license.html":{},"modules.html":{}}}],["supports",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["svg",{"_index":1235,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["syntax",{"_index":1216,"title":{},"body":{"license.html":{}}}],["systems",{"_index":994,"title":{},"body":{"license.html":{}}}],["table",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":239,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["taken",{"_index":741,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["takes",{"_index":65,"title":{},"body":{"controllers/AccountController.html":{},"miscellaneous/functions.html":{}}}],["tap",{"_index":602,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["terminate",{"_index":1059,"title":{},"body":{"license.html":{}}}],["terminusmodule",{"_index":518,"title":{},"body":{"modules/HealthModule.html":{}}}],["terms",{"_index":883,"title":{},"body":{"license.html":{}}}],["text",{"_index":1084,"title":{},"body":{"license.html":{}}}],["theory",{"_index":1158,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":978,"title":{},"body":{"license.html":{}}}],["third",{"_index":1091,"title":{},"body":{"license.html":{}}}],["this.account_repository.create(account)).pipe(take(1)).subscribe(async",{"_index":286,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_repository.delete(query.id",{"_index":290,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_repository.get(id)).pipe(take(1)).subscribe(async",{"_index":304,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_repository.get(query.id)).pipe(take(1)).subscribe((data",{"_index":291,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_repository.get(record.id)).pipe(take(1)).subscribe(async",{"_index":293,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_repository.update(data",{"_index":301,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account_service.createnewaccount(body",{"_index":143,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.account_service.deleteaccount(query",{"_index":162,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.account_service.depositmodeny(account.id",{"_index":376,"title":{},"body":{"controllers/BalanceController.html":{}}}],["this.account_service.getaccount(query",{"_index":158,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["this.account_service.updateaccount(body",{"_index":164,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.account_service.widrawmoney(account.id",{"_index":379,"title":{},"body":{"controllers/BalanceController.html":{}}}],["this.accountservice.createasync(record",{"_index":244,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.accountservice.deleteasync(id",{"_index":246,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.accountservice.getasync(id",{"_index":248,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.accountservice.updateasync(record",{"_index":250,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.context",{"_index":666,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.getdescription(status",{"_index":562,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["this.getmessage(status",{"_index":560,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["this.gettype(status",{"_index":578,"title":{},"body":{"injectables/HttpResponseService.html":{}}}],["this.httpresponseservice",{"_index":140,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["this.httpresponseservice.generate(httpstatus.created",{"_index":146,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.httpresponseservice.generate(httpstatus.ok",{"_index":159,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["this.logger",{"_index":145,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"injectables/LoggerService.html":{}}}],["this.logger.debug(this.format(message",{"_index":673,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.error(this.format(message",{"_index":669,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.log",{"_index":623,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["this.logger.log(`[${error.name",{"_index":611,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["this.logger.log(this.format(message",{"_index":668,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.verbose(this.format(message",{"_index":674,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.warn(this.format(message",{"_index":672,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.loghttprequest(context",{"_index":609,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["this.mutex.acquire",{"_index":303,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":697,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this[key",{"_index":413,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["those",{"_index":1039,"title":{},"body":{"license.html":{}}}],["through",{"_index":893,"title":{},"body":{"license.html":{}}}],["throw",{"_index":150,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"classes/EnvironmentVariables.html":{}}}],["throwed",{"_index":862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throws",{"_index":870,"title":{},"body":{"miscellaneous/functions.html":{}}}],["time",{"_index":596,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["title",{"_index":1143,"title":{},"body":{"license.html":{}}}],["token','balance",{"_index":494,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1159,"title":{},"body":{"license.html":{}}}],["tracking",{"_index":996,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1121,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1078,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1120,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":455,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/VirtualBankOptions.html":{}}}],["transaction_commission",{"_index":447,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["transfer",{"_index":1037,"title":{},"body":{"license.html":{}}}],["transform",{"_index":718,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["transformation",{"_index":942,"title":{},"body":{"license.html":{}}}],["transformed",{"_index":722,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["transformer",{"_index":458,"title":{},"body":{"classes/EnvironmentVariables.html":{},"dependencies.html":{}}}],["translation",{"_index":943,"title":{},"body":{"license.html":{}}}],["true",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountResponseDTO.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["true})@apiproperty({description",{"_index":421,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["try",{"_index":137,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{}}}],["type",{"_index":31,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"interfaces/HttpResponse.html":{},"classes/HttpResponseException.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpResponseService.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":948,"title":{},"body":{"license.html":{}}}],["types/dotenv",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["types/express",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["types/faker",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["types/morgan",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["undefined})@delete()@httpcode(httpstatus.ok)@public",{"_index":56,"title":{},"body":{"controllers/AccountController.html":{}}}],["undefined})@get()@httpcode(httpstatus.ok)@public",{"_index":63,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["undefined})@put()@httpcode(httpstatus.ok)@public",{"_index":74,"title":{},"body":{"controllers/AccountController.html":{}}}],["under",{"_index":906,"title":{},"body":{"license.html":{}}}],["union",{"_index":902,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":261,"title":{},"body":{"injectables/AccountService.html":{},"injectables/HttpResponseService.html":{}}}],["unless",{"_index":1109,"title":{},"body":{"license.html":{}}}],["up",{"_index":513,"title":{},"body":{"controllers/HealthController.html":{}}}],["update",{"_index":221,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["update(record",{"_index":236,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["update(record:accountentity):promise",{"_index":249,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["updateaccount",{"_index":18,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["updateaccount(@body",{"_index":163,"title":{},"body":{"controllers/AccountController.html":{}}}],["updateaccount(body",{"_index":70,"title":{},"body":{"controllers/AccountController.html":{}}}],["updateaccount(record",{"_index":267,"title":{},"body":{"injectables/AccountService.html":{}}}],["updateaccountrequestdto",{"_index":71,"title":{"classes/UpdateAccountRequestDTO.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/UpdateAccountRequestDTO.html":{},"coverage.html":{}}}],["updated",{"_index":488,"title":{},"body":{"classes/GetUserAccountResponseDTO.html":{}}}],["updated_at",{"_index":176,"title":{},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/GetUserAccountResponseDTO.html":{},"miscellaneous/variables.html":{}}}],["updated_at?:date",{"_index":188,"title":{},"body":{"interfaces/AccountEntity.html":{}}}],["updates",{"_index":72,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["url",{"_index":620,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["us/docs/web/http/status",{"_index":529,"title":{},"body":{"interfaces/HttpResponse.html":{}}}],["use",{"_index":885,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":214,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{}}}],["user",{"_index":38,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/BalanceController.html":{},"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"guards/RolesGuard.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{}}}],["user'})@apibody({type",{"_index":55,"title":{},"body":{"controllers/AccountController.html":{}}}],["user.roles.some((role",{"_index":700,"title":{},"body":{"guards/RolesGuard.html":{}}}],["username",{"_index":177,"title":{},"body":{"interfaces/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["username','currency",{"_index":433,"title":{},"body":{"classes/CreateAccountRequestDTO.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":875,"title":{},"body":{"index.html":{},"properties.html":{}}}],["using",{"_index":1151,"title":{},"body":{"license.html":{}}}],["util",{"_index":664,"title":{},"body":{"injectables/LoggerService.html":{}}}],["validate",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validate(config",{"_index":465,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["validated",{"_index":463,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatedconfig",{"_index":466,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatedto",{"_index":98,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatedto(body",{"_index":139,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["validatedto(dto",{"_index":864,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validatedto(query",{"_index":157,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["validateoutputdto",{"_index":99,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateoutputdto(account",{"_index":375,"title":{},"body":{"controllers/BalanceController.html":{}}}],["validateoutputdto(balance",{"_index":386,"title":{},"body":{"controllers/BalanceController.html":{}}}],["validateoutputdto(data",{"_index":381,"title":{},"body":{"controllers/BalanceController.html":{}}}],["validateoutputdto(dto",{"_index":868,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateoutputdto(response",{"_index":144,"title":{},"body":{"controllers/AccountController.html":{},"controllers/BalanceController.html":{}}}],["validates",{"_index":460,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["validatesync",{"_index":459,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync(validatedconfig",{"_index":470,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validation",{"_index":713,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["validationerror",{"_index":723,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["validationpipeoptions",{"_index":710,"title":{"interfaces/ValidationPipeOptions.html":{}},"body":{"interfaces/ValidationPipeOptions.html":{},"coverage.html":{}}}],["validator",{"_index":407,"title":{},"body":{"classes/CreateAccountReposnseDto.html":{},"classes/CreateAccountRequestDTO.html":{},"classes/DepositMoneyRequestDTO.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUserAccountRequestDTO.html":{},"classes/GetUserAccountResponseDTO.html":{},"classes/ShowBalanceReponseDTO.html":{},"classes/UpdateAccountRequestDTO.html":{},"interfaces/ValidationPipeOptions.html":{},"dependencies.html":{}}}],["validatoroptions",{"_index":715,"title":{},"body":{"interfaces/ValidationPipeOptions.html":{}}}],["value",{"_index":272,"title":{},"body":{"injectables/AccountService.html":{},"classes/EnvironmentVariables.html":{},"injectables/HttpResponseService.html":{},"injectables/LoggerInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":712,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/ValidationPipeOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["vatiables",{"_index":445,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["verbal",{"_index":987,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":637,"title":{},"body":{"injectables/LoggerService.html":{}}}],["verbose(message",{"_index":656,"title":{},"body":{"injectables/LoggerService.html":{}}}],["version",{"_index":878,"title":{},"body":{"license.html":{},"properties.html":{}}}],["virtualbank",{"_index":726,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["virtualbankoptions",{"_index":724,"title":{"interfaces/VirtualBankOptions.html":{}},"body":{"interfaces/VirtualBankOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":597,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{}}}],["want",{"_index":67,"title":{},"body":{"controllers/AccountController.html":{}}}],["warn",{"_index":638,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warn(message",{"_index":658,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warning",{"_index":660,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warranties",{"_index":1139,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1133,"title":{},"body":{"license.html":{}}}],["webpack",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["wherever",{"_index":1090,"title":{},"body":{"license.html":{}}}],["whether",{"_index":917,"title":{},"body":{"license.html":{}}}],["whole",{"_index":970,"title":{},"body":{"license.html":{}}}],["widraw",{"_index":355,"title":{},"body":{"controllers/BalanceController.html":{}}}],["widraw(@query",{"_index":378,"title":{},"body":{"controllers/BalanceController.html":{}}}],["widraw(query",{"_index":368,"title":{},"body":{"controllers/BalanceController.html":{}}}],["widraw_commission",{"_index":448,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/VirtualBankOptions.html":{},"miscellaneous/variables.html":{}}}],["widrawal",{"_index":737,"title":{},"body":{"interfaces/VirtualBankOptions.html":{}}}],["widrawmoney",{"_index":255,"title":{},"body":{"injectables/AccountService.html":{}}}],["widrawmoney(id",{"_index":269,"title":{},"body":{"injectables/AccountService.html":{}}}],["willsoto/nestjs",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["wirdraws",{"_index":371,"title":{},"body":{"controllers/BalanceController.html":{}}}],["within",{"_index":1010,"title":{},"body":{"license.html":{}}}],["without",{"_index":1064,"title":{},"body":{"license.html":{}}}],["work",{"_index":949,"title":{},"body":{"license.html":{}}}],["works",{"_index":962,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":1016,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1005,"title":{},"body":{"license.html":{}}}],["written",{"_index":988,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":867,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yes",{"_index":649,"title":{},"body":{"injectables/LoggerService.html":{}}}],["yyyy",{"_index":1224,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":198,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HttpResponseModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AccountController.html":{"url":"controllers/AccountController.html","title":"controller - AccountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/controllers/account.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/v1/account\n            \n\n\n            \n                Description\n            \n            \n                Account controller class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewAccountHandler\n                            \n                            \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Async\n                                getAccount\n                            \n                            \n                                    Async\n                                updateAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createNewAccountHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewAccountHandler(body: CreateAccountRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Entry point for crteate account API'})@ApiResponse({status: 201, description: 'Creates a new account', type: String})@Header('content-type', 'application/json')@Post()@Public()\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/account.controller.ts:42\n                \n            \n\n\n            \n                \n                    This endpoint creates a new account for a given user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        body of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        return CreateAccountReponseDTO\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount(query: GetUserAccountRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Deletes the account associated to a given user with user id'})@ApiResponse({status: 200, description: 'Deletes account object of the user'})@ApiBody({type: undefined})@Delete()@HttpCode(HttpStatus.OK)@Public()\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/account.controller.ts:99\n                \n            \n\n\n            \n                \n                    Deletes the account of a given user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        HTTPReponse\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccount(query: GetUserAccountRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Returns back the account associated to a given user with user id'})@ApiResponse({status: 200, description: 'Returns back account object of the user', type: GetUserAccountResponseDTO})@ApiBody({type: undefined})@Get()@HttpCode(HttpStatus.OK)@Public()\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/account.controller.ts:70\n                \n            \n\n\n            \n                \n                    Takes a radious in which we want to invite the customers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        HTTPReponse\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAccount(body: UpdateAccountRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updates the account associated to a given user with user id'})@ApiResponse({status: 200, description: 'Updates account object of the user', type: CreateAccountRequestDTO})@ApiBody({type: undefined})@Put()@HttpCode(HttpStatus.OK)@Public()\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/account.controller.ts:125\n                \n            \n\n\n            \n                \n                    Updates the account of a given user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UpdateAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GetUserAccountRequestDTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        HTTPReponse\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Header, HttpCode, HttpStatus, Inject, Patch, Post, Put, Query, Req, Res } from \"@nestjs/common\";\nimport { ApiBody, ApiOperation, ApiResponse } from \"@nestjs/swagger\";\nimport { Public } from \"../../domain/decorators\";\nimport { HttpResponseException } from \"../../domain/exceptions/http-response.exception\";\nimport { processHttpError, validateDTO, validateOutputDTO } from \"../../domain/helpers\";\nimport { HttpResponse } from \"../../domain/interfaces\";\nimport { HttpResponseService, LoggerService } from \"../../domain/servicecs\";\nimport { AccountService } from \"../../domain/servicecs/Account.service\";\nimport { CreateAccountRequestDTO, GetUserAccountRequestDTO, GetUserAccountResponseDTO } from \"../dtos\";\nimport { DepositMoneyRequestDTO } from \"../dtos/deposit-money-request.dto\";\nimport { ShowBalanceReponseDTO } from \"../dtos/show-balance-response.dto\";\nimport { UpdateAccountRequestDTO } from \"../dtos/update-account-request.dto\";\n/**\n * Account controller class\n */\n@Controller('api/v1/account')\nexport class AccountController {\n\n\n    /**\n     * Constructs account controller class\n     * @param account_service Account service\n     */\n    constructor( @Inject('ACCOUNT') private readonly account_service: AccountService,\n        private readonly httpResponseService: HttpResponseService,\n        private readonly logger: LoggerService) { }\n    //================================================================================================================\n    /**\n     * This endpoint creates a new account for a given user\n     * @param body body of the request\n     * @returns return CreateAccountReponseDTO\n     */\n    @ApiOperation({ summary: 'Entry point for crteate account API' })\n    @ApiResponse({\n        status: 201,\n        description: 'Creates a new account',\n        type: String,\n    })\n    @Header('content-type', 'application/json')\n    @Post()\n    @Public()\n    async createNewAccountHandler(@Body() body: CreateAccountRequestDTO): Promise {\n        try {\n            await validateDTO(body, this.httpResponseService);\n            const response = await this.account_service.createNewAccount(body);\n            await validateOutputDTO(response, this.logger);\n            return this.httpResponseService.generate(HttpStatus.CREATED, response);\n        } catch (error) {\n            processHttpError(error, this.logger);\n            throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n        }\n\n    }\n    //================================================================================================================\n    /**\n    * Takes a radious in which we want to invite the customers.\n    * @param body radious circle information\n    * @returns HTTPReponse\n    */\n    @ApiOperation({ summary: 'Returns back the account associated to a given user with user id' })\n    @ApiResponse({\n        status: 200,\n        description: 'Returns back account object of the user',\n        type: GetUserAccountResponseDTO,\n    })\n    @ApiBody({ type: [GetUserAccountRequestDTO] })\n    @Get()\n    @HttpCode(HttpStatus.OK)\n    @Public()\n    async getAccount(@Query() query: GetUserAccountRequestDTO): Promise {\n        try {\n            await validateDTO(query, this.httpResponseService);\n            const response = await this.account_service.getAccount(query);\n            if (!response) {\n                throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n            }\n            await validateOutputDTO(response, this.logger);\n            return this.httpResponseService.generate(HttpStatus.OK, response);\n        } catch (error) {\n            processHttpError(error, this.logger);\n            throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.INTERNAL_SERVER_ERROR));\n        }\n    }\n    //================================================================================================================\n    /**\n    * Deletes the account of a given user.\n    * @param body GetUserAccountRequestDTO\n    * @returns HTTPReponse\n    */\n    @ApiOperation({ summary: 'Deletes the account associated to a given user with user id' })\n    @ApiResponse({\n        status: 200,\n        description: 'Deletes account object of the user'\n    })\n    @ApiBody({ type: [GetUserAccountRequestDTO] })\n    @Delete()\n    @HttpCode(HttpStatus.OK)\n    @Public()\n    async deleteAccount(@Query() query: GetUserAccountRequestDTO): Promise {\n        try {\n            await validateDTO(query, this.httpResponseService);\n            await this.account_service.deleteAccount(query);\n            return this.httpResponseService.generate(HttpStatus.OK);\n        } catch (error) {\n            processHttpError(error, this.logger);\n            throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.INTERNAL_SERVER_ERROR));\n        }\n    }\n    //================================================================================================================\n    /**\n    * Updates the account of a given user.\n    * @param body GetUserAccountRequestDTO\n    * @returns HTTPReponse\n    */\n    @ApiOperation({ summary: 'Updates the account associated to a given user with user id' })\n    @ApiResponse({\n        status: 200,\n        description: 'Updates account object of the user',\n        type: CreateAccountRequestDTO\n    })\n    @ApiBody({ type: [UpdateAccountRequestDTO] })\n    @Put()\n    @HttpCode(HttpStatus.OK)\n    @Public()\n    async updateAccount(@Body() body: UpdateAccountRequestDTO): Promise {\n        try {\n            await validateDTO(body, this.httpResponseService);\n            const response = await this.account_service.updateAccount(body);\n            if (!response) {\n                throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n            }\n            await validateOutputDTO(response, this.logger);\n            return this.httpResponseService.generate(HttpStatus.OK, response);\n        } catch (error) {\n            processHttpError(error, this.logger);\n            throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.INTERNAL_SERVER_ERROR));\n        }\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountEntity.html":{"url":"interfaces/AccountEntity.html","title":"interface - AccountEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/account.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    InMemoryDBEntity\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            balance\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            family\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        family:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InMemoryDBEntity } from \"@nestjs-addons/in-memory-db\";\n\nexport interface AccountEntity extends InMemoryDBEntity{\n    username: string,\n    name:string,\n    family:string,\n    balance?:number;\n    created_at?:Date;\n    updated_at?:Date\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AccountModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nCommonModule->AccountModule\n\n\n\n\n\nAccountRepository\n\nAccountRepository\n\nAccountModule -->\n\nAccountRepository->AccountModule\n\n\n\n\n\nHttpResponseService\n\nHttpResponseService\n\nAccountModule -->\n\nHttpResponseService->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/account.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountRepository\n                        \n                        \n                            HttpResponseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountController\n                        \n                        \n                            BalanceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountService } from '../servicecs/Account.service';\nimport { AccountController } from '../../application/controllers/account.controller';\nimport { AccountRepository } from '../repositories/account.repository';\nimport { InMemoryDBService } from '@nestjs-addons/in-memory-db';\nimport { HttpResponseService, LoggerService, } from '../servicecs';\nimport { CommonModule } from '../../infrastructure/modules/common';\nimport { BalanceController } from '../../application/controllers';\n\n@Module({\n  imports: [CommonModule],\n  controllers: [AccountController,BalanceController],\n  providers:[{\n    provide: 'ACCOUNT',\n    useClass: AccountService\n  },AccountRepository,InMemoryDBService,HttpResponseService]\n})\nexport class AccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountRepository.html":{"url":"injectables/AccountRepository.html","title":"injectable - AccountRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/repositories/account.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Account repository\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: InMemoryDBService)\n                    \n                \n                        \n                            \n                                Defined in src/domain/repositories/account.repository.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs account repository class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        InMemoryDBService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                account in memory db service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(record: AccountEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/repositories/account.repository.ts:23\n                \n            \n\n\n            \n                \n                    Creates a new account inside inMemoryDB\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                                AccountEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Account entity\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/repositories/account.repository.ts:32\n                \n            \n\n\n            \n                \n                    Deletes an account inside inMemoryDb\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/repositories/account.repository.ts:43\n                \n            \n\n\n            \n                \n                    Gets an account record from InMemoryDb\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id os the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(record: AccountEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/repositories/account.repository.ts:52\n                \n            \n\n\n            \n                \n                    Updates an account inside inMemoryDB\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                                AccountEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Account entity\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InMemoryDBService } from \"@nestjs-addons/in-memory-db\";\nimport { Injectable } from \"@nestjs/common\";\nimport { Observable, take } from \"rxjs\";\nimport { AccountEntity } from \"../entities/account.entity\";\n\n/**\n * Account repository\n */\n@Injectable()\nexport class AccountRepository{\n    /**\n     * Constructs account repository class\n     * @param accountService account in memory db service\n     */\n    constructor(private readonly accountService: InMemoryDBService){\n    }\n    //=======================================================================================================\n    /**\n     * Creates a new account inside inMemoryDB\n     * @param record Account entity\n     * @returns Promise>\n     */\n    async create(record:AccountEntity):Promise>{\n        return this.accountService.createAsync(record);\n    }\n    //=======================================================================================================\n    /**\n     * Deletes an account inside inMemoryDb\n     * @param id id of the user\n     * @returns Promise>\n     */\n    async delete(id:string):Promise>{\n\n\n        return this.accountService.deleteAsync(id)\n    }\n    //=======================================================================================================\n    /**\n     * Gets an account record from InMemoryDb\n     * @param id id os the user\n     * @returns Promise>\n     */\n    async get(id:string):Promise>{\n        return this.accountService.getAsync(id);\n    }\n    //=======================================================================================================\n    /**\n     * Updates an account inside inMemoryDB\n     * @param record Account entity\n     * @returns Promise>\n     */\n    async update(record:AccountEntity):Promise>{\n        return this.accountService.updateAsync(record);\n    }\n    //=======================================================================================================\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/servicecs/Account.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Account service class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mutex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewAccount\n                            \n                            \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Async\n                                depositModeny\n                            \n                            \n                                    Async\n                                getAccount\n                            \n                            \n                                    Async\n                                updateAccount\n                            \n                            \n                                    Async\n                                widrawMoney\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(account_repository: AccountRepository)\n                    \n                \n                        \n                            \n                                Defined in src/domain/servicecs/Account.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructs Account service class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        account_repository\n                                                  \n                                                        \n                                                                        AccountRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                account repository\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createNewAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewAccount(record: CreateAccountRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:28\n                \n            \n\n\n            \n                \n                    Creates a new account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                                CreateAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Account entity\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount(query: GetUserAccountRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:51\n                \n            \n\n\n            \n                \n                    Deletes an account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        depositModeny\n                        \n                    \n                \n            \n            \n                \n                    \n                    depositModeny(id: string, amount: DepositMoneyRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                DepositMoneyRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccount(query: GetUserAccountRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:63\n                \n            \n\n\n            \n                \n                    Gets an account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAccount(record: UpdateAccountRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:76\n                \n            \n\n\n            \n                \n                    Updates an account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                                UpdateAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Account entity\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        widrawMoney\n                        \n                    \n                \n            \n            \n                \n                    \n                    widrawMoney(id: string, amount: DepositMoneyRequestDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/Account.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                DepositMoneyRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mutex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Mutex()\n                    \n                \n                    \n                        \n                                Defined in src/domain/servicecs/Account.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Mutex } from \"async-mutex\";\nimport { take } from \"rxjs\";\nimport { CreateAccountRequestDTO, GetUserAccountRequestDTO, GetUserAccountResponseDTO } from \"../../application/dtos\";\nimport { DepositMoneyRequestDTO } from \"../../application/dtos/deposit-money-request.dto\";\nimport { UpdateAccountRequestDTO } from \"../../application/dtos/update-account-request.dto\";\nimport { AccountEntity } from \"../entities\";\nimport { naiveRound } from \"../helpers\";\nimport { AccountRepository } from \"../repositories/account.repository\";\n\n/**\n * Account service class\n */\n@Injectable()\nexport class AccountService {\n    /**\n     * Constructs Account service class\n     * @param account_repository account repository\n     */\n    constructor(private readonly account_repository: AccountRepository) { }\n    mutex = new Mutex()\n    //====================================================================================================================================\n    /**\n     * Creates a new account\n     * @param record Account entity\n     * @returns Promise>\n     */\n    async createNewAccount(record: CreateAccountRequestDTO) {\n        const account: AccountEntity = {\n            username: record.username,\n            name: record.name,\n            family: record.family,\n            created_at: new Date(),\n            updated_at: new Date(),\n            balance: 0.0,\n            id: \"\"\n        }\n        return new Promise(async (resolve) => {\n            (await this.account_repository.create(account)).pipe(take(1)).subscribe(async (data: any) => {\n                const response = { id: data.id }\n                resolve(response);\n            })\n        })\n    }\n    //====================================================================================================================================\n    /**\n     * Deletes an account\n     * @param id id of the user\n     * @returns Promise>\n     */\n    async deleteAccount(query: GetUserAccountRequestDTO): Promise {\n        return new Promise(async (resolve) => {\n            (await this.account_repository.delete(query.id));\n            resolve();\n        })\n    }\n    //====================================================================================================================================\n    /**\n     * Gets an account\n     * @param id id os the user\n     * @returns Promise>\n     */\n    async getAccount(query: GetUserAccountRequestDTO): Promise {\n        return new Promise(async (resolve) => {\n            (await this.account_repository.get(query.id)).pipe(take(1)).subscribe((data: any) => {\n                resolve(data);\n            })\n        })\n    }\n    //====================================================================================================================================\n    /**\n     * Updates an account\n     * @param record Account entity\n     * @returns Promise>\n     */\n    async updateAccount(record: UpdateAccountRequestDTO): Promise {\n        return new Promise(async (resolve) => {\n            \n            (await this.account_repository.get(record.id)).pipe(take(1)).subscribe(async (data: any) => {\n                if(data)\n                {\n                    if(record.name) data.name=record.name;\n                    if(record.family) data.family=record.family;\n                    if(record.currency) data.currencies=record.currency;\n                    (await this.account_repository.update(data));\n                }\n                \n                resolve(data);\n            })\n        })\n    }\n    //====================================================================================================================================\n    async depositModeny(id: string, amount: DepositMoneyRequestDTO) {\n        const release = await this.mutex.acquire()\n        try {\n            return new Promise(async (resolve) => {\n                (await this.account_repository.get(id)).pipe(take(1)).subscribe(async (data: any) => {\n                    (await data).balance += amount.amount;\n                    (await data).balance=naiveRound((await data).balance,3);\n                    (await this.account_repository.update(data));\n                    resolve(data);\n                })\n            });\n        } finally {\n            release()\n        }\n    }\n    //====================================================================================================================================\n    async widrawMoney(id: string, amount: DepositMoneyRequestDTO) {\n        const release = await this.mutex.acquire()\n        try {\n            return new Promise(async (resolve,rejects) => {\n                try {\n                    (await this.account_repository.get(id)).pipe(take(1)).subscribe(async (data: any) => {\n                        if(data.balance\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/modules/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            application module\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheInterceptor, CacheModule, Module } from '@nestjs/common';\nimport { APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { ConfigModule } from '@nestjs/config';\nimport { configuration } from '../config/env.objects';\nimport { validate } from '../config/env.validation';\n\nimport { LoggerInterceptor } from '../../domain/interceptors';\nimport { RolesGuard } from '../../domain/guards';\nimport * as modules from '../../domain/modules';\nimport { CommonModule } from './common/common.module';\nimport { PrometheusModule } from '@willsoto/nestjs-prometheus';\n\n/**\n * application modules list\n */\nconst modulesList = Object.keys(modules).map(moduleIndex => modules[moduleIndex as keyof typeof modules]);\n\n/**\n * application module\n */\n@Module({\n  imports: [\n    PrometheusModule.register(),\n    CacheModule.register(),\n    CommonModule,\n    ConfigModule.forRoot({\n      load: [configuration],\n      validate,\n      isGlobal: true,\n      cache: true,\n      expandVariables: true,\n    }),\n    ...modulesList,\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: RolesGuard,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: CacheInterceptor,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: LoggerInterceptor,\n    },\n  ],\n  controllers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BalanceController.html":{"url":"controllers/BalanceController.html","title":"controller - BalanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BalanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/controllers/balance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/v1/balance\n            \n\n\n            \n                Description\n            \n            \n                Balance controller class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                depositMoney\n                            \n                            \n                                    Async\n                                showBalance\n                            \n                            \n                                    Async\n                                widraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        depositMoney\n                        \n                    \n                \n            \n            \n                \n                    \n                    depositMoney(query: GetUserAccountRequestDTO, body: DepositMoneyRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Entry point for crteate account API'})@ApiResponse({status: 201, description: 'Creates a new account', type: String})@Header('content-type', 'application/json')@Post('deposit')@Public()\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/balance.controller.ts:43\n                \n            \n\n\n            \n                \n                    This endpoint deposits money to user account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        query of the API\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                DepositMoneyRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        body of the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        lastest changed acount info\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    showBalance(query: GetUserAccountRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Returns back the balance of the account'})@ApiResponse({status: 200, description: 'Returns back the balance of the account', type: ShowBalanceReponseDTO})@ApiBody({type: undefined})@Get()@HttpCode(HttpStatus.OK)@Public()\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/balance.controller.ts:118\n                \n            \n\n\n            \n                \n                    This endpoint show money balance from user account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        query of the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        lastest changed acount info\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        widraw\n                        \n                    \n                \n            \n            \n                \n                    \n                    widraw(query: GetUserAccountRequestDTO, body: DepositMoneyRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Entry point for crteate account API'})@ApiResponse({status: 201, description: 'Creates a new account', type: String})@Header('content-type', 'application/json')@Post('widraw')@Public()\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/balance.controller.ts:79\n                \n            \n\n\n            \n                \n                    This endpoint wirdraws money from user account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserAccountRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        query of the API\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                DepositMoneyRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        body of the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        lastest changed acount info\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Header, HttpCode, HttpStatus, Inject, Post, Query } from \"@nestjs/common\";\nimport { ApiBody, ApiOperation, ApiResponse } from \"@nestjs/swagger\";\nimport { Public } from \"../../domain/decorators\";\nimport { HttpResponseException } from \"../../domain/exceptions/http-response.exception\";\nimport { processHttpError, validateDTO, validateOutputDTO } from \"../../domain/helpers\";\nimport { HttpResponse } from \"../../domain/interfaces\";\nimport { HttpResponseService, LoggerService } from \"../../domain/servicecs\";\nimport { AccountService } from \"../../domain/servicecs/Account.service\";\nimport { GetUserAccountRequestDTO } from \"../dtos\";\nimport { DepositMoneyRequestDTO } from \"../dtos/deposit-money-request.dto\";\nimport { ShowBalanceReponseDTO } from \"../dtos/show-balance-response.dto\";\n/**\n * Balance controller class\n */\n@Controller('api/v1/balance')\nexport class BalanceController {\n\n\n    /**\n     * Constructs balance controller class\n     * @param account_service Account service\n     */\n    constructor(\n        @Inject('ACCOUNT') private readonly account_service: AccountService,\n        private readonly httpResponseService: HttpResponseService,\n        private readonly logger: LoggerService) { }\n    //================================================================================================================\n    /**\n     * This endpoint deposits money to user account\n     * @param query query of the API\n     * @param body body of the API\n     * @returns lastest changed acount info\n     */\n    @ApiOperation({ summary: 'Entry point for crteate account API' })\n    @ApiResponse({\n        status: 201,\n        description: 'Creates a new account',\n        type: String,\n    })\n    @Header('content-type', 'application/json')\n    @Post('deposit')\n    @Public()\n    async depositMoney(@Query() query: GetUserAccountRequestDTO, @Body() body: DepositMoneyRequestDTO): Promise {\n        try {\n\n\n            await validateDTO(query, this.httpResponseService);\n            await validateDTO(body, this.httpResponseService);\n            const account = await this.account_service.getAccount(query);\n\n            if (!account) {\n                throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n            }\n            await validateOutputDTO(account, this.logger);\n            const response = await this.account_service.depositModeny(account.id, body);\n            await validateOutputDTO(response, this.logger);\n            return this.httpResponseService.generate(HttpStatus.OK, response);\n        } catch (error) {\n            processHttpError(error, this.logger);\n            throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n        }\n    }\n    //================================================================================================================\n    /**\n     * This endpoint wirdraws money from user account\n     * @param query query of the API\n     * @param body body of the API\n     * @returns lastest changed acount info\n     */\n    @ApiOperation({ summary: 'Entry point for crteate account API' })\n    @ApiResponse({\n        status: 201,\n        description: 'Creates a new account',\n        type: String,\n    })\n    @Header('content-type', 'application/json')\n    @Post('widraw')\n    @Public()\n    async widraw(@Query() query: GetUserAccountRequestDTO, @Body() body: DepositMoneyRequestDTO): Promise {\n        try {\n            await validateDTO(query, this.httpResponseService);\n            await validateDTO(body, this.httpResponseService);\n            const account = await this.account_service.getAccount(query);\n            if (!account) {\n                throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n            }\n            await validateOutputDTO(account, this.logger);\n            return this.account_service.widrawMoney(account.id, body).then(async (data) => {\n                await validateOutputDTO(data, this.logger);\n                return this.httpResponseService.generate(HttpStatus.OK, data);\n            }).catch(error => {\n                processHttpError(error, this.logger);\n                throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_ACCEPTABLE,error));\n            });\n\n        } catch (error) {\n            processHttpError(error, this.logger);\n            throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n        }\n    }\n    //================================================================================================================\n    /**\n     * This endpoint show money balance from user account\n     * @param query query of the API\n     * @param body body of the API\n     * @returns lastest changed acount info\n     */\n    @ApiOperation({ summary: 'Returns back the balance of the account' })\n    @ApiResponse({\n        status: 200,\n        description: 'Returns back the balance of the account',\n        type: ShowBalanceReponseDTO,\n    })\n    @ApiBody({ type: [GetUserAccountRequestDTO] })\n    @Get()\n    @HttpCode(HttpStatus.OK)\n    @Public()\n    async showBalance(@Query() query: GetUserAccountRequestDTO): Promise {\n        try {\n            await validateDTO(query, this.httpResponseService);\n            const account = await this.account_service.getAccount(query);\n            if (!account) {\n                throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.NOT_FOUND));\n            }\n            await validateOutputDTO(account, this.logger);\n            const balance = { balance: account.balance }\n            await validateOutputDTO(balance, this.logger);\n            return this.httpResponseService.generate(HttpStatus.OK, balance);\n        } catch (error) {\n            processHttpError(error, this.logger);\n            throw new HttpResponseException(this.httpResponseService.generate(HttpStatus.INTERNAL_SERVER_ERROR));\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\n\nHttpResponseModule\n\nHttpResponseModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nHttpResponseModule->CommonModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCommonModule -->\n\nLoggerModule->CommonModule\n\n\n\n\n\nHttpResponseModule \n\nHttpResponseModule \n\nHttpResponseModule  -->\n\nCommonModule->HttpResponseModule \n\n\n\n\n\nLoggerModule \n\nLoggerModule \n\nLoggerModule  -->\n\nCommonModule->LoggerModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/modules/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HttpResponseModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HttpResponseModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HttpResponseModule } from '../../../domain/modules/common';\nimport { LoggerModule } from '../../../domain/modules/common';\n\n@Module({\n  imports: [HttpResponseModule, LoggerModule],\n  exports: [HttpResponseModule, LoggerModule],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountReposnseDto.html":{"url":"classes/CreateAccountReposnseDto.html","title":"class - CreateAccountReposnseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountReposnseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/create-account-response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                CreateAccountReposnseDto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/create-account-response.dto.ts:21\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@ApiProperty({description: 'id of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-account-response.dto.ts:21\n                        \n                    \n\n            \n                \n                    id of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDefined, IsNotEmpty, IsString } from \"class-validator\";\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['acccount_token','id'];\n/**\n * CreateAccountReposnseDto\n */\nexport class CreateAccountReposnseDto {\n\n    /**\n    * id of the user\n    */\n    @IsDefined()\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        description: 'id of the user',\n      })\n    id: string;\n\n    /**\n   * get user DTO constructor\n   * @param properties DTO properties\n   */\n    constructor(properties: any = {}) {\n        Object.keys(properties).forEach((key: string) => {\n            if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountRequestDTO.html":{"url":"classes/CreateAccountRequestDTO.html","title":"class - CreateAccountRequestDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/create-account-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                family\n                            \n                            \n                                name\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/create-account-request.dto.ts:53\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Currencies\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNotEmpty()@IsEnum(Currencies, {each: true})@ApiProperty({description: 'currency of the user account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-account-request.dto.ts:53\n                        \n                    \n\n            \n                \n                    default currency of the account\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        family\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'family of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-account-request.dto.ts:31\n                        \n                    \n\n            \n                \n                    familty of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-account-request.dto.ts:20\n                        \n                    \n\n            \n                \n                    name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'username of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-account-request.dto.ts:42\n                        \n                    \n\n            \n                \n                    username of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDefined, IsEmail, IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength, MinLength } from \"class-validator\";\nimport { Currencies } from \"../../domain/enums/currencies.enum\";\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = [ 'name', 'familty', 'username','currency'];\nexport class CreateAccountRequestDTO {\n    /**\n    * name of the user\n    */\n    @IsDefined()\n    @IsString()\n    @MaxLength(30)\n    @MinLength(3)\n    @ApiProperty({\n        description: 'name of the user',\n      })\n    name: string;\n    /**\n    * familty of the user\n    */\n    @IsDefined()\n    @IsString()\n    @MaxLength(30)\n    @MinLength(3)\n    @ApiProperty({\n        description: 'family of the user',\n      })\n    family: string;\n    /**\n    * username of the user\n    */\n    @IsDefined()\n    @IsString()\n    @MaxLength(30)\n    @MinLength(3)\n    @ApiProperty({\n        description: 'username of the user',\n      })\n    username: string;\n\n    /**\n    * default currency of the account\n    */\n    @IsDefined()\n    @IsNotEmpty()\n    @IsEnum(Currencies, { each: true })\n    @ApiProperty({\n        description: 'currency of the user account',\n      })\n    currency: Currencies;\n\n    /**\n   * get user DTO constructor\n   * @param properties DTO properties\n   */\n    constructor(properties: any = {}) {\n        Object.keys(properties).forEach((key: string) => {\n            if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n        });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DepositMoneyRequestDTO.html":{"url":"classes/DepositMoneyRequestDTO.html","title":"class - DepositMoneyRequestDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DepositMoneyRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/deposit-money-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/deposit-money-request.dto.ts:18\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNumber()@IsNotEmpty()@ApiProperty({description: 'amount of the user account balance'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/deposit-money-request.dto.ts:18\n                        \n                    \n\n            \n                \n                    amount of money to deposit\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDefined, IsNotEmpty, IsNumber } from \"class-validator\";\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['amount'];\nexport class DepositMoneyRequestDTO {\n    /**\n    * amount of money to deposit\n    */\n     @IsDefined()\n     @IsNumber()\n     @IsNotEmpty()\n     @ApiProperty({\n        description: 'amount of the user account balance',\n      })\n     amount: number;\n\n\n    /**\n    * get user DTO constructor\n    * @param properties DTO properties\n    */\n    constructor(properties: any = {}) {\n        Object.keys(properties).forEach((key: string) => {\n            if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n        });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariables.html":{"url":"classes/EnvironmentVariables.html","title":"class - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/config/env.validation.ts\n        \n\n\n            \n                Description\n            \n            \n                env vatiables\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DEPOSIT_FEE_PER_MINUTE\n                            \n                            \n                                TRANSACTION_COMMISSION\n                            \n                            \n                                WIDRAW_COMMISSION\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DEPOSIT_FEE_PER_MINUTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.0001\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/config/env.validation.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TRANSACTION_COMMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.001\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/config/env.validation.ts:12\n                        \n                    \n\n            \n                \n                    Represents the amount of comission for each transaction\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WIDRAW_COMMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.001\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/config/env.validation.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { plainToClass } from 'class-transformer';\nimport { validateSync, IsOptional } from 'class-validator';\n\n/**\n * env vatiables\n */\nclass EnvironmentVariables {\n  /**\n   * Represents the amount of comission for each transaction\n   */\n  @IsOptional()\n  TRANSACTION_COMMISSION = 0.001;\n\n  @IsOptional()\n  WIDRAW_COMMISSION = 0.001;\n\n  @IsOptional()\n  DEPOSIT_FEE_PER_MINUTE = 0.0001;\n}\n\n/**\n * validates the config\n * @param config congig\n * @returns validated config\n */\nexport function validate(config: Record) {\n  const validatedConfig = plainToClass(EnvironmentVariables, config, { enableImplicitConversion: true });\n  const errors = validateSync(validatedConfig, { skipMissingProperties: false });\n\n  if (errors.length > 0) {\n    throw new Error(errors.toString());\n  }\n  return validatedConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserAccountRequestDTO.html":{"url":"classes/GetUserAccountRequestDTO.html","title":"class - GetUserAccountRequestDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserAccountRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/get-account-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/get-account-request.dto.ts:18\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@ApiProperty({description: 'id of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-request.dto.ts:18\n                        \n                    \n\n            \n                \n                    id of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDefined,IsNotEmpty, IsString } from \"class-validator\";\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['id'];\nexport class GetUserAccountRequestDTO {\n    /**\n    * id of the user\n    */\n     @IsDefined()\n     @IsString()\n     @IsNotEmpty()\n     @ApiProperty({\n        description: 'id of the user',\n      })\n     id: string;\n\n\n    /**\n    * get user DTO constructor\n    * @param properties DTO properties\n    */\n    constructor(properties: any = {}) {\n        Object.keys(properties).forEach((key: string) => {\n            if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n        });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserAccountResponseDTO.html":{"url":"classes/GetUserAccountResponseDTO.html","title":"class - GetUserAccountResponseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserAccountResponseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/get-account-reponse.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                            \n                                created_at\n                            \n                            \n                                currency\n                            \n                            \n                                family\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updated_at\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:97\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNumber()@IsNotEmpty()@ApiProperty({description: 'balance of the user acount'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:97\n                        \n                    \n\n            \n                \n                    balance of the aaount\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsDate()@IsNotEmpty()@ApiProperty({description: 'acount created at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:75\n                        \n                    \n\n            \n                \n                    date of when account had been created\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Currencies\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNotEmpty()@IsEnum(Currencies, {each: true})@ApiProperty({description: 'currency of the user acount balance'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:63\n                        \n                    \n\n            \n                \n                    default currency of the account\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        family\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'family of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:42\n                        \n                    \n\n            \n                \n                    familty of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@ApiProperty({description: 'id of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:19\n                        \n                    \n\n            \n                \n                    id of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:31\n                        \n                    \n\n            \n                \n                    name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsDate()@IsNotEmpty()@ApiProperty({description: 'account updated at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:86\n                        \n                    \n\n            \n                \n                    date of when account had been updated\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'username of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/get-account-reponse.dto.ts:53\n                        \n                    \n\n            \n                \n                    username of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsBoolean, IsDate, IsDefined, IsEmail, IsEnum, IsNotEmpty, IsNumber, IsOptional, IsString, MaxLength, MinLength } from \"class-validator\";\nimport { Currencies } from \"../../domain/enums/currencies.enum\";\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['id', 'name', 'familty', 'username', 'currency','created_at', 'updated_at', 'token','balance'];\nexport class GetUserAccountResponseDTO {\n    /**\n    * id of the user\n    */\n    @IsDefined()\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        description: 'id of the user',\n      })\n    id: string;\n\n    /**\n    * name of the user\n    */\n    @IsDefined()\n    @IsString()\n    @MaxLength(30)\n    @MinLength(3)\n    @ApiProperty({\n        description: 'name of the user',\n      })\n    name: string;\n    /**\n    * familty of the user\n    */\n    @IsDefined()\n    @IsString()\n    @MaxLength(30)\n    @MinLength(3)\n    @ApiProperty({\n        description: 'family of the user',\n      })\n    family: string;\n    /**\n    * username of the user\n    */\n    @IsDefined()\n    @IsString()\n    @MaxLength(30)\n    @MinLength(3)\n    @ApiProperty({\n        description: 'username of the user',\n      })\n    username: string;\n    /**\n    * default currency of the account\n    */\n    @IsDefined()\n    @IsNotEmpty()\n    @IsEnum(Currencies, { each: true })\n    @ApiProperty({\n        description: 'currency of the user acount balance',\n      })\n    currency: Currencies;\n\n\n    /**\n    * date of when account had been created\n    */\n    @IsDefined()\n    @IsDate()\n    @IsNotEmpty()\n    @ApiProperty({\n        description: 'acount created at',\n      })\n    created_at: Date;\n\n    /**\n    * date of when account had been updated\n    */\n    @IsDefined()\n    @IsDate()\n    @IsNotEmpty()\n    @ApiProperty({\n        description: 'account updated at',\n      })\n    updated_at: Date;\n\n    /**\n    * balance of the aaount\n    */\n    @IsDefined()\n    @IsNumber()\n    @IsNotEmpty()\n    @ApiProperty({\n        description: 'balance of the user acount',\n      })\n    balance: number;\n\n\n    /**\n    * get user DTO constructor\n    * @param properties DTO properties\n    */\n    constructor(properties: any = {}) {\n        Object.keys(properties).forEach((key: string) => {\n            if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n        });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/controllers/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n            \n                Description\n            \n            \n                Health controller class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/application/controllers/health.controller.ts:21\n                \n            \n\n\n            \n                \n                    Checks the liveness of the project\n\n\n                    \n                    \n                    \n                        Returns :     { status: string; info: { alive: { status: string; }; }; error: {}; details: { alive: { status: string; }; }; }\n\n                    \n                    \n                        http response\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheckService, HttpHealthIndicator, HealthCheck } from '@nestjs/terminus';\n/**\n * Health controller class\n */\n@Controller('health')\nexport class HealthController {\n  /**\n   * Health check controller class constructor.\n   * @param health health check service\n   * @param http http response\n   */\n  constructor(private health: HealthCheckService, private http: HttpHealthIndicator) {}\n  //======================================================================================================\n  /**\n   * Checks the liveness of the project\n   * @returns http response\n   */\n  @Get()\n  @HealthCheck()\n  check() {\n    return { status: 'ok', info: { alive: { status: 'up' } }, error: {}, details: { alive: { status: 'up' } } };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HttpModule } from '@nestjs/axios';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from '../../application/controllers/health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpResponse.html":{"url":"interfaces/HttpResponse.html","title":"interface - HttpResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/interfaces/http-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the actual data which is returned by the API. In case of empty response we will have it empty also.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents a full description about the response (https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents a short message about the response status.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the status code of the http response(https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the type of the response\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface HttpResponse {\n  /**\n   * Represents the type of the response\n   */\n  type: string;\n  /**\n   * Represents the status code of the http response(https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).\n   */\n  status: number;\n  /**\n   * Represents a short message about the response status.\n   */\n  message: string;\n  /**\n   * Represents a full description about the response (https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)\n   */\n  description: string;\n  /**\n   * Represents the actual data which is returned by the API. In case of empty response we will have it empty also.\n   */\n  data: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpResponseException.html":{"url":"classes/HttpResponseException.html","title":"class - HttpResponseException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpResponseException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/exceptions/http-response.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                implements http exception with http response from the service of common module\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: HttpResponse)\n                    \n                \n                        \n                            \n                                Defined in src/domain/exceptions/http-response.exception.ts:8\n                            \n                        \n\n                \n                    \n                            Http response exception contructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        HttpResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Http response\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { HttpResponse } from '../interfaces';\n\n//==================================================================================================\n/**\n * implements http exception with http response from the service of common module\n */\nexport class HttpResponseException extends HttpException {\n  /**\n   * Http response exception contructor\n   * @param data Http response\n   */\n  constructor(data: HttpResponse) {\n    super(HttpException.createBody(data, data.description, data.status), data.status);\n  }\n}\n\n//==================================================================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpResponseModule.html":{"url":"modules/HttpResponseModule.html","title":"module - HttpResponseModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpResponseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HttpResponseModule\n\n\n\ncluster_HttpResponseModule_providers\n\n\n\ncluster_HttpResponseModule_exports\n\n\n\n\nHttpResponseService \n\nHttpResponseService \n\n\n\nHttpResponseModule\n\nHttpResponseModule\n\nHttpResponseService  -->\n\nHttpResponseModule->HttpResponseService \n\n\n\n\n\nHttpResponseService\n\nHttpResponseService\n\nHttpResponseModule -->\n\nHttpResponseService->HttpResponseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/common/http-response.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HttpResponseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HttpResponseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HttpResponseService } from '../../servicecs/common';\n\n@Module({\n  providers: [HttpResponseService],\n  exports: [HttpResponseService],\n})\nexport class HttpResponseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpResponseService.html":{"url":"injectables/HttpResponseService.html","title":"injectable - HttpResponseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpResponseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/servicecs/common/http-response.service.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                            \n                                    Private\n                                getDescription\n                            \n                            \n                                    Private\n                                getMessage\n                            \n                            \n                                    Private\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate(status: number, data, message: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/http-response.service.ts:57\n                \n            \n\n\n            \n                \n                    generates the HTTP response\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        HTTP status\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        data\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getMessage(status)\n                                    \n\n                                    \n                                        custom message\n\n                                    \n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getDescription(status)\n                                    \n\n                                    \n                                        custom description\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HttpResponse\n\n                    \n                    \n                        response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDescription(status: number)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/http-response.service.ts:32\n                \n            \n\n\n            \n                \n                    gets the description\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        description\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMessage(status: number)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/http-response.service.ts:22\n                \n            \n\n\n            \n                \n                    gets the message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getType\n                        \n                    \n                \n            \n            \n                \n                    \n                    getType(status: number)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/http-response.service.ts:42\n                \n            \n\n\n            \n                \n                    gets the type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable } from '@nestjs/common';\nimport {\n  HttpResponseDescriptions,\n  HttpResponseMessages,\n  HttpResponseTypes,\n  HttpResponseTypesCodes,\n} from '../../enums/httpResponse'\n\nimport { HttpResponse } from '../../interfaces';\n\n/**\n * HTTP response service\n */\n@Injectable()\nexport class HttpResponseService {\n  //==================================================================================================\n  /**\n   * gets the message\n   * @param status HTTP status\n   * @returns message\n   */\n  private getMessage(status: number): string {\n    return HttpResponseMessages[HttpStatus[status].toString() as keyof typeof HttpResponseMessages];\n  }\n\n  //==================================================================================================\n  /**\n   * gets the description\n   * @param status HTTP status\n   * @returns description\n   */\n  private getDescription(status: number): string {\n    return HttpResponseDescriptions[HttpStatus[status].toString() as keyof typeof HttpResponseMessages];\n  }\n\n  //==================================================================================================\n  /**\n   * gets the type\n   * @param status HTTP status\n   * @returns type\n   */\n  private getType(status: number): string {\n    return HttpResponseTypes[\n      HttpResponseTypesCodes[Math.floor(status / 100)].toString() as keyof typeof HttpResponseTypes\n    ];\n  }\n\n  //==================================================================================================\n  /**\n   * generates the HTTP response\n   * @param status HTTP status\n   * @param data data\n   * @param message custom message\n   * @param description custom description\n   * @returns response\n   */\n  generate(\n    status: number,\n    data: unknown = {},\n    message: string = this.getMessage(status),\n    description: string = this.getDescription(status)\n  ): HttpResponse {\n    const response: HttpResponse = {\n      type: this.getType(status),\n      status: status,\n      message: message,\n      description: description,\n      data: data,\n    };\n\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerInterceptor.html":{"url":"injectables/LoggerInterceptor.html","title":"injectable - LoggerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/interceptors/logger.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Logs the requests\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                logHttpRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/interceptors/logger.interceptor.ts:25\n                \n            \n\n\n            \n                \n                    intercept handler\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        context\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        handler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        logHttpRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    logHttpRequest(context: ExecutionContext, startTime: number)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/interceptors/logger.interceptor.ts:55\n                \n            \n\n\n            \n                \n                    logs the HTTP requests\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        context\n\n                                    \n                                \n                                \n                                    startTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        start time\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        nothing\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerService\n\n                    \n                \n                \n                    \n                        Default value : new LoggerService(LoggerInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/domain/interceptors/logger.interceptor.ts:16\n                        \n                    \n\n            \n                \n                    logs requests for the service\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Request, Response } from 'express';\nimport { LoggerService } from '../servicecs/common';\n////////////////////////////////////////////////////////////////////////\n/**\n * Logs the requests\n */\n@Injectable()\nexport class LoggerInterceptor implements NestInterceptor {\n  //==================================================================================================\n  /**\n   * logs requests for the service\n   */\n  private readonly logger: LoggerService = new LoggerService(LoggerInterceptor.name);\n\n  //==================================================================================================\n  /**\n   * intercept handler\n   * @param context context\n   * @param next next call\n   * @returns handler\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const startTime = Date.now();\n    const contextType = context.getType();\n\n    return next.handle().pipe(\n      tap(\n        () => {\n          if (contextType === 'http') {\n            this.logHttpRequest(context, startTime);\n          }\n        },\n        (error: Error) => {\n          if (contextType === 'http') {\n            this.logHttpRequest(context, startTime);\n          } else {\n            const reqTime = Date.now() - startTime;\n            this.logger.log(`[${error.name}] ${error.message} ${reqTime}ms`);\n          }\n        }\n      )\n    );\n  }\n\n  //==================================================================================================\n  /**\n   * logs the HTTP requests\n   * @param context context\n   * @param startTime start time\n   * @returns nothing\n   */\n  private logHttpRequest(context: ExecutionContext, startTime: number) {\n    if (context.getType() !== 'http') return;\n    const reqTime = Date.now() - startTime;\n    const controllerName = context.getClass().name;\n    const handlerName = context.getHandler().name;\n    const request = context.switchToHttp().getRequest();\n    const response = context.switchToHttp().getResponse();\n    const { url, method } = request;\n    const { statusCode } = response;\n    this.logger.log(\n      `[HTTP] ${method.toUpperCase()} ${url} ${statusCode} [${controllerName}:${handlerName}] ${reqTime}ms`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLoggerService \n\nLoggerService \n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/common/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerService } from '../../servicecs/common';\n\n@Module({\n  providers: [LoggerService, String],\n  exports: [LoggerService],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/servicecs/common/logger.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for logging\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createlogger\n                            \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Private\n                                format\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                verbose\n                            \n                            \n                                    Public\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/servicecs/common/logger.service.ts:16\n                            \n                        \n\n                \n                    \n                            constructor for the logger\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createlogger\n                        \n                    \n                \n            \n            \n                \n                    \n                    createlogger(context: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:32\n                \n            \n\n\n            \n                \n                    creates the logger\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        context\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LoggerService\n\n                    \n                    \n                        logger\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        debug\n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(message: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:69\n                \n            \n\n\n            \n                \n                    logs the debug message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message: string, error?: string | Error, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:51\n                \n            \n\n\n            \n                \n                    logs the error message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                            string | Error\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        error\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        format\n                        \n                    \n                \n            \n            \n                \n                    \n                    format(message: string, args?: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:88\n                \n            \n\n\n            \n                \n                    formats the message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        formatted message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:41\n                \n            \n\n\n            \n                \n                    logs the message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        verbose\n                        \n                    \n                \n            \n            \n                \n                    \n                    verbose(message: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:78\n                \n            \n\n\n            \n                \n                    logs the verbose message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        warn\n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(message: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/servicecs/common/logger.service.ts:60\n                \n            \n\n\n            \n                \n                    logs the warning message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/servicecs/common/logger.service.ts:16\n                        \n                    \n\n            \n                \n                    context\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/servicecs/common/logger.service.ts:12\n                        \n                    \n\n            \n                \n                    logger\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, LoggerService as NestLoggerService } from '@nestjs/common';\nimport { formatWithOptions } from 'util';\n\n/**\n * service for logging\n */\n@Injectable()\nexport class LoggerService implements NestLoggerService {\n  /**\n   * logger\n   */\n  private readonly logger: Logger;\n  /**\n   * context\n   */\n  private readonly context?: string;\n  //=============================================================================================================\n  /**\n   * constructor for the logger\n   * @param context\n   */\n  constructor(context: string) {\n    this.logger = new Logger(context);\n    this.context = context;\n  }\n  //=============================================================================================================\n  /**\n   * creates the logger\n   * @param context context\n   * @returns logger\n   */\n  static createlogger(context: string): LoggerService {\n    return new LoggerService(context);\n  }\n  //=============================================================================================================\n  /**\n   * logs the message\n   * @param message message\n   * @param args arguments\n   */\n  public log(message: string, ...args: any[]) {\n    this.logger.log(this.format(message, args));\n  }\n  //=============================================================================================================\n  /**\n   * logs the error message\n   * @param message message\n   * @param error error\n   * @param args arguments\n   */\n  public error(message: string, error?: string | Error, ...args: any[]) {\n    this.logger.error(this.format(message, args), error instanceof Error ? error.stack : error);\n  }\n  //=============================================================================================================\n  /**\n   * logs the warning message\n   * @param message message\n   * @param args arguments\n   */\n  public warn(message: string, ...args: any[]) {\n    this.logger.warn(this.format(message, args));\n  }\n  //=============================================================================================================\n  /**\n   * logs the debug message\n   * @param message message\n   * @param args arguments\n   */\n  public debug(message: string, ...args: any[]) {\n    this.logger.debug(this.format(message, args));\n  }\n  //=============================================================================================================\n  /**\n   * logs the verbose message\n   * @param message message\n   * @param args arguments\n   */\n  public verbose(message: string, ...args: any[]) {\n    this.logger.verbose(this.format(message, args));\n  }\n  //=============================================================================================================\n  /**\n   * formats the message\n   * @param message message\n   * @param args arguments\n   * @returns formatted message\n   */\n  private format(message: string, args?: string[]) {\n    if (!args || !args.length) return message;\n\n    return formatWithOptions({ colors: true, depth: 5 }, message, ...args);\n  }\n  //=============================================================================================================\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/domain/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    roles guard\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/domain/guards/roles.guard.ts:9\n                            \n                        \n\n                \n                    \n                            contructs the role guard service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reflector of the guard\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/guards/roles.guard.ts:23\n                \n            \n\n\n            \n                \n                    checks if the user has allowed permission (role)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        context of the guard (actual information)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        returns true if the user has appropriate role\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Roles as Role } from '../enums';\nimport { ROLES_KEY } from '../decorators';\n/**\n * roles guard\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  //==================================================================================================\n  /**\n   * contructs the role guard service\n   * @param reflector reflector of the guard\n   */\n  constructor(private reflector: Reflector) {}\n\n  //==================================================================================================\n  /**\n   * checks if the user has allowed permission (role)\n   * @param context context of the guard (actual information)\n   * @returns returns true if the user has appropriate role\n   */\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (!requiredRoles) {\n      return true;\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n\n    return user.roles.some((role: Role) => requiredRoles.includes(role));\n  }\n\n  //==================================================================================================\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShowBalanceReponseDTO.html":{"url":"classes/ShowBalanceReponseDTO.html","title":"class - ShowBalanceReponseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShowBalanceReponseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/show-balance-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/show-balance-response.dto.ts:18\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNumber()@IsNotEmpty()@ApiProperty({description: 'balance of the user account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/show-balance-response.dto.ts:18\n                        \n                    \n\n            \n                \n                    Current Balance of the account\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDefined, IsNotEmpty, IsNumber } from \"class-validator\";\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['balance'];\nexport class ShowBalanceReponseDTO {\n    /**\n    * Current Balance of the account\n    */\n     @IsDefined()\n     @IsNumber()\n     @IsNotEmpty()\n     @ApiProperty({\n        description: 'balance of the user account',\n      })\n     balance: number;\n\n\n    /**\n    * get user DTO constructor\n    * @param properties DTO properties\n    */\n    constructor(properties: any = {}) {\n        Object.keys(properties).forEach((key: string) => {\n            if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n        });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountRequestDTO.html":{"url":"classes/UpdateAccountRequestDTO.html","title":"class - UpdateAccountRequestDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/update-account-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                family\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: any)\n                    \n                \n                        \n                            \n                                Defined in src/application/dtos/update-account-request.dto.ts:53\n                            \n                        \n\n                \n                    \n                            get user DTO constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                DTO properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Currencies\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNotEmpty()@IsEnum(Currencies, {each: true})@ApiProperty({description: 'currency of the user acount balance'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-account-request.dto.ts:53\n                        \n                    \n\n            \n                \n                    default currency of the account\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        family\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'family of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-account-request.dto.ts:42\n                        \n                    \n\n            \n                \n                    familty of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@ApiProperty({description: 'id of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-account-request.dto.ts:19\n                        \n                    \n\n            \n                \n                    id of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MaxLength(30)@MinLength(3)@ApiProperty({description: 'name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-account-request.dto.ts:31\n                        \n                    \n\n            \n                \n                    name of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDefined, IsEmail, IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength, MinLength } from \"class-validator\";\nimport { Currencies } from \"../../domain/enums/currencies.enum\";\n\n/**\n * List of allowed properties in this DTO\n */\nconst allowedProperties = ['id', 'name', 'familty', 'username', 'email', 'currency'];\nexport class UpdateAccountRequestDTO {\n     /**\n    * id of the user\n    */\n     @IsDefined()\n     @IsString()\n     @IsNotEmpty()\n     @ApiProperty({\n        description: 'id of the user',\n      })\n     id: string;\n\n    /**\n    * name of the user\n    */\n    @IsOptional()\n    @IsString()\n    @MaxLength(30)\n    @MinLength(3)\n    @ApiProperty({\n        description: 'name of the user',\n      })\n    name: string;\n    /**\n    * familty of the user\n    */\n    @IsOptional()\n    @IsString()\n    @MaxLength(30)\n    @MinLength(3)\n    @ApiProperty({\n        description: 'family of the user',\n      })\n    family: string;\n\n    /**\n    * default currency of the account\n    */\n    @IsOptional()\n    @IsNotEmpty()\n    @IsEnum(Currencies, { each: true })\n    @ApiProperty({\n        description: 'currency of the user acount balance',\n      })\n    currency: Currencies;\n\n    /**\n   * get user DTO constructor\n   * @param properties DTO properties\n   */\n    constructor(properties: any = {}) {\n        Object.keys(properties).forEach((key: string) => {\n            if (allowedProperties.includes(key)) this[key as keyof this] = properties[key];\n        });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationPipeOptions.html":{"url":"interfaces/ValidationPipeOptions.html","title":"interface - ValidationPipeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationPipeOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/pipes/validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                env variables validation pipeline\n\n            \n\n            \n                Extends\n            \n            \n                    ValidatorOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disableErrorMessages\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exceptionFactory\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transform\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableErrorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableErrorMessages:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If error messages should be disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exceptionFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exceptionFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Exception factory\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transform:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If it should be transformed\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ValidationError, ValidatorOptions } from 'class-validator';\n/**\n * env variables validation pipeline\n */\nexport interface ValidationPipeOptions extends ValidatorOptions {\n  /**\n   * If it should be transformed\n   */\n  transform?: boolean;\n  /**\n   * If error messages should be disabled\n   */\n  disableErrorMessages?: boolean;\n  /**\n   * Exception factory\n   */\n  exceptionFactory?: (errors: ValidationError[]) => any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VirtualBankOptions.html":{"url":"interfaces/VirtualBankOptions.html","title":"interface - VirtualBankOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VirtualBankOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/config/env.objects.ts\n        \n\n\n            \n                Description\n            \n            \n                VirtualBank options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            deposit_fee_per_minute\n                                        \n                                \n                                \n                                        \n                                            transaction_commission\n                                        \n                                \n                                \n                                        \n                                            widraw_commission\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deposit_fee_per_minute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deposit_fee_per_minute:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the fee for each minute more if customer keeps the money in our bank\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transaction_commission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transaction_commission:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the commision amount defined for each money transaction\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widraw_commission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        widraw_commission:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the ammount of commission for each widrawal\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { expandEnvVariables } from '../../domain/helpers';\nexpandEnvVariables();\n\n/**\n * options enum\n */\nexport enum EnvObjects {\n  TRANSACTION_COMMISSION    =   'VirtualBankOptions',\n  WIDRAW_COMMISSION         =   'VirtualBankOptions',\n  DEPOSIT_FEE_PER_MINUTE    =   'VirtualBankOptions'\n}\n//===================================================================================================\n/**\n * VirtualBank options\n */\nexport interface VirtualBankOptions {\n  /**\n   * Represents the commision amount defined for each money transaction\n   */\n  transaction_commission: number;\n  /**\n   * Represents the ammount of commission for each widrawal\n   */\n  widraw_commission: number;\n\n  /**\n   * Represents the fee for each minute more if customer keeps the money in our bank\n   */\n  deposit_fee_per_minute: number;\n}\n\n/**\n * configuration function\n * @returns configuration taken from env\n */\nexport const configuration = (): any => ({\n    VirtualBankOptions: {\n    transaction_commission: process.env.TRANSACTION_COMMISSION,\n    widraw_commission: process.env.WIDRAW_COMMISSION,\n    deposit_fee_per_minute: process.env.DEPOSIT_FEE_PER_MINUTE\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/application/controllers/account.controller.ts\n            \n            controller\n            AccountController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/application/controllers/balance.controller.ts\n            \n            controller\n            BalanceController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/application/controllers/health.controller.ts\n            \n            controller\n            HealthController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/application/dtos/create-account-request.dto.ts\n            \n            class\n            CreateAccountRequestDTO\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/application/dtos/create-account-request.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/create-account-response.dto.ts\n            \n            class\n            CreateAccountReposnseDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/dtos/create-account-response.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/deposit-money-request.dto.ts\n            \n            class\n            DepositMoneyRequestDTO\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/application/dtos/deposit-money-request.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/get-account-reponse.dto.ts\n            \n            class\n            GetUserAccountResponseDTO\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/application/dtos/get-account-reponse.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/get-account-request.dto.ts\n            \n            class\n            GetUserAccountRequestDTO\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/application/dtos/get-account-request.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/show-balance-response.dto.ts\n            \n            class\n            ShowBalanceReponseDTO\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/application/dtos/show-balance-response.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/application/dtos/update-account-request.dto.ts\n            \n            class\n            UpdateAccountRequestDTO\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/application/dtos/update-account-request.dto.ts\n            \n            variable\n            allowedProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/entities/account.entity.ts\n            \n            interface\n            AccountEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/exceptions/http-response.exception.ts\n            \n            class\n            HttpResponseException\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/domain/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/domain/helpers/env.helper.ts\n            \n            function\n            expandEnvVariables\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/helpers/util.helper.ts\n            \n            function\n            naiveRound\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/helpers/util.helper.ts\n            \n            function\n            processHttpError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/helpers/util.helper.ts\n            \n            function\n            processMicroserviceHttpError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/helpers/util.helper.ts\n            \n            function\n            validateDTO\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/helpers/util.helper.ts\n            \n            function\n            validateOutputDTO\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/domain/interceptors/logger.interceptor.ts\n            \n            injectable\n            LoggerInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/domain/interfaces/http-response.interface.ts\n            \n            interface\n            HttpResponse\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/domain/pipes/validation.pipe.ts\n            \n            interface\n            ValidationPipeOptions\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/domain/repositories/account.repository.ts\n            \n            injectable\n            AccountRepository\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/domain/servicecs/Account.service.ts\n            \n            injectable\n            AccountService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/domain/servicecs/common/http-response.service.ts\n            \n            injectable\n            HttpResponseService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/domain/servicecs/common/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/infrastructure/config/env.objects.ts\n            \n            interface\n            VirtualBankOptions\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/infrastructure/config/env.objects.ts\n            \n            variable\n            configuration\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/infrastructure/config/env.validation.ts\n            \n            class\n            EnvironmentVariables\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/infrastructure/config/env.validation.ts\n            \n            function\n            validate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/infrastructure/modules/app.module.ts\n            \n            variable\n            modulesList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/cli : ^8.2.5\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @nestjs-addons/in-memory-db : ^ 3.0.3\n        \n            @nestjs/axios : 0.0.7\n        \n            @nestjs/common : ^8.4.5\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^8.4.5\n        \n            @types/express : ^4.17.8\n        \n            @nestjs/platform-express : ^7.5.5\n        \n            @nestjs/swagger : ^5.0.8\n        \n            @nestjs/terminus : ^7.2.0\n        \n            @types/dotenv-flow : ^3.1.0\n        \n            @types/faker : ^5.1.4\n        \n            @types/morgan : ^1.9.2\n        \n            @willsoto/nestjs-prometheus : ^4.6.0\n        \n            ansi-styles : ^6.1.0\n        \n            async-mutex : ^0.3.2\n        \n            cache-manager : ^3.6.1\n        \n            chokidar : ^3.5.3\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv : ^8.2.0\n        \n            dotenv-expand : ^5.1.0\n        \n            dotenv-flow : ^3.2.0\n        \n            faker : ^5.1.0\n        \n            has-flag : ^5.0.1\n        \n            morgan : ^1.10.0\n        \n            prom-client : ^14.0.1\n        \n            ramda : ^0.27.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.5.5\n        \n            skaffold : ^1.0.11\n        \n            start-server-webpack-plugin : ^2.2.5\n        \n            supports-color : ^9.2.2\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            expandEnvVariables   (src/.../env.helper.ts)\n                        \n                        \n                            naiveRound   (src/.../util.helper.ts)\n                        \n                        \n                            processHttpError   (src/.../util.helper.ts)\n                        \n                        \n                            processMicroserviceHttpError   (src/.../util.helper.ts)\n                        \n                        \n                            validate   (src/.../env.validation.ts)\n                        \n                        \n                            validateDTO   (src/.../util.helper.ts)\n                        \n                        \n                            validateOutputDTO   (src/.../util.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Main entry point of the application\n\n\n                    \n                    \n                \n            \n        \n    \n    src/domain/helpers/env.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        expandEnvVariables\n                        \n                    \n                \n            \n            \n                \nexpandEnvVariables()\n                \n            \n\n\n\n\n            \n                \n                    Expands the environmanet variables\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    src/domain/helpers/util.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        naiveRound\n                        \n                    \n                \n            \n            \n                \nnaiveRound(num: number, decimalPlaces: number)\n                \n            \n\n\n\n\n            \n                \n                    Takes a number and rounds to a percission number\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        number to be rounded\n\n                                    \n                                \n                                \n                                    decimalPlaces\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        2\n                                    \n\n                                    \n                                        number of decimal places\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processHttpError\n                        \n                    \n                \n            \n            \n                \nprocessHttpError(error: any, logger: any)\n                \n            \n\n\n\n\n            \n                \n                    processes http error that was throwed by service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        error (exception or string)\n\n                                    \n                                \n                                \n                                    logger\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        logger service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processMicroserviceHttpError\n                        \n                    \n                \n            \n            \n                \nprocessMicroserviceHttpError(error: any, logger: any)\n                \n            \n\n\n\n\n            \n                \n                    processes http error that was throwed by service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        error (exception or string)\n\n                                    \n                                \n                                \n                                    logger\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        logger service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateDTO\n                        \n                    \n                \n            \n            \n                \nvalidateDTO(dto: any, httpResponseGenerator: any)\n                \n            \n\n\n\n\n            \n                \n                    validates dto and returns bad request if it is wrong\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        dto\n\n                                    \n                                \n                                \n                                    httpResponseGenerator\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        http response service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateOutputDTO\n                        \n                    \n                \n            \n            \n                \nvalidateOutputDTO(dto: any, logger: any)\n                \n            \n\n\n\n\n            \n                \n                    validates output dto and throws an error if it is wrong\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        dto\n\n                                    \n                                \n                                \n                                    logger\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        logger service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/infrastructure/config/env.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(config: Record)\n                \n            \n\n\n\n\n            \n                \n                    validates the config\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        congig\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nbalance-checker\nThis service manages the balance of users. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nApache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n  (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and\n  (b) You must cause any modified files to carry prominent notices stating that You changed the files; and\n  (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and\n  (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.\n  You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n\n\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!)  The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpResponseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_HttpResponseModule\n\n\n\ncluster_HttpResponseModule_exports\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nCommonModule->AccountModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nHttpResponseModule \n\nHttpResponseModule \n\nHttpResponseModule  -->\n\nCommonModule->HttpResponseModule \n\n\n\n\n\nLoggerModule \n\nLoggerModule \n\nLoggerModule  -->\n\nCommonModule->LoggerModule \n\n\n\n\n\nAccountRepository\n\nAccountRepository\n\nAccountModule -->\n\nAccountRepository->AccountModule\n\n\n\n\n\nHttpResponseService\n\nHttpResponseService\n\nAccountModule -->\n\nHttpResponseService->AccountModule\n\n\n\n\n\nHttpResponseModule\n\nHttpResponseModule\n\nHttpResponseModule -->\n\nHttpResponseService->HttpResponseModule\n\n\n\nCommonModule -->\n\nHttpResponseModule->CommonModule\n\n\n\n\n\nHttpResponseService \n\nHttpResponseService \n\nHttpResponseService  -->\n\nHttpResponseModule->HttpResponseService \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCommonModule -->\n\nLoggerModule->CommonModule\n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : This service manages the balance of users.\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            allowedProperties   (src/.../create-account-request.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../create-account-response.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../deposit-money-request.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../get-account-reponse.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../get-account-request.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../show-balance-response.dto.ts)\n                        \n                        \n                            allowedProperties   (src/.../update-account-request.dto.ts)\n                        \n                        \n                            configuration   (src/.../env.objects.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            modulesList   (src/.../app.module.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/application/dtos/create-account-request.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [ 'name', 'familty', 'username','currency']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/create-account-response.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['acccount_token','id']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/deposit-money-request.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['amount']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/get-account-reponse.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['id', 'name', 'familty', 'username', 'currency','created_at', 'updated_at', 'token','balance']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/get-account-request.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['id']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/show-balance-response.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['balance']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/application/dtos/update-account-request.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['id', 'name', 'familty', 'username', 'email', 'currency']\n                    \n                \n\n            \n                \n                    List of allowed properties in this DTO\n\n                \n            \n\n        \n    \n\n    src/infrastructure/config/env.objects.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): any => ({\n    VirtualBankOptions: {\n    transaction_commission: process.env.TRANSACTION_COMMISSION,\n    widraw_commission: process.env.WIDRAW_COMMISSION,\n    deposit_fee_per_minute: process.env.DEPOSIT_FEE_PER_MINUTE\n  },\n})\n                    \n                \n\n            \n                \n                    configuration function\n\n                \n            \n\n        \n    \n\n    src/domain/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n            \n                \n                    key for public state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n            \n                \n                    decorates method as public\n\n                \n            \n\n        \n    \n\n    src/infrastructure/modules/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        modulesList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(modules).map(moduleIndex => modules[moduleIndex as keyof typeof modules])\n                    \n                \n\n            \n                \n                    application modules list\n\n                \n            \n\n        \n    \n\n    src/domain/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n            \n                \n                    retuns a list of defined roles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n            \n                \n                    keys of roles\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
